["^ ","~:output",["^ ","~:js","goog.provide('kee_frame.core');\nkee_frame.core.kee_frame_interceptors = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [kee_frame.interceptors.add_global_interceptors,kee_frame.spec.spec_interceptor(kee_frame.state.app_db_spec),kee_frame.debug.debug_interceptor(kee_frame.state.debug_QMARK_),re_frame.core.trim_v], null);\nkee_frame.core.valid_option_key_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\"debug-config\",\"debug-config\",329260673),null,new cljs.core.Keyword(null,\"routes\",\"routes\",457900162),null,new cljs.core.Keyword(null,\"screen\",\"screen\",1990059748),null,new cljs.core.Keyword(null,\"router\",\"router\",1091916230),null,new cljs.core.Keyword(null,\"app-db-spec\",\"app-db-spec\",-1030582586),null,new cljs.core.Keyword(null,\"route-change-event\",\"route-change-event\",1834214120),null,new cljs.core.Keyword(null,\"hash-routing?\",\"hash-routing?\",471914732),null,new cljs.core.Keyword(null,\"chain-links\",\"chain-links\",951542256),null,new cljs.core.Keyword(null,\"process-route\",\"process-route\",-38423566),null,new cljs.core.Keyword(null,\"debug?\",\"debug?\",-1831756173),null,new cljs.core.Keyword(null,\"scroll\",\"scroll\",971553779),null,new cljs.core.Keyword(null,\"not-found\",\"not-found\",-629079980),null,new cljs.core.Keyword(null,\"root-component\",\"root-component\",-1807026475),null,new cljs.core.Keyword(null,\"initial-db\",\"initial-db\",1939835102),null], null), null);\n/**\n * Complete listing of invalid options sent to the `start!` function.\n */\nkee_frame.core.extra_options = (function kee_frame$core$extra_options(options){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__43278){\nvar vec__43279 = p__43278;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43279,(0),null);\nreturn cljs.core.not((kee_frame.core.valid_option_key_QMARK_.cljs$core$IFn$_invoke$arity$1 ? kee_frame.core.valid_option_key_QMARK_.cljs$core$IFn$_invoke$arity$1(k) : kee_frame.core.valid_option_key_QMARK_.call(null,k)));\n}),options));\n});\n/**\n * Starts your client application with the specified `options`.\n * \n *   This function is intentionally forgiving in certain ways:\n *   - You can call it as often as you want. Figwheel should call it on each code change\n *   - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n * \n *   Usage:\n *   ```\n *   (k/start! {:debug?         true\n *           :routes         my-reitit-routes\n *           :hash-routing?  true\n *           :initial-db     {:some-property \"default value\"}\n *           :root-component [my-reagent-root-component]\n *           :app-db-spec    :spec/my-db-spec})\n *   ```\n */\nkee_frame.core.start_BANG_ = (function kee_frame$core$start_BANG_(options){\nif(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options)){\n} else {\nexpound.alpha.expound.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid options\",cljs.spec.alpha.explain_data(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options));\n}\n\nvar extras_43303 = kee_frame.core.extra_options(options);\nif(cljs.core.seq(extras_43303)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Uknown startup options. Valid keys are \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(kee_frame.core.valid_option_key_QMARK_)].join(''),extras_43303);\n} else {\n}\n\nreturn kee_frame.router.start_BANG_(options);\n});\nkee_frame.core.debug_enabled_QMARK_ = (function kee_frame$core$debug_enabled_QMARK_(){\nvar map__43282 = cljs.core.deref(kee_frame.state.debug_config);\nvar map__43282__$1 = (((((!((map__43282 == null))))?(((((map__43282.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43282.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43282):map__43282);\nvar overwrites_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__43282__$1,new cljs.core.Keyword(null,\"overwrites?\",\"overwrites?\",-1906761528),false);\nvar and__4115__auto__ = cljs.core.deref(kee_frame.state.debug_QMARK_);\nif(cljs.core.truth_(and__4115__auto__)){\nreturn overwrites_QMARK_;\n} else {\nreturn and__4115__auto__;\n}\n});\n/**\n * Put a controller config map into the global controller registry.\n * \n *   Parameters:\n * \n *   `id`: Must be unique in controllere registry. Will appear in logs.\n * \n *   `controller`: A map with the following keys:\n *   - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n *   return means that the controller should not run for this route.\n * \n *   - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n *   invocation. The function receives whatever non-nil value that was returned from `params`,\n *   and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n *   can be omitted.\n * \n *   - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n *   current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n *   can be omitted.\n */\nkee_frame.core.reg_controller = (function kee_frame$core$reg_controller(id,controller){\nif(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller)){\n} else {\nexpound.alpha.expound.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid controller\",cljs.spec.alpha.explain_data(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller));\n}\n\nif(cljs.core.truth_((function (){var and__4115__auto__ = kee_frame.core.debug_enabled_QMARK_();\nif(cljs.core.truth_(and__4115__auto__)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(kee_frame.state.controllers),id);\n} else {\nreturn and__4115__auto__;\n}\n})())){\nre_frame.core.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Overwriting controller with id \",id], 0));\n} else {\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(kee_frame.state.controllers,cljs.core.assoc,id,controller);\n});\n/**\n * Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n * \n *   `re-frame.core/trim-v` interceptor is also applied.\n */\nkee_frame.core.reg_event_fx = (function kee_frame$core$reg_event_fx(var_args){\nvar G__43286 = arguments.length;\nswitch (G__43286) {\ncase 2:\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n}));\n\n(kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(kee_frame.core.kee_frame_interceptors,interceptors),handler);\n}));\n\n(kee_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3);\n\n/**\n * Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n * \n *   `re-frame.core/trim-v` interceptor is also applied.\n */\nkee_frame.core.reg_event_db = (function kee_frame$core$reg_event_db(var_args){\nvar G__43289 = arguments.length;\nswitch (G__43289) {\ncase 2:\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n}));\n\n(kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(kee_frame.core.kee_frame_interceptors,interceptors),handler);\n}));\n\n(kee_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3);\n\n/**\n * Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n *   event log.\n * \n *   Parameters:\n * \n *   `handlers`: pairs of id and event handler.\n * \n *   Usage:\n *   ```\n *   (k/reg-chain-named\n * \n *  :load-customer-data\n *  (fn [ctx [customer-id]]\n *    {:http-xhrio {:uri \"...\"}})\n * \n *  :receive-customer-data\n *   (fn [ctx [customer-id customer-data]]\n *    (assoc-in ctx [:db :customers customer-id] customer-data)))\n *   ```\n */\nkee_frame.core.reg_chain_named = (function kee_frame$core$reg_chain_named(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___43323 = arguments.length;\nvar i__4737__auto___43324 = (0);\nwhile(true){\nif((i__4737__auto___43324 < len__4736__auto___43323)){\nargs__4742__auto__.push((arguments[i__4737__auto___43324]));\n\nvar G__43325 = (i__4737__auto___43324 + (1));\ni__4737__auto___43324 = G__43325;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn kee_frame.core.reg_chain_named.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(kee_frame.core.reg_chain_named.cljs$core$IFn$_invoke$arity$variadic = (function (handlers){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(re_chain.core.reg_chain_named_STAR_,kee_frame.core.kee_frame_interceptors,handlers);\n}));\n\n(kee_frame.core.reg_chain_named.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(kee_frame.core.reg_chain_named.cljs$lang$applyTo = (function (seq43290){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq43290));\n}));\n\n/**\n * Register a list of re-frame fx handlers, chained together.\n * \n *   The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n *   you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n * \n *   Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n *   receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n *   to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n * \n *   Parameters:\n * \n *   `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n *   if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n * \n *   `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n * \n * \n *   Usage:\n *   ```\n *   (k/reg-chain\n *  :load-customer-data\n * \n *  (fn [ctx [customer-id]]\n *    {:http-xhrio {:uri    (str \"/customer/\" customer-id)\n *                  :method :get}})\n * \n *  (fn [cxt [customer-id customer-data]\n *    (assoc-in ctx [:db :customers customer-id] customer-data)))\n *   ```\n */\nkee_frame.core.reg_chain = (function kee_frame$core$reg_chain(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___43331 = arguments.length;\nvar i__4737__auto___43332 = (0);\nwhile(true){\nif((i__4737__auto___43332 < len__4736__auto___43331)){\nargs__4742__auto__.push((arguments[i__4737__auto___43332]));\n\nvar G__43336 = (i__4737__auto___43332 + (1));\ni__4737__auto___43332 = G__43336;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn kee_frame.core.reg_chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(kee_frame.core.reg_chain.cljs$core$IFn$_invoke$arity$variadic = (function (id,handlers){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(re_chain.core.reg_chain_STAR_,id,kee_frame.core.kee_frame_interceptors,handlers);\n}));\n\n(kee_frame.core.reg_chain.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(kee_frame.core.reg_chain.cljs$lang$applyTo = (function (seq43291){\nvar G__43292 = cljs.core.first(seq43291);\nvar seq43291__$1 = cljs.core.next(seq43291);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43292,seq43291__$1);\n}));\n\n/**\n * Make a uri from route data. Useful for avoiding hard coded links in your app.\n * \n *   Parameters:\n * \n *   `handler`: The reitit handler from route data\n * \n *   `params`: Reitit route params for the requested route\n * \n *   Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`\n */\nkee_frame.core.path_for = (function kee_frame$core$path_for(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___43337 = arguments.length;\nvar i__4737__auto___43338 = (0);\nwhile(true){\nif((i__4737__auto___43338 < len__4736__auto___43337)){\nargs__4742__auto__.push((arguments[i__4737__auto___43338]));\n\nvar G__43339 = (i__4737__auto___43338 + (1));\ni__4737__auto___43338 = G__43339;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn kee_frame.core.path_for.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(kee_frame.core.path_for.cljs$core$IFn$_invoke$arity$variadic = (function (handler,params){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(kee_frame.router.url,handler,params);\n}));\n\n(kee_frame.core.path_for.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(kee_frame.core.path_for.cljs$lang$applyTo = (function (seq43294){\nvar G__43295 = cljs.core.first(seq43294);\nvar seq43294__$1 = cljs.core.next(seq43294);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43295,seq43294__$1);\n}));\n\n/**\n * Reagent component that renders different components for different routes.\n * \n *   You might need to include a case for `nil`, since there are no route data before the first navigation.\n * \n *   Parameters:\n * \n *   `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n * \n *   `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n * \n *   Returns the first component with a matching dispatch value.\n * \n *   Usage:\n *   ```\n *   [k/switch-route (fn [route] (:handler route))\n *  :index [:div \"This is index page\"]\n *  :about [:div \"This is the about page\"]\n *  nil    [:div \"Probably also the index page\"]]\n *   ```\n */\nkee_frame.core.switch_route = (function kee_frame$core$switch_route(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___43341 = arguments.length;\nvar i__4737__auto___43342 = (0);\nwhile(true){\nif((i__4737__auto___43342 < len__4736__auto___43341)){\nargs__4742__auto__.push((arguments[i__4737__auto___43342]));\n\nvar G__43343 = (i__4737__auto___43342 + (1));\ni__4737__auto___43342 = G__43343;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn kee_frame.core.switch_route.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(kee_frame.core.switch_route.cljs$core$IFn$_invoke$arity$variadic = (function (f,pairs){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(kee_frame.router.switch_route,f,pairs);\n}));\n\n(kee_frame.core.switch_route.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(kee_frame.core.switch_route.cljs$lang$applyTo = (function (seq43296){\nvar G__43297 = cljs.core.first(seq43296);\nvar seq43296__$1 = cljs.core.next(seq43296);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__43297,seq43296__$1);\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","kee_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$kee-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","^D","^E","~$i","~$kee-frame.interceptors","~$kee-frame.state","^R","~$re-chain.core","^S","~$expound.alpha","^T","~$rf","~$re-frame.core","~$cljs.core","^W","~$goog","^X","~$router","~$kee-frame.router","^Z","^Z","~$kee-frame.debug","^[","~$state","^R","^Q","^Q","~$e","^T","~$s","^E","~$spec","~$kee-frame.spec","^12","^12","^E","^E","~$chain","^S","^V","^V"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$console","^V","~$spec-interceptor","^12","~$debug-interceptor","^["],"~:require-macros",["^ ","^W","^W","^D","^E","~$s","^E","^E","^E"],"~:form",["~#list",["~$ns","^L",["^1<",["^15",["^R","~:as","^10"],["^Z","^1>","^Y"],["^S","^1>","^13"],["^V","^1>","^U","~:refer",["^17"]],["^12","^1>","^11","^1?",["^18"]],["^[","^1?",["^19"]],["^Q","^1>","~$i"],["^D","^1>","~$s"],["^T","^1>","~$e"]]]]],"~:flags",["^ ","^15",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^R","^Z","^S","^V","^12","^[","^Q","^E","^T"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","kee_frame/core.cljc"],"~:compiled-at",1629656146310,"~:resource-name","kee_frame/core.cljc","~:warnings",[],"~:source","(ns kee-frame.core\n  (:require [kee-frame.state :as state]\n            [kee-frame.router :as router]\n            [re-chain.core :as chain]\n            [re-frame.core :as rf :refer [console]]\n            [kee-frame.spec :as spec :refer [spec-interceptor]]\n            [kee-frame.debug :refer [debug-interceptor]]\n            [kee-frame.interceptors :as i]\n            [clojure.spec.alpha :as s]\n            [expound.alpha :as e]))\n\n;; Interceptors used by all chains and events registered through kee-frame\n(def kee-frame-interceptors [i/add-global-interceptors (spec-interceptor state/app-db-spec) (debug-interceptor state/debug?) rf/trim-v])\n\n(def valid-option-key? #{:router :hash-routing? :routes :process-route :debug? :debug-config\n                         :chain-links :app-db-spec :root-component :initial-db\n                         :screen :scroll :route-change-event :not-found})\n\n(defn extra-options\n  \"Complete listing of invalid options sent to the `start!` function.\"\n  [options]\n  (->> options\n       (filter (fn [[k]] (not (valid-option-key? k))))\n       (into {})))\n\n(defn start!\n  \"Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \\\"default value\\\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```\"\n  [options]\n  (when-not (s/valid? ::spec/start-options options)\n    (e/expound ::spec/start-options options)\n    (throw (ex-info \"Invalid options\" (s/explain-data ::spec/start-options options))))\n  (let [extras (extra-options options)]\n    (when (seq extras)\n      (throw (ex-info (str \"Uknown startup options. Valid keys are \" valid-option-key?) extras))))\n  (router/start! options))\n\n(defn debug-enabled? []\n  (let [{:keys [overwrites?]\n         :or   {overwrites? false}} @state/debug-config]\n    (and @state/debug?\n         overwrites?)))\n\n(defn reg-controller\n  \"Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\"\n  [id controller]\n  (when-not (s/valid? ::spec/controller controller)\n    (e/expound ::spec/controller controller)\n    (throw (ex-info \"Invalid controller\" (s/explain-data ::spec/controller controller))))\n  (when (and (debug-enabled?)\n             (get @state/controllers id))\n    (console :warn \"Overwriting controller with id \" id))\n  (swap! state/controllers assoc id controller))\n\n(defn reg-event-fx\n  \"Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.\"\n  ([id handler] (reg-event-fx id nil handler))\n  ([id interceptors handler] (rf/reg-event-fx id (concat kee-frame-interceptors interceptors) handler)))\n\n(defn reg-event-db\n  \"Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.\"\n  ([id handler] (reg-event-db id nil handler))\n  ([id interceptors handler] (rf/reg-event-db id (concat kee-frame-interceptors interceptors) handler)))\n\n(defn reg-chain-named\n  \"Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \\\"...\\\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```\"\n  [& handlers]\n  (apply chain/reg-chain-named* kee-frame-interceptors handlers))\n\n(defn reg-chain\n  \"Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \\\"/customer/\\\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```\"\n  [id & handlers]\n  (apply chain/reg-chain* id kee-frame-interceptors handlers))\n\n(defn path-for\n  \"Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \\\"Orders sorted by date\\\"]`\"\n  [handler & params]\n  (apply router/url handler params))\n\n(defn switch-route\n  \"Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \\\"This is index page\\\"]\n    :about [:div \\\"This is the about page\\\"]\n    nil    [:div \\\"Probably also the index page\\\"]]\n  ```\"\n  [f & pairs]\n  (apply router/switch-route f pairs))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["kee-frame.core/kee-frame-interceptors","kee-frame.interceptors/add-global-interceptors","kee-frame.spec/spec-interceptor","kee-frame.state/app-db-spec","kee-frame.debug/debug-interceptor","kee-frame.state/debug?","re-frame.core/trim-v","kee-frame.core/valid-option-key?","kee-frame.core/extra-options","options","cljs.core.filter","p__43278","vec__43279","cljs.core.nth","k","cljs.core/not","cljs.core.into","kee-frame.core/start!","cljs.spec.alpha.valid_QMARK_","expound.alpha.expound","cljs.core.ex_info","cljs.spec.alpha/explain-data","extras","cljs.core/seq","kee-frame.router/start!","kee-frame.core/debug-enabled?","map__43282","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","overwrites?","kee-frame.state/debug-config","and__4115__auto__","kee-frame.core/reg-controller","id","controller","kee-frame.state/controllers","re_frame.core.console","cljs.core.swap_BANG_","cljs.core/assoc","var_args","G__43286","kee-frame.core/reg-event-fx","js/Error","handler","kee_frame.core.reg_event_fx","interceptors","re_frame.core.reg_event_fx","cljs.core.concat","G__43289","kee-frame.core/reg-event-db","kee_frame.core.reg_event_db","re_frame.core.reg_event_db","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","kee-frame.core/reg-chain-named","seq43290","self__4724__auto__","handlers","re-chain.core/reg-chain-named*","kee-frame.core/reg-chain","seq43291","G__43292","cljs.core/first","cljs.core/next","self__4723__auto__","re-chain.core/reg-chain*","kee-frame.core/path-for","seq43294","G__43295","params","kee-frame.router/url","kee-frame.core/switch-route","seq43296","G__43297","f","pairs","kee-frame.router/switch-route"]],"~:used-vars",["^J",["~$re-chain.core/reg-chain*","~$cljs.core/filter","~$kee-frame.core/switch-route","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/apply","~$kee-frame.core/reg-chain-named","~$kee-frame.interceptors/add-global-interceptors","~$kee-frame.state/debug?","~$kee-frame.router/url","~$kee-frame.core/valid-option-key?","~$cljs.core/concat","~$re-frame.core/reg-event-db","~$cljs.spec.alpha/explain-data","~$re-frame.core/trim-v","~$cljs.core/into","~$kee-frame.debug/debug-interceptor","~$cljs.core/swap!","~$kee-frame.router/switch-route","~$kee-frame.state/controllers","~$cljs.core/get","~$re-frame.core/reg-event-fx","~$kee-frame.router/start!","~$expound.alpha/expound","~$kee-frame.core/reg-event-db","~$cljs.spec.alpha/valid?","~$cljs.core/ex-info","~$kee-frame.core/extra-options","~$kee-frame.core/reg-controller","~$cljs.core/not","~$kee-frame.core/start!","~$kee-frame.core/kee-frame-interceptors","~$cljs.core/assoc","~$kee-frame.core/path-for","~$re-frame.core/console","~$kee-frame.core/reg-event-fx","~$re-chain.core/reg-chain-named*","~$kee-frame.core/debug-enabled?","~$js/Error","~$kee-frame.core/reg-chain","~$kee-frame.spec/spec-interceptor","~$kee-frame.state/app-db-spec"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1D","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$reagent.debug","~$reagent.impl.util"]]],["^1D","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.dom.HtmlElement"]]],["^1D","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$cljs.core.async.impl.protocols"]]],["^1D","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.labs.userAgent.util","~$goog.string"]]],["^1D","expound/util.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^2[","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1D","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.Promise","~$goog.events.EventTarget"]]],["^1D","cljs/spec/gen/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$goog.Uri"]]],["^1D","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","~$goog.asserts"]]],["^1D","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^31"]]],["^1D","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1D","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^30","~$goog.object","~$goog.string.internal"]]],["^1D","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3?"]]],["^1D","re_frame/loggers.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$clojure.set"]]],["^1D","kee_frame/state.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/style/style.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^3>","~$goog.reflect","^31","^3="]]],["^1D","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;"]]],["^2P","node_modules/prop-types/checkPropTypes.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1D","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$clojure.string"]]],["^1D","expound/problems.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$expound.paths","^E"]]],["^1D","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^30","^3P","^31"]]],["^1D","re_frame/router.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$re-frame.events","~$re-frame.interop","~$re-frame.loggers","~$re-frame.trace"]]],["^1D","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1D","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1D","com/cognitect/transit/impl/reader.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1D","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/net/xhrmanager.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.events","~$goog.events.Event","~$goog.events.EventHandler","^39","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.structs.Map"]]],["^1D","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.async.FreeList"]]],["^1D","ajax/interceptors.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","~$ajax.util","~$ajax.url","~$ajax.protocols"]]],["^1D","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^3<","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1D","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","re_frame/registrar.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3X","^3Y","~$re-frame.settings"]]],["^1D","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3="]]],["^1D","goog/useragent/product_isversion.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3V","^31","^3=","~$goog.userAgent.product"]]],["^1D","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.structs.Heap"]]],["^1D","reitit/exception.cljc"],["68e910246472b74891a163d6dd79abeea8a0b5c8","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R"]]],["^1D","goog/fx/animation.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^47","~$goog.fx.Transition","~$goog.fx.TransitionBase","~$goog.fx.anim","~$goog.fx.anim.Animated"]]],["^1D","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.Timer","^37","^3;","^4B","^39","~$goog.json.hybrid","~$goog.log","^49","^4:","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^3>","^31","~$goog.structs","^4=","~$goog.uri.utils","^3="]]],["^1D","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/color/color.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.color.names","~$goog.math"]]],["^1D","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/async/animationdelay.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.Disposable","^46","~$goog.functions"]]],["^1D","com/cognitect/transit/util.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3>"]]],["^1D","cljs/pprint.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^31","~$goog.string.StringBuffer"]]],["^1D","ajax/protocols.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","ajax/transit.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$cognitect.transit","~$ajax.interceptors","^4A","^4?"]]],["^1D","expound/alpha.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$expound.problems","^E","^3R","^3F","~$clojure.walk","~$expound.printer","~$expound.util","~$expound.ansi","^G"]]],["^1D","goog/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^31","^3="]]],["^2P","node_modules/scheduler/cjs/scheduler.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","7d8513ea2b82a7b8f00a1fd322704005205046bc","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^1D","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1D","ajax/simple.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^4A","^4Z","~$ajax.formats","^4?","^4;"]]],["^1D","kee_frame/router.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$kee-frame.interop","^V","^S","~$kee-frame.api","^R","~$kee-frame.scroll","~$kee-frame.controller","~$reitit.core","^3R","^E","^12","^T"]]],["^1D","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^2Y","^2X","~$reagent.impl.batching","^3F","^3>"]]],["^2P","node_modules/scheduler/cjs/scheduler.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","19e07f39891e78ec50904d00e33146e92404379f","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^1D","re_frame/interop.cljs"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^42","^46","~$reagent.core","~$reagent.ratom"]]],["^1D","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4V","^3;","^46","^47","^4D","^4E","^3>"]]],["^1D","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.disposable.IDisposable"]]],["^1D","ajax/url.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^4?"]]],["^1D","expound/ansi.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R"]]],["^1D","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^2P","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","d9f1d6c2a711a6903adf603db43d9f9e19057146","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^2P","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1D","shadow/js.js"],["5d2e4e955ab1a108e2ebc0c9b87ba78f8be4edbc","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^A","^3R","^50","^2Y","~$reagent.impl.component","^5<","^5>","^2X","^3>"]]],["^1D","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;"]]],["^2P","node_modules/react-dom/cjs/react-dom.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","d5ed1c931c99ccc1a772592a9e96c018d814f7fd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","^A","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],["^1D","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4R","~$goog.structs.Collection","^4="]]],"~:SHADOW-TIMESTAMP",[1629655917000,1629655917000,1627685954000],["^2P","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","0c9d0acaa1ab1e24333c71607d0fa0609193e7d7","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","^5C","~$module$node_modules$prop_types$checkPropTypes"]]],["^1D","ajax/xml_http_request.cljs"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4A","^31"]]],["^1D","re_frame/events.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$re-frame.db","~$re-frame.utils","^3X","~$re-frame.registrar","^3Y","~$re-frame.interceptor","^3Z"]]],["^1D","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^3P"]]],["^1D","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.events.ListenableKey"]]],["^1D","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.html.trustedtypes","^3B","^3C","^3D","^3E"]]],["^1D","kee_frame/interceptors.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V","^5J"]]],["^1D","goog/math/irect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^2[","^35","^33"]]],["^1D","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","~$goog.events.Listener","^3>"]]],["^1D","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/math/box.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^3M"]]],["^1D","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/color/names.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^2P","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","0b00a799c88b303e4c3e8fe2628f7bde50128f0d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^1D","kee_frame/spec.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^5K","^V","^E","^S","^T","^58"]]],["^1D","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^33","^42"]]],["^1D","re_chain/core.cljc"],["371131e7417da56e1e34220ec038da36d6795bad","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^50","^V","^E","^T"]]],["^1D","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","~$goog.html.SafeUrl","^3D","^3E","^3?"]]],["^1D","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.dom.asserts","^4W","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^5O","^3A","~$goog.html.uncheckedconversions","^3D","^3?"]]],["^1D","expound/paths.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^E","^52"]]],["^1D","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3>","^A","^2Y","^5<","^5>","^2X"]]],["^1D","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/useragent/product.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3T","^3V","^3="]]],["^1D","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1D","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4;","~$goog.structs.PriorityPool"]]],["^1D","com/cognitect/transit/delimiters.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^3I","~$goog.dom.tags","^5R","^5S","^3K","^5O","^3A","^5M","^3B","^3C","^3T","^3>","^3D","^3E","^3?"]]],["^1D","kee_frame/debug.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V","^5K","~$clojure.data","^R"]]],["^1D","ajax/easy.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$ajax.simple","~$ajax.transit","~$ajax.json","~$ajax.ring","^4@","^56"]]],["^1D","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3>"]]],["^1D","ajax/util.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4A"]]],["^1D","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","ajax/xhrio.cljs"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4:","^49","^4;","~$goog.net.XhrManager","^3:","~$goog.json","^46","^4A"]]],["^1D","re_frame_fx/dispatch.cljs"],["0fde6766840ef5521e09d0f042f78f823780d1d4","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V"]]],["^2P","node_modules/scheduler/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","408126fc2241739168bcaf5965ae56a7df143144","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1D","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37"]]],["^1D","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^30","^31"]]],["^1D","ajax/ring.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4Z","^4A","^56"]]],["^1D","com/cognitect/transit/impl/decoder.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^45","~$com.cognitect.transit.types"]]],["^1D","breaking_point/core.cljs"],["cb5a1835d728581d28517046ff395988ad374e13","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V","~$re-frame-fx.dispatch"]]],["^1D","goog/fx/anim/anim.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.async.AnimationDelay","~$goog.async.Delay","^3>"]]],["^1D","goog/history/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","re_frame/settings.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3X","^3Y"]]],["^1D","goog/history/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^47","~$goog.history.EventType"]]],["^1D","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","~$goog.dom.BrowserFeature","^3H","^3I","~$goog.dom.safe","^5Q","^5T","^3M","^3O","^3>","^31","~$goog.string.Unicode","^3="]]],["^1D","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.debug.Error","^3H"]]],["^1D","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^2["]]],["^1D","goog/math/rect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^3L","^3M","~$goog.math.IRect","^3O"]]],["^1D","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.debug.LogRecord"]]],["^1D","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^31","^4R","^4=","^4S","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/history/html5history.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^46","^39","~$goog.events.EventType","~$goog.history.Event"]]],["^1D","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^2P","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^1D","reitit/trie.cljc"],["68e910246472b74891a163d6dd79abeea8a0b5c8","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","~$reitit.exception"]]],["^1D","re_frame/db.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3X"]]],["^1D","cljs/core/match.cljs"],["bb9239ff00de4667da113b63977ca3eaf127561b","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.Thenable","^3;","^4>","~$goog.async.run","^43","^6@","~$goog.promise.Resolver"]]],["^1D","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^2[","^32","^35"]]],["^1D","cljs/spec/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3>","^50","^G","^3R"]]],["^1D","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",[]]],["^1D","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^63"]]],["^1D","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3>"]]],["^1D","kee_frame/controller.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V","~$cljs.core.match","^R","^12","~$kee-frame.fsm.alpha","^E","^T"]]],["^1D","goog/fx/transition.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^31","^4X"]]],["^1D","kee_frame/fsm/alpha.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^E","^V","^57","^Q","^5="]]],["^1D","meta_merge/core.cljc"],["28cbe836fdf7de02801fe0bdbb30eb2fd842e8d9","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3F"]]],["^1D","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4V","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1D","re_frame/cofx.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^5H","^5K","^5J","^3Y"]]],["^2P","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a25ef7d1b1992294ca65e96d70e1be7f70977b13","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","^5C"]]],["^1D","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","com/cognitect/transit/handlers.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^66","^68","~$goog.math.Long"]]],["^1D","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3>","~$goog.structs.Node"]]],["^1D","ajax/json.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4Y","^50","^4Z","^4A"]]],["^1D","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;"]]],["^1D","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^6>","^5T","^3D","^3?"]]],["^1D","com/cognitect/transit/types.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^66","~$com.cognitect.transit.eq","^6O"]]],["^1D","ajax/formats.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^4Z","^4?","^4A"]]],["^1D","re_frame/interceptor.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3Y","^3X","^3Z","^3F"]]],["^1D","accountant/core.cljs"],["60dc6e69644c0a79bc9ec91ac8a6f29a89f89c72","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^46","^6<","^6F","~$goog.history.Html5History","^3:"]]],["^1D","clojure/data.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3F"]]],["^1D","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3?"]]],["^1D","expound/printer.cljc"],["757c1e307707f1a8125157a5677dce3b34d74139","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^E","^?","^3F","^52","^53","^3S","^50","~$goog.string.format","^31"]]],["^1D","com/cognitect/transit/eq.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^66"]]],["^1D","reagent/core.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^A","~$reagent.impl.template","^5B","^2Y","^5<","^5>","^2X","~$reagent.dom"]]],["^1D","kee_frame/core.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^R","^Z","^S","^V","^12","^[","^Q","^E","^T"]]],["^1D","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","~$goog.debug.errorcontext","^3="]]],["^1D","day8/re_frame/http_fx.cljs"],["a441101ceadba34baaa2c627dcf099514889760c","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^49","^V","~$ajax.core","^4;"]]],["^1D","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4U"]]],["^1D","re_frame/std_interceptors.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^5K","^3Y","^4F","^5H","^5Y","~$re-frame.cofx","^5I","^3Z"]]],["^1D","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/async/delay.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4V","^4M"]]],["^1D","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^4W","^4U"]]],["^1D","ajax/core.cljc"],["e833b7820e7047a5d0e77b625d4ed7d0c4857c04","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^4@","^60","^5[","^61","^56","^4?","^4Z","^5Z","~$ajax.easy","^4A","~$ajax.xhrio","~$ajax.xml-http-request"]]],["^1D","kee_frame/api.cljc"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4B","^3G","^3I","^6>","^4W","^5Q","^3A","^3T","^3U","^3D"]]],["^1D","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^5Q","^5R","^5S","^3K","^5O","^3A","^3D","^3?"]]],["^1D","re_frame/utils.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3Y"]]],["^1D","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^C","^2Y","^6T","^5<","^5>"]]],["^1D","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","~$goog.debug","~$goog.debug.LogBuffer","^6B"]]],["^1D","com/cognitect/transit/caching.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^67"]]],["^1D","re_frame/fx.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$re-frame.router","^5H","^5K","^3X","^3W","^5J","^3Y","^3Z"]]],["^2P","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U"]]],["^1D","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4V","~$goog.events.EventId"]]],["^1D","reitit/core.cljc"],["68e910246472b74891a163d6dd79abeea8a0b5c8","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$reitit.impl","^6G","~$reitit.trie"]]],["^1D","kee_frame/interop.cljs"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^58","~$accountant.core","^6U","^V","~$day8.re-frame.http-fx","~$breaking-point.core","^3Y"]]],["^1D","goog/events/eventhandler.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^4V","^46","^3>"]]],["^1D","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^6O","~$goog.math.Integer","^31","^3>","^37","^3:","^4X"]]],["^1D","com/cognitect/transit.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^66","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^68","^6Q","^44","^45"]]],["^1D","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^5M","^3D","^3E"]]],["^1D","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^70","~$goog.debug.LogManager","^6B","~$goog.debug.Logger"]]],["^1D","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^5S","^3>","^3D","^3E","^3?"]]],["^1D","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^70","^3<","^47","^6E","^3P","^3="]]],["^1D","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3P"]]],["^1D","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3="]]],["^2P","node_modules/scheduler/tracing.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2P","node_modules/react-dom/cjs/react-dom.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","19dc160595b3eb8999f04fe10db88fd747daa853","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^2U","^A","^5C","^5D","^5G","~$module$node_modules$scheduler$tracing"]]],["^1D","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W"]]],["^1D","kee_frame/scroll.cljs"],["d14a54800f7309b0f5efeee8f32d9a9730407fd0","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^V","^6W","^5=","~$clerk.core"]]],["^1D","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^37","^3;","^31"]]],["^1D","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","^3E"]]],["^1D","goog/fx/transitionbase.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^39","^4I"]]],["^1D","goog/dom/vendor.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^31","^3="]]],["^1D","reitit/impl.cljc"],["68e910246472b74891a163d6dd79abeea8a0b5c8","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3R","^3F","~$meta-merge.core","^75","^6G"]]],["^1D","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","clerk/core.cljs"],["ed19a65e9537b00ce0a85ce304555299f5e49953","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^46","^6E","~$goog.fx.dom","^3G","~$goog.style","~$cljs.core.async","^3:"]]],["^1D","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^73"]]],["^1D","com/cognitect/transit/impl/writer.js"],["01d599615e2538e52fcbfe28dfb19148824a8944","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^66","^45","~$com.cognitect.transit.handlers","^68","^67","^6O"]]],["^1D","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^54"]]],["^1D","goog/fx/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","~$goog.color","^46","~$goog.fx.Animation","^4I","^7D","~$goog.style.bidi"]]],["^1D","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3;","~$goog.net.WrapperXmlHttpFactory","^55"]]],["^1D","re_frame/trace.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3X","^3Y","^4W"]]],["^1D","re_frame/subs.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^5H","^3X","^3Y","^5I","^5J","^3Z"]]],["^1D","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X"]]],["^1D","cognitect/transit.cljs"],["ad84ab433eb8b60faeacb580428cb748997b0ff3","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","~$com.cognitect.transit","^68","^6Q","^6O"]]],["^1D","re_frame/core.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^W","^3W","~$re-frame.subs","^3X","^5H","~$re-frame.fx","^6X","^72","^4F","^3Y","^5J","^5K","~$re-frame.std-interceptors","^5I","^3F"]]],["^1D","goog/style/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2Q",["^ ","^2R",null,"^2S",["^J",[]],"^2T",["^X","^3G","^7D","^3=","~$goog.userAgent.platform","^4G","~$goog.userAgent.product.isVersion"]]]]],"~:clj-info",["^ ","jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/pprint.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1629655915000,"jar:file:/Users/rohanmehta/.m2/repository/metosin/reitit-core/0.4.2/reitit-core-0.4.2.jar!/reitit/exception.cljc",1629655916000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1627054511000,"jar:file:/Users/rohanmehta/.m2/repository/meta-merge/meta-merge/1.0.0/meta-merge-1.0.0.jar!/meta_merge/core.cljc",1629655916000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.match/1.0.0/core.match-1.0.0.jar!/cljs/core/match.clj",1629655913000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1629655899000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1627054511000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1627054511000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1629655899000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1627054507000,"jar:file:/Users/rohanmehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/metosin/reitit-core/0.4.2/reitit-core-0.4.2.jar!/reitit/trie.cljc",1629655916000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1629655899000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1627054511000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1629655899000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1627054511000,"jar:file:/Users/rohanmehta/.m2/repository/re-frame/re-frame/1.1.1/re-frame-1.1.1.jar!/re_frame/interop.clj",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/gen/alpha.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/metosin/reitit-core/0.4.2/reitit-core-0.4.2.jar!/reitit/impl.cljc",1629655916000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1629655899000,"jar:file:/Users/rohanmehta/.m2/repository/cljs-ajax/cljs-ajax/0.8.0/cljs-ajax-0.8.0.jar!/ajax/macros.clj",1629655917000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/alpha.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1629655901000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/re-frame/re-frame/1.1.1/re-frame-1.1.1.jar!/re_frame/trace.cljc",1629655914000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1627685954000,"jar:file:/Users/rohanmehta/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1627054511000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","kee_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",19],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^D","^E","~$i","^Q","^R","^R","^S","^S","^T","^T","^U","^V","^W","^W","^X","^X","^Y","^Z","^Z","^Z","^[","^[","^10","^R","^Q","^Q","~$e","^T","~$s","^E","^11","^12","^12","^12","^E","^E","^13","^S","^V","^V"],"^14",["^J",["^15"]],"~:shadow/js-access-global",["^J",["Error"]],"^16",["^ ","^17","^V","^18","^12","^19","^["],"~:defs",["^ ","~$switch-route",["^ ","~:protocol-inline",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",168,"^8",7,"^9",168,"^:",19,"~:arglists",["^1<",["~$quote",["^1<",[["~$f","~$&","~$pairs"]]]]],"~:doc","Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \"This is index page\"]\n    :about [:div \"This is the about page\"]\n    nil    [:div \"Probably also the index page\"]]\n  ```","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^1<",["~$f","^90"]]],"^8Z",["^1<",[["~$f","~$&","^90"]]],"~:arglists-meta",["^1<",[null]]]],"^K","^1R","^6","kee_frame/core.cljc","^:",19,"^92",["^ ","^93",true,"^94",1,"^95",1,"^96",[["^1<",["~$f","^90"]]],"^8Z",["^1<",[["~$f","~$&","^90"]]],"^97",["^1<",[null]]],"^96",[["^1<",["~$f","^90"]]],"~:protocol-impl",null,"^94",1,"^97",["^1<",[null]],"^8",1,"^93",true,"~:methods",[["^ ","^94",1,"^93",true,"~:tag","~$any"]],"^7",168,"~:ret-tag","^9;","^9",168,"^95",1,"~:fn-var",true,"^8Z",["^1<",[["~$f","~$&","^90"]]],"^91","Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \"This is index page\"]\n    :about [:div \"This is the about page\"]\n    nil    [:div \"Probably also the index page\"]]\n  ```"],"~$start!",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",26,"^8",7,"^9",26,"^:",13,"^8Z",["^1<",["^8[",["^1<",[["~$options"]]]]],"^91","Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \"default value\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```"],"^K","^2B","^6","kee_frame/core.cljc","^:",13,"^96",["^1<",[["^9?"]]],"^98",null,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^7",26,"^9<",["^J",["^9;","~$clj-nil"]],"^9",26,"^95",1,"^9=",true,"^8Z",["^1<",["^8[",["^1<",[["^9?"]]]]],"^91","Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \"default value\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```"],"~$reg-controller",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",57,"^8",7,"^9",57,"^:",21,"^8Z",["^1<",["^8[",["^1<",[["~$id","~$controller"]]]]],"^91","Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted."],"^K","^2@","^6","kee_frame/core.cljc","^:",21,"^96",["^1<",[["^9B","^9C"]]],"^98",null,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^7",57,"^9<",["^J",[null,"^9;"]],"^9",57,"^95",2,"^9=",true,"^8Z",["^1<",["^8[",["^1<",[["^9B","^9C"]]]]],"^91","Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted."],"~$reg-event-db",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",92,"^8",7,"^9",92,"^:",19,"^8Z",["^1<",["^8[",["^1<",[["^9B","~$handler"],["^9B","~$interceptors","^9E"]]]]],"^91","Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.","^92",["^ ","^93",false,"^94",3,"^95",3,"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^97",["^1<",[null,null]]]],"^K","^2<","^6","kee_frame/core.cljc","^:",19,"^92",["^ ","^93",false,"^94",3,"^95",3,"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^97",["^1<",[null,null]]],"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^98",null,"^94",3,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^99",[["^ ","^94",2,"^93",false,"^9:","^9;"],["^ ","^94",3,"^93",false,"^9:","^9;"]],"^7",92,"^9",92,"^95",3,"^9=",true,"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^91","Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied."],"~$valid-option-key?",["^ ","^K","^1Z","^6","kee_frame/core.cljc","^7",15,"^8",1,"^9",15,"^:",23,"^5",["^ ","^6","kee_frame/core.cljc","^7",15,"^8",6,"^9",15,"^:",23],"^9:","~$cljs.core/ISet"],"~$extra-options",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",19,"^8",7,"^9",19,"^:",20,"^8Z",["^1<",["^8[",["^1<",[["^9?"]]]]],"^91","Complete listing of invalid options sent to the `start!` function."],"^K","^2?","^6","kee_frame/core.cljc","^:",20,"^96",["^1<",[["^9?"]]],"^98",null,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^7",19,"^9<",["^J",[null,"~$clj","^9;"]],"^9",19,"^95",1,"^9=",true,"^8Z",["^1<",["^8[",["^1<",[["^9?"]]]]],"^91","Complete listing of invalid options sent to the `start!` function."],"~$reg-chain-named",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",99,"^8",7,"^9",99,"^:",22,"^8Z",["^1<",["^8[",["^1<",[["~$&","~$handlers"]]]]],"^91","Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \"...\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```","^92",["^ ","^93",true,"^94",0,"^95",0,"^96",[["^1<",["^9L"]]],"^8Z",["^1<",[["~$&","^9L"]]],"^97",["^1<",[null]]]],"^K","^1V","^6","kee_frame/core.cljc","^:",22,"^92",["^ ","^93",true,"^94",0,"^95",0,"^96",[["^1<",["^9L"]]],"^8Z",["^1<",[["~$&","^9L"]]],"^97",["^1<",[null]]],"^96",[["^1<",["^9L"]]],"^98",null,"^94",0,"^97",["^1<",[null]],"^8",1,"^93",true,"^99",[["^ ","^94",0,"^93",true,"^9:","^9;"]],"^7",99,"^9<","^9;","^9",99,"^95",0,"^9=",true,"^8Z",["^1<",[["~$&","^9L"]]],"^91","Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \"...\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```"],"~$debug-enabled?",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",21,"^8Z",["^1<",["^8[",["^1<",[[]]]]]],"^K","^2I","^6","kee_frame/core.cljc","^:",21,"^96",["^1<",[[]]],"^98",null,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^7",51,"^9<",["^J",[null,"^9;"]],"^9",51,"^95",0,"^9=",true,"^8Z",["^1<",["^8[",["^1<",[[]]]]]],"~$kee-frame-interceptors",["^ ","^K","^2C","^6","kee_frame/core.cljc","^7",13,"^8",1,"^9",13,"^:",28,"^5",["^ ","^6","kee_frame/core.cljc","^7",13,"^8",6,"^9",13,"^:",28],"^9:","~$cljs.core/IVector"],"~$path-for",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",155,"^8",7,"^9",155,"^:",15,"^8Z",["^1<",["^8[",["^1<",[["^9E","~$&","~$params"]]]]],"^91","Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`","^92",["^ ","^93",true,"^94",1,"^95",1,"^96",[["^1<",["^9E","^9Q"]]],"^8Z",["^1<",[["^9E","~$&","^9Q"]]],"^97",["^1<",[null]]]],"^K","^2E","^6","kee_frame/core.cljc","^:",15,"^92",["^ ","^93",true,"^94",1,"^95",1,"^96",[["^1<",["^9E","^9Q"]]],"^8Z",["^1<",[["^9E","~$&","^9Q"]]],"^97",["^1<",[null]]],"^96",[["^1<",["^9E","^9Q"]]],"^98",null,"^94",1,"^97",["^1<",[null]],"^8",1,"^93",true,"^99",[["^ ","^94",1,"^93",true,"^9:","^9;"]],"^7",155,"^9<","^9;","^9",155,"^95",1,"^9=",true,"^8Z",["^1<",[["^9E","~$&","^9Q"]]],"^91","Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`"],"~$reg-chain",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",122,"^8",7,"^9",122,"^:",16,"^8Z",["^1<",["^8[",["^1<",[["^9B","~$&","^9L"]]]]],"^91","Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \"/customer/\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```","^92",["^ ","^93",true,"^94",1,"^95",1,"^96",[["^1<",["^9B","^9L"]]],"^8Z",["^1<",[["^9B","~$&","^9L"]]],"^97",["^1<",[null]]]],"^K","^2K","^6","kee_frame/core.cljc","^:",16,"^92",["^ ","^93",true,"^94",1,"^95",1,"^96",[["^1<",["^9B","^9L"]]],"^8Z",["^1<",[["^9B","~$&","^9L"]]],"^97",["^1<",[null]]],"^96",[["^1<",["^9B","^9L"]]],"^98",null,"^94",1,"^97",["^1<",[null]],"^8",1,"^93",true,"^99",[["^ ","^94",1,"^93",true,"^9:","^9;"]],"^7",122,"^9<","^9;","^9",122,"^95",1,"^9=",true,"^8Z",["^1<",[["^9B","~$&","^9L"]]],"^91","Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \"/customer/\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```"],"~$reg-event-fx",["^ ","^8Y",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",85,"^8",7,"^9",85,"^:",19,"^8Z",["^1<",["^8[",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]]]],"^91","Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.","^92",["^ ","^93",false,"^94",3,"^95",3,"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^97",["^1<",[null,null]]]],"^K","^2G","^6","kee_frame/core.cljc","^:",19,"^92",["^ ","^93",false,"^94",3,"^95",3,"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^97",["^1<",[null,null]]],"^96",[["^9B","^9E"],["^9B","^9F","^9E"]],"^98",null,"^94",3,"^97",["^1<",[null,null]],"^8",1,"^93",false,"^99",[["^ ","^94",2,"^93",false,"^9:","^9;"],["^ ","^94",3,"^93",false,"^9:","^9;"]],"^7",85,"^9",85,"^95",3,"^9=",true,"^8Z",["^1<",[["^9B","^9E"],["^9B","^9F","^9E"]]],"^91","Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied."]],"^1:",["^ ","^W","^W","^D","^E","~$s","^E","^E","^E"],"~:cljs.analyzer/constants",["^ ","^14",["^J",["~:debug-config","~:routes","~:screen","~:router","~:app-db-spec","~:overwrites?","~:route-change-event","~:warn","~:hash-routing?","~:chain-links","~:process-route","~:debug?","~:scroll","~:not-found","~:root-component","~:kee-frame.spec/start-options","~:kee-frame.spec/controller","~:initial-db"]],"~:order",["^9U","^9V","^9W","^9X","^9Y","^9[","^:1","^:2","^:3","^:4","^:5","^:6","^:7","^::","^:8","^9Z","^:9","^:0"]],"^1@",["^ ","^15",["^J",[]]],"^1A",["^ "],"^1B",["^X","^W","^R","^Z","^S","^V","^12","^[","^Q","^E","^T"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2O",[["^:>","~:static-fns"],true,["^:>","~:shadow-tweaks"],null,["^:>","~:source-map-inline"],null,["^:>","~:elide-asserts"],false,["^:>","~:optimize-constants"],null,["^:>","^1G"],null,["^:>","~:external-config"],null,["^:>","~:tooling-config"],null,["^:>","~:emit-constants"],null,["^:>","~:load-tests"],null,["^:>","~:form-size-threshold"],null,["^:>","~:data-readers"],null,["^:>","~:infer-externs"],"~:auto",["^:>","^1I"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:>","~:fn-invoke-direct"],null,["^:>","~:source-map"],"/dev/null"]]]