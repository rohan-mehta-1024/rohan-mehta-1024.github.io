["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\n/**\n * Regular expression that parses a CSS-style id and class\n *           from a tag name.\n */\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\n\n/**\n* @constructor\n*/\nreagent.impl.template.NativeWrapper = (function (tag,id,className){\nthis.tag = tag;\nthis.id = id;\nthis.className = className;\n});\n\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null)], null);\n}));\n\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.impl.template/NativeWrapper\");\n}));\n\n/**\n * Positional factory function for reagent.impl.template/NativeWrapper.\n */\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\n});\n\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x === 'string'));\n});\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)));\n});\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\nif(o.hasOwnProperty(k)){\nreturn goog.object.get(o,k);\n} else {\nreturn null;\n}\n});\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.js_val_QMARK_ = (function reagent$impl$template$js_val_QMARK_(x){\nreturn (!((\"object\" === goog.typeOf(x))));\n});\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\nvar G__36683 = o;\ngoog.object.set(G__36683,reagent.impl.template.cached_prop_name(k),(reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\n\nreturn G__36683;\n});\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\nif(reagent.impl.template.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__36773__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__36773 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__36774__i = 0, G__36774__a = new Array(arguments.length -  0);\nwhile (G__36774__i < G__36774__a.length) {G__36774__a[G__36774__i] = arguments[G__36774__i + 0]; ++G__36774__i;}\n  args = new cljs.core.IndexedSeq(G__36774__a,0,null);\n} \nreturn G__36773__delegate.call(this,args);};\nG__36773.cljs$lang$maxFixedArity = 0;\nG__36773.cljs$lang$applyTo = (function (arglist__36775){\nvar args = cljs.core.seq(arglist__36775);\nreturn G__36773__delegate(args);\n});\nG__36773.cljs$core$IFn$_invoke$arity$variadic = G__36773__delegate;\nreturn G__36773;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.custom_prop_name_cache = ({});\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.util.dash_to_prop_name(k);\ngoog.object.set(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\nvar G__36688 = o;\ngoog.object.set(G__36688,reagent.impl.template.cached_custom_prop_name(k),reagent.impl.template.convert_prop_value(v));\n\nreturn G__36688;\n});\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\nif(reagent.impl.template.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__36780__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__36780 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__36781__i = 0, G__36781__a = new Array(arguments.length -  0);\nwhile (G__36781__i < G__36781__a.length) {G__36781__a[G__36781__i] = arguments[G__36781__i + 0]; ++G__36781__i;}\n  args = new cljs.core.IndexedSeq(G__36781__a,0,null);\n} \nreturn G__36780__delegate.call(this,args);};\nG__36780.cljs$lang$maxFixedArity = 0;\nG__36780.cljs$lang$applyTo = (function (arglist__36792){\nvar args = cljs.core.seq(arglist__36792);\nreturn G__36780__delegate(args);\n});\nG__36780.cljs$core$IFn$_invoke$arity$variadic = G__36780__delegate;\nreturn G__36780;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\n/**\n * Takes the id and class from tag keyword, and adds them to the\n *   other props. Parsed tag is JS object with :id and :class properties.\n */\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\nvar id = id_class.id;\nvar class$ = id_class.className;\nvar G__36689 = props;\nvar G__36689__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__36689,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__36689);\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__36689__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props)));\n} else {\nreturn G__36689__$1;\n}\n});\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\nvar class$ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nvar props__$1 = reagent.impl.template.set_id_class((function (){var G__36691 = props;\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__36691,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\n} else {\nreturn G__36691;\n}\n})(),id_class);\nif(cljs.core.truth_(id_class.custom)){\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\n} else {\nreturn reagent.impl.template.convert_prop_value(props__$1);\n}\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.template !== 'undefined') && (typeof reagent.impl.template.find_dom_node !== 'undefined')){\n} else {\nreagent.impl.template.find_dom_node = null;\n}\nreagent.impl.template.these_inputs_have_selection_api = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\"url\",null,\"tel\",null,\"text\",null,\"textarea\",null,\"password\",null,\"search\",null], null), null);\nreagent.impl.template.has_selection_api_QMARK_ = (function reagent$impl$template$has_selection_api_QMARK_(input_type){\nreturn cljs.core.contains_QMARK_(reagent.impl.template.these_inputs_have_selection_api,input_type);\n});\nreagent.impl.template.input_node_set_value = (function reagent$impl$template$input_node_set_value(node,rendered_value,dom_value,component,p__36692){\nvar map__36693 = p__36692;\nvar map__36693__$1 = (((((!((map__36693 == null))))?(((((map__36693.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__36693.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36693):map__36693);\nvar on_write = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36693__$1,new cljs.core.Keyword(null,\"on-write\",\"on-write\",31519475));\nif((!((((node === document.activeElement)) && (reagent.impl.template.has_selection_api_QMARK_(node.type)) && (typeof rendered_value === 'string') && (typeof dom_value === 'string'))))){\n(component.cljsDOMValue = rendered_value);\n\n(node.value = rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\nreturn null;\n}\n} else {\nvar node_value = node.value;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\nreturn reagent.impl.batching.do_after_render((function (){\nreturn (reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.template.input_component_set_value.call(null,component));\n}));\n} else {\nvar existing_offset_from_end = (cljs.core.count(node_value) - node.selectionStart);\nvar new_cursor_offset = (cljs.core.count(rendered_value) - existing_offset_from_end);\n(component.cljsDOMValue = rendered_value);\n\n(node.value = rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\n}\n\n(node.selectionStart = new_cursor_offset);\n\nreturn (node.selectionEnd = new_cursor_offset);\n}\n}\n});\nreagent.impl.template.input_component_set_value = (function reagent$impl$template$input_component_set_value(this$){\nif(cljs.core.truth_(this$.cljsInputLive)){\n(this$.cljsInputDirty = false);\n\nvar rendered_value = this$.cljsRenderedValue;\nvar dom_value = this$.cljsDOMValue;\nvar node = (reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.find_dom_node.cljs$core$IFn$_invoke$arity$1(this$) : reagent.impl.template.find_dom_node.call(null,this$));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\nreturn reagent.impl.template.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nreagent.impl.template.input_handle_change = (function reagent$impl$template$input_handle_change(this$,on_change,e){\n(this$.cljsDOMValue = e.target.value);\n\nif(cljs.core.truth_(this$.cljsInputDirty)){\n} else {\n(this$.cljsInputDirty = true);\n\nreagent.impl.batching.do_after_render((function (){\nreturn reagent.impl.template.input_component_set_value(this$);\n}));\n}\n\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\n});\nreagent.impl.template.input_render_setup = (function reagent$impl$template$input_render_setup(this$,jsprops){\nif(cljs.core.truth_((((!((jsprops == null))))?(function (){var and__4115__auto__ = jsprops.hasOwnProperty(\"onChange\");\nif(cljs.core.truth_(and__4115__auto__)){\nreturn jsprops.hasOwnProperty(\"value\");\n} else {\nreturn and__4115__auto__;\n}\n})():false))){\nif(cljs.core.truth_(reagent.impl.template.find_dom_node)){\n} else {\nthrow (new Error([\"Assert failed: \",\"reagent.dom needs to be loaded for controlled input to work\",\"\\n\",\"find-dom-node\"].join('')));\n}\n\nvar v = jsprops.value;\nvar value = (((v == null))?\"\":v);\nvar on_change = jsprops.onChange;\nif(cljs.core.truth_(this$.cljsInputLive)){\n} else {\n(this$.cljsInputLive = true);\n\n(this$.cljsDOMValue = value);\n}\n\n(this$.cljsRenderedValue = value);\n\ndelete jsprops[\"value\"];\n\n(jsprops.defaultValue = value);\n\nreturn (jsprops.onChange = (function (p1__36698_SHARP_){\nreturn reagent.impl.template.input_handle_change(this$,on_change,p1__36698_SHARP_);\n}));\n} else {\nreturn null;\n}\n});\nreagent.impl.template.input_unmount = (function reagent$impl$template$input_unmount(this$){\nreturn (this$.cljsInputLive = null);\n});\nreagent.impl.template.input_component_QMARK_ = (function reagent$impl$template$input_component_QMARK_(x){\nvar G__36701 = x;\nswitch (G__36701) {\ncase \"input\":\ncase \"textarea\":\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\nreagent.impl.template.reagent_input_class = null;\nreagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"display-name\",\"display-name\",694513143),\"ReagentInput\",new cljs.core.Keyword(null,\"component-did-update\",\"component-did-update\",-1468549173),reagent.impl.template.input_component_set_value,new cljs.core.Keyword(null,\"component-will-unmount\",\"component-will-unmount\",-2058314698),reagent.impl.template.input_unmount,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),(function (argv,component,jsprops,first_child){\nvar this$ = reagent.impl.component._STAR_current_component_STAR_;\nreagent.impl.template.input_render_setup(this$,jsprops);\n\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,component,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,component,jsprops,first_child));\n})], null);\nreagent.impl.template.reagent_input = (function reagent$impl$template$reagent_input(){\nif((reagent.impl.template.reagent_input_class == null)){\n(reagent.impl.template.reagent_input_class = reagent.impl.component.create_class(reagent.impl.template.input_spec));\n} else {\n}\n\nreturn reagent.impl.template.reagent_input_class;\n});\n\n/**\n* @constructor\n*/\nreagent.impl.template.HiccupTag = (function (tag,id,className,custom){\nthis.tag = tag;\nthis.id = id;\nthis.className = className;\nthis.custom = custom;\n});\n\n(reagent.impl.template.HiccupTag.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null),new cljs.core.Symbol(null,\"custom\",\"custom\",1980683475,null)], null);\n}));\n\n(reagent.impl.template.HiccupTag.cljs$lang$type = true);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr = \"reagent.impl.template/HiccupTag\");\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.impl.template/HiccupTag\");\n}));\n\n/**\n * Positional factory function for reagent.impl.template/HiccupTag.\n */\nreagent.impl.template.__GT_HiccupTag = (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\n});\n\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\nvar vec__36711 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36711,(0),null);\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36711,(1),null);\nvar className = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36711,(2),null);\nvar className__$1 = (((className == null))?null:clojure.string.replace(className,/\\./,\" \"));\nif(cljs.core.truth_(tag)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Invalid tag: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\"'\",reagent.impl.component.comp_name()].join(''),\"\\n\",\"tag\"].join('')));\n}\n\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\")));\n});\nreagent.impl.template.try_get_key = (function reagent$impl$template$try_get_key(x){\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}catch (e36726){var e = e36726;\nreturn null;\n}});\nreagent.impl.template.get_key = (function reagent$impl$template$get_key(x){\nif(cljs.core.map_QMARK_(x)){\nreturn reagent.impl.template.try_get_key(x);\n} else {\nreturn null;\n}\n});\nreagent.impl.template.key_from_vec = (function reagent$impl$template$key_from_vec(v){\nvar temp__5737__auto__ = reagent.impl.template.get_key(cljs.core.meta(v));\nif((temp__5737__auto__ == null)){\nreturn reagent.impl.template.get_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\n} else {\nvar k = temp__5737__auto__;\nreturn k;\n}\n});\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v){\nvar c = reagent.impl.component.as_class(tag);\nvar jsprops = ({});\n(jsprops.argv = v);\n\nvar temp__5739__auto___36819 = reagent.impl.template.key_from_vec(v);\nif((temp__5739__auto___36819 == null)){\n} else {\nvar key_36820 = temp__5739__auto___36819;\n(jsprops.key = key_36820);\n}\n\nreturn module$node_modules$react$index.createElement(c,jsprops);\n});\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv){\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops = (function (){var or__4126__auto__ = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = ((1) + ((hasprops)?(1):(0)));\nvar temp__5739__auto___36821 = reagent.impl.template.key_from_vec(argv);\nif((temp__5739__auto___36821 == null)){\n} else {\nvar key_36822 = temp__5739__auto___36821;\n(jsprops.key = key_36822);\n}\n\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Fragment,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,module$node_modules$react$index.Fragment,jsprops,first_child));\n});\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\n});\nreagent.impl.template.tag_name_cache = ({});\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(x){\nvar temp__5737__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\nif((temp__5737__auto__ == null)){\nvar v = reagent.impl.template.parse_tag(x);\ngoog.object.set(reagent.impl.template.tag_name_cache,x,v);\n\nreturn v;\n} else {\nvar s = temp__5737__auto__;\nreturn s;\n}\n});\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first){\nvar component = parsed.tag;\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops = (function (){var or__4126__auto__ = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = (first + ((hasprops)?(1):(0)));\nif(reagent.impl.template.input_component_QMARK_(component)){\nvar G__36735 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input(),argv,component,jsprops,first_child], null),cljs.core.meta(argv));\nreturn (reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.as_element.cljs$core$IFn$_invoke$arity$1(G__36735) : reagent.impl.template.as_element.call(null,G__36735));\n} else {\nvar temp__5739__auto___36838 = reagent.impl.template.get_key(cljs.core.meta(argv));\nif((temp__5739__auto___36838 == null)){\n} else {\nvar key_36840 = temp__5739__auto___36838;\n(jsprops.key = key_36840);\n}\n\nreturn (reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4 ? reagent.impl.template.make_element.cljs$core$IFn$_invoke$arity$4(argv,component,jsprops,first_child) : reagent.impl.template.make_element.call(null,argv,component,jsprops,first_child));\n}\n});\nreagent.impl.template.str_coll = (function reagent$impl$template$str_coll(coll){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.walk.prewalk((function (x){\nif(cljs.core.fn_QMARK_(x)){\nvar n = reagent.impl.util.fun_name(x);\nvar G__36741 = n;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",G__36741)){\nreturn x;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__36741)){\nreturn x;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\n\n}\n}\n} else {\nreturn x;\n}\n}),coll));\n\n});\nreagent.impl.template.hiccup_err = (function reagent$impl$template$hiccup_err(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___36846 = arguments.length;\nvar i__4737__auto___36847 = (0);\nwhile(true){\nif((i__4737__auto___36847 < len__4736__auto___36846)){\nargs__4742__auto__.push((arguments[i__4737__auto___36847]));\n\nvar G__36870 = (i__4737__auto___36847 + (1));\ni__4737__auto___36847 = G__36870;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic = (function (v,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\": \",reagent.impl.template.str_coll(v),\"\\n\",reagent.impl.component.comp_name()].join('');\n}));\n\n(reagent.impl.template.hiccup_err.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.impl.template.hiccup_err.cljs$lang$applyTo = (function (seq36742){\nvar G__36743 = cljs.core.first(seq36742);\nvar seq36742__$1 = cljs.core.next(seq36742);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__36743,seq36742__$1);\n}));\n\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v){\nwhile(true){\nif((cljs.core.count(v) > (0))){\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Hiccup form should not be empty\"], 0)),\"\\n\",\"(pos? (count v))\"].join('')));\n}\n\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup form\"], 0)),\"\\n\",\"(valid-tag? tag)\"].join('')));\n}\n\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"<>\",\"<>\",1280186386),tag)){\nreturn reagent.impl.template.fragment_element(v);\n} else {\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\nvar n = cljs.core.name(tag);\nvar pos = n.indexOf(\">\");\nvar G__36744 = pos;\nswitch (G__36744) {\ncase (-1):\nreturn reagent.impl.template.native_element(reagent.impl.template.cached_parse(n),v,(1));\n\nbreak;\ncase (0):\nvar component = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\">\",n)){\n} else {\nthrow (new Error([\"Assert failed: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup tag\"], 0)),\"\\n\",\"(= \\\">\\\" n)\"].join('')));\n}\n\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(component,null,null,null),v,(2));\n\nbreak;\ndefault:\nvar G__36872 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\nv = G__36872;\ncontinue;\n\n}\n} else {\nif((tag instanceof reagent.impl.template.NativeWrapper)){\nreturn reagent.impl.template.native_element(tag,v,(1));\n} else {\nreturn reagent.impl.template.reag_element(tag,v);\n\n}\n}\n}\nbreak;\n}\n});\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(x){\nif(reagent.impl.template.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn reagent.impl.template.vec_to_elem(x);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn (reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.expand_seq_check.cljs$core$IFn$_invoke$arity$1(x) : reagent.impl.template.expand_seq_check.call(null,x));\n\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n} else {\nreturn x;\n\n}\n}\n}\n}\n}\n});\n(reagent.impl.component.as_element = reagent.impl.template.as_element);\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.template.as_element,s));\n});\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\nif(((cljs.core.vector_QMARK_(val)) && ((reagent.impl.template.key_from_vec(val) == null)))){\n(o.no_key = true);\n} else {\n}\n\nreturn reagent.impl.template.as_element(val);\n}),s));\n});\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x){\nvar ctx = ({});\nvar vec__36767 = reagent.ratom.check_derefs((function (){\nreturn reagent.impl.template.expand_seq_dev(x,ctx);\n}));\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36767,(0),null);\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36767,(1),null);\nif(cljs.core.truth_(derefed)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Reactive deref not supported in lazy seq, \",\"it should be wrapped in doall\"], 0))].join(''));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(ctx.no_key)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.template.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Every element in a seq should have a unique :key\"], 0))].join(''));\n} else {\n}\n} else {\n}\n\nreturn res;\n});\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(argv,component,jsprops,first_child){\nvar G__36772 = (cljs.core.count(argv) - first_child);\nswitch (G__36772) {\ncase (0):\nreturn module$node_modules$react$index.createElement(component,jsprops);\n\nbreak;\ncase (1):\nreturn module$node_modules$react$index.createElement(component,jsprops,reagent.impl.template.as_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\n\nbreak;\ndefault:\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\nif((k >= first_child)){\na.push(reagent.impl.template.as_element(v));\n} else {\n}\n\nreturn a;\n}),[component,jsprops],argv));\n\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^J"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^T","~$comp","~$reagent.impl.component","~$reagent.ratom","^W","^@","^A","~$cljs.core","^X","^A","^A","~$gobj","~$goog.object","~$goog","^[","^Z","^Z","~$reagent.impl.batching","^10","^V","^V","~$util","^T","~$ratom","^W","~$string","~$clojure.string","~$batch","^10","^J","^J","^14","^14","~$clojure.walk","^16"],"~:seen",["^M",["~:require"]],"~:uses",["^ ","~$prewalk","^16","~$named?","^T"],"~:require-macros",["^ ","^J","^J","^X","^X","^W","^W","^12","^W"],"~:form",["~#list",["~$ns","^O",["^1>",["^18",["^@","~:as","^@"],["^14","^1@","^13"],["^16","~:refer",["^1:"]],["^T","^1@","^11","^1A",["^1;"]],["^V","^1@","^U"],["^10","^1@","^15"],["^W","^1@","^12"],["^J","~:refer-macros",["^I","^K"]],["^Z","^1@","^Y"]]]]],"~:flags",["^ ","^18",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^[","^X","^A","^14","^16","^T","^V","^10","^W","^J","^Z"]],"^Q","^O","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1612454821600,"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [clojure.walk :refer [prewalk]]\n            [reagent.impl.util :as util :refer [named?]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn]]\n            [goog.object :as gobj]))\n\n(declare as-element)\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [tag id className])\n\n\n;;; Common utilities\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n\n;;; Props conversion\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (gobj/get o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn ^boolean js-val? [x]\n  (not (identical? \"object\" (goog/typeOf x))))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-prop-name k) (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set custom-prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-custom-prop-name k) (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id (.-id id-class)\n        class (.-className id-class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      (assoc :class (util/class-names class (:class props))))))\n\n(defn convert-props [props ^clj id-class]\n  (let [class (:class props)\n        props (-> props\n                  (cond-> class (assoc :class (util/class-names class)))\n                  (set-id-class id-class))]\n    (if (.-custom id-class)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Specialization for input components\n\n;; This gets set from reagent.dom\n(defonce find-dom-node nil)\n\n;; <input type=\"??\" >\n;; The properites 'selectionStart' and 'selectionEnd' only exist on some inputs\n;; See: https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n(def these-inputs-have-selection-api #{\"text\" \"textarea\" \"password\" \"search\"\n                                       \"tel\" \"url\"})\n\n(defn ^boolean has-selection-api?\n  [input-type]\n  (contains? these-inputs-have-selection-api input-type))\n\n(declare input-component-set-value)\n\n(defn input-node-set-value\n  [node rendered-value dom-value ^clj component {:keys [on-write]}]\n  (if-not (and (identical? node (.-activeElement js/document))\n            (has-selection-api? (.-type node))\n            (string? rendered-value)\n            (string? dom-value))\n    ;; just set the value, no need to worry about a cursor\n    (do\n      (set! (.-cljsDOMValue component) rendered-value)\n      (set! (.-value node) rendered-value)\n      (when (fn? on-write)\n        (on-write rendered-value)))\n\n    ;; Setting \"value\" (below) moves the cursor position to the\n    ;; end which gives the user a jarring experience.\n    ;;\n    ;; But repositioning the cursor within the text, turns out to\n    ;; be quite a challenge because changes in the text can be\n    ;; triggered by various events like:\n    ;; - a validation function rejecting a user inputted char\n    ;; - the user enters a lower case char, but is transformed to\n    ;;   upper.\n    ;; - the user selects multiple chars and deletes text\n    ;; - the user pastes in multiple chars, and some of them are\n    ;;   rejected by a validator.\n    ;; - the user selects multiple chars and then types in a\n    ;;   single new char to repalce them all.\n    ;; Coming up with a sane cursor repositioning strategy hasn't\n    ;; been easy ALTHOUGH in the end, it kinda fell out nicely,\n    ;; and it appears to sanely handle all the cases we could\n    ;; think of.\n    ;; So this is just a warning. The code below is simple\n    ;; enough, but if you are tempted to change it, be aware of\n    ;; all the scenarios you have handle.\n    (let [node-value (.-value node)]\n      (if (not= node-value dom-value)\n        ;; IE has not notified us of the change yet, so check again later\n        (batch/do-after-render #(input-component-set-value component))\n        (let [existing-offset-from-end (- (count node-value)\n                                         (.-selectionStart node))\n              new-cursor-offset        (- (count rendered-value)\n                                         existing-offset-from-end)]\n          (set! (.-cljsDOMValue component) rendered-value)\n          (set! (.-value node) rendered-value)\n          (when (fn? on-write)\n            (on-write rendered-value))\n          (set! (.-selectionStart node) new-cursor-offset)\n          (set! (.-selectionEnd node) new-cursor-offset))))))\n\n(defn input-component-set-value [^clj this]\n  (when (.-cljsInputLive this)\n    (set! (.-cljsInputDirty this) false)\n    (let [rendered-value (.-cljsRenderedValue this)\n          dom-value (.-cljsDOMValue this)\n          ;; Default to the root node within this component\n          node (find-dom-node this)]\n      (when (not= rendered-value dom-value)\n        (input-node-set-value node rendered-value dom-value this {})))))\n\n(defn input-handle-change [^clj this on-change e]\n  (set! (.-cljsDOMValue this) (-> e .-target .-value))\n  ;; Make sure the input is re-rendered, in case on-change\n  ;; wants to keep the value unchanged\n  (when-not (.-cljsInputDirty this)\n    (set! (.-cljsInputDirty this) true)\n    (batch/do-after-render #(input-component-set-value this)))\n  (on-change e))\n\n(defn input-render-setup\n  [^clj this ^js jsprops]\n  ;; Don't rely on React for updating \"controlled inputs\", since it\n  ;; doesn't play well with async rendering (misses keystrokes).\n  (when (and (some? jsprops)\n             (.hasOwnProperty jsprops \"onChange\")\n             (.hasOwnProperty jsprops \"value\"))\n    (assert find-dom-node\n            \"reagent.dom needs to be loaded for controlled input to work\")\n    (let [v (.-value jsprops)\n          value (if (nil? v) \"\" v)\n          on-change (.-onChange jsprops)]\n      (when-not (.-cljsInputLive this)\n        ;; set initial value\n        (set! (.-cljsInputLive this) true)\n        (set! (.-cljsDOMValue this) value))\n      (set! (.-cljsRenderedValue this) value)\n      (js-delete jsprops \"value\")\n      (set! (.-defaultValue jsprops) value)\n      (set! (.-onChange jsprops) #(input-handle-change this on-change %)))))\n\n(defn input-unmount [^clj this]\n  (set! (.-cljsInputLive this) nil))\n\n(defn ^boolean input-component? [x]\n  (case x\n    (\"input\" \"textarea\") true\n    false))\n\n(def reagent-input-class nil)\n\n(declare make-element)\n\n(def input-spec\n  {:display-name \"ReagentInput\"\n   :component-did-update input-component-set-value\n   :component-will-unmount input-unmount\n   :reagent-render\n   (fn [argv component jsprops first-child]\n     (let [this comp/*current-component*]\n       (input-render-setup this jsprops)\n       (make-element argv component jsprops first-child)))})\n\n(defn reagent-input\n  []\n  (when (nil? reagent-input-class)\n    (set! reagent-input-class (comp/create-class input-spec)))\n  reagent-input-class)\n\n\n;;; Conversion from Hiccup forms\n\n(deftype HiccupTag [tag id className custom])\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id className] (->> hiccup-tag name (re-matches re-tag) next)\n        className (when-not (nil? className)\n                    (string/replace className #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\" (comp/comp-name)))\n    (->HiccupTag tag\n                 id\n                 className\n                 ;; Custom element names must contain hyphen\n                 ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n                 (not= -1 (.indexOf tag \"-\")))))\n\n(defn try-get-key [x]\n  ;; try catch to avoid clojurescript peculiarity with\n  ;; sorted-maps with keys that are numbers\n  (try (get x :key)\n       (catch :default e)))\n\n(defn get-key [x]\n  (when (map? x)\n    (try-get-key x)))\n\n(defn key-from-vec [v]\n  (if-some [k (-> (meta v) get-key)]\n    k\n    (-> v (nth 1 nil) get-key)))\n\n(defn reag-element [tag v]\n  (let [c (comp/as-class tag)\n        jsprops #js {}]\n    (set! (.-argv jsprops) v)\n    (when-some [key (key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement c jsprops)))\n\n(defn fragment-element [argv]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-prop-value (if hasprops props))\n                    #js {})\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (key-from-vec argv)]\n      (set! (.-key jsprops) key))\n    (make-element argv react/Fragment jsprops first-child)))\n\n(defn adapt-react-class\n  [c]\n  (->NativeWrapper c nil nil))\n\n(def tag-name-cache #js{})\n\n(defn cached-parse [x]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (let [v (parse-tag x)]\n      (gobj/set tag-name-cache x v)\n      v)))\n\n(defn native-element [parsed argv first]\n  (let [component (.-tag parsed)\n        props (nth argv first nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-props (if hasprops props) parsed)\n                    #js {})\n        first-child (+ first (if hasprops 1 0))]\n    (if (input-component? component)\n      (-> [(reagent-input) argv component jsprops first-child]\n          (with-meta (meta argv))\n          as-element)\n      (do\n        (when-some [key (-> (meta argv) get-key)]\n          (set! (.-key jsprops) key))\n        (make-element argv component jsprops first-child)))))\n\n(defn str-coll [coll]\n  (if (dev?)\n    (str (prewalk (fn [x]\n                    (if (fn? x)\n                      (let [n (util/fun-name x)]\n                        (case n\n                          (\"\" nil) x\n                          (symbol n)))\n                      x)) coll))\n    (str coll)))\n\n(defn hiccup-err [v & msg]\n  (str (apply str msg) \": \" (str-coll v) \"\\n\" (comp/comp-name)))\n\n(defn vec-to-elem [v]\n  (assert (pos? (count v)) (hiccup-err v \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (hiccup-err v \"Invalid Hiccup form\"))\n    (cond\n      (keyword-identical? :<> tag)\n      (fragment-element v)\n\n      (hiccup-tag? tag)\n      (let [n (name tag)\n            pos (.indexOf n \">\")]\n        (case pos\n          -1 (native-element (cached-parse n) v 1)\n          0 (let [component (nth v 1 nil)]\n              ;; Support [:> component ...]\n              (assert (= \">\" n) (hiccup-err v \"Invalid Hiccup tag\"))\n              (native-element (->HiccupTag component nil nil nil) v 2))\n          ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n          ;; Apply metadata (e.g. :key) to the outermost element.\n          ;; Metadata is probably used only with sequeneces, and in that case\n          ;; only the key of the outermost element matters.\n          (recur (with-meta [(subs n 0 pos)\n                             (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                            (meta v)))))\n\n      (instance? NativeWrapper tag)\n      (native-element tag v 1)\n\n      :else (reag-element tag v))))\n\n(declare expand-seq)\n(declare expand-seq-check)\n\n(defn as-element [x]\n  (cond (js-val? x) x\n        (vector? x) (vec-to-elem x)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x)\n                   (expand-seq x))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(set! comp/as-element as-element)\n\n(defn expand-seq [s]\n  (into-array (map as-element s)))\n\n(defn expand-seq-dev [s ^clj o]\n  (into-array (map (fn [val]\n                     (when (and (vector? val)\n                                (nil? (key-from-vec val)))\n                       (set! (.-no-key o) true))\n                     (as-element val))\n                   s)))\n\n(defn expand-seq-check [x]\n  (let [ctx #js{}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx))]\n    (when derefed\n      (warn (hiccup-err x \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when (.-no-key ctx)\n      (warn (hiccup-err x \"Every element in a seq should have a unique :key\")))\n    res))\n\n(defn make-element [argv component jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement component jsprops)\n\n    1 (react/createElement component jsprops\n          (as-element (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                           (.push a (as-element v)))\n                         a)\n                       #js[component jsprops] argv))))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","tag","id","className","reagent.impl.template/hiccup-tag?","x","reagent.impl.util/named?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","goog.object/get","reagent.impl.template/cached-prop-name","temp__5737__auto__","k'","cljs.core/name","v","reagent.impl.util/dash-to-prop-name","goog.object/set","reagent.impl.template/js-val?","goog/typeOf","reagent.impl.template/kv-conv","G__36683","reagent.impl.template/convert-prop-value","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","reagent.impl.template/custom-kv-conv","G__36688","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/set-id-class","props","id-class","class","G__36689","cljs.core.assoc","reagent.impl.util.class_names","reagent.impl.template/convert-props","G__36691","js/reagent","js/reagent.impl","js/reagent.impl.template","js/reagent.impl.template.find-dom-node","reagent.impl.template/find-dom-node","reagent.impl.template/these-inputs-have-selection-api","reagent.impl.template/has-selection-api?","input-type","cljs.core/contains?","p__36692","map__36693","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","reagent.impl.template/input-node-set-value","node","rendered-value","dom-value","component","on-write","js/document","cljs.core/fn?","node-value","cljs.core.not_EQ_","reagent.impl.batching/do-after-render","reagent.impl.template/input-component-set-value","existing-offset-from-end","cljs.core/count","new-cursor-offset","this","reagent.impl.template/input-handle-change","on-change","e","reagent.impl.template/input-render-setup","jsprops","and__4115__auto__","js/Error","value","p1__36698#","reagent.impl.template/input-unmount","reagent.impl.template/input-component?","G__36701","reagent.impl.template/reagent-input-class","reagent.impl.template/input-spec","argv","first-child","reagent.impl.component/*current-component*","reagent.impl.template/make-element","reagent.impl.template/reagent-input","reagent.impl.component/create-class","reagent.impl.template/HiccupTag","reagent.impl.template/->HiccupTag","custom","reagent.impl.template/parse-tag","hiccup-tag","vec__36711","cljs.core.nth","cljs.core/re-matches","cljs.core/next","clojure.string/replace","reagent.impl.component/comp-name","reagent.impl.template/try-get-key","e36726","reagent.impl.template/get-key","reagent.impl.template/key-from-vec","cljs.core/meta","reagent.impl.template/reag-element","c","reagent.impl.component/as-class","temp__5739__auto__","key","js/module$node_modules$react$index.createElement","reagent.impl.template/fragment-element","hasprops","or__4126__auto__","js/module$node_modules$react$index.Fragment","reagent.impl.template/adapt-react-class","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","s","reagent.impl.template/native-element","parsed","first","G__36735","cljs.core/with-meta","reagent.impl.template/as-element","reagent.impl.template/str-coll","coll","clojure.walk/prewalk","n","reagent.impl.util/fun-name","G__36741","cljs.core._EQ_","cljs.core.symbol","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","reagent.impl.template/hiccup-err","seq36742","G__36743","cljs.core/first","self__4723__auto__","msg","cljs.core/str","reagent.impl.template/vec-to-elem","reagent.impl.template.hiccup_err","cljs.core/keyword-identical?","pos","G__36744","cljs.core.subs","cljs.core/vector?","cljs.core/seq?","reagent.impl.template/expand-seq-check","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","cljs.core.pr_str","reagent.impl.component/as-element","reagent.impl.template/expand-seq","cljs.core.into_array","cljs.core.map","reagent.impl.template/expand-seq-dev","val","vec__36767","ctx","res","derefed","reagent.ratom/check-derefs","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","G__36772","a"]],"~:used-vars",["^M",["~$reagent.impl.template/reagent-input","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.impl.template/tag-name-cache","~$reagent.impl.template/vec-to-elem","~$js/document","~$reagent.impl.template/expand-seq","~$cljs.core/str","~$reagent.impl.template/prop-name-cache","~$reagent.impl.template/input-handle-change","~$reagent.impl.template/find-dom-node","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$js/reagent.impl.template.find-dom-node","~$reagent.impl.template/key-from-vec","~$cljs.core/into-array","~$reagent.impl.template/make-element","~$clojure.walk/prewalk","~$reagent.impl.template/parse-tag","~$reagent.impl.template/kv-conv","~$cljs.core/-write","~$reagent.impl.template/input-spec","~$reagent.impl.template/convert-prop-value","~$cljs.core/count","~$goog/typeOf","~$cljs.core/apply","~$reagent.impl.template/fragment-element","~$cljs.core/not=","~$cljs.core/keyword-identical?","~$reagent.impl.template/->HiccupTag","~$reagent.impl.template/input-render-setup","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/module$node_modules$react$index.createElement","~$js/console","~$reagent.impl.template/try-get-key","~$reagent.impl.template/input-component-set-value","~$cljs.core/native-satisfies?","~$reagent.impl.template/valid-tag?","~$cljs.core/contains?","~$reagent.impl.template/js-val?","~$cljs.core/map?","~$reagent.impl.template/expand-seq-dev","~$reagent.impl.template/cached-prop-name","~$cljs.core/with-meta","~$reagent.impl.template/cached-custom-prop-name","~$reagent.impl.template/input-component?","~$cljs.core/map","~$cljs.core/fn?","~$reagent.impl.template/reagent-input-class","~$reagent.impl.template/HiccupTag","~$reagent.impl.template/custom-kv-conv","~$cljs.core/get","~$js/module$node_modules$react$index.Fragment","~$goog.object/set","~$reagent.debug/tracking","~$reagent.impl.template/expand-seq-check","~$js/reagent.impl","~$reagent.impl.template/custom-prop-name-cache","~$reagent.impl.template/cached-parse","~$cljs.core/clj->js","~$cljs.core/symbol","~$reagent.impl.util/class-names","~$reagent.debug/track-console","~$reagent.impl.component/create-class","~$reagent.impl.template/adapt-react-class","~$cljs.core/nth","~$cljs.core/meta","~$reagent.impl.template/has-selection-api?","~$reagent.impl.template/str-coll","~$js/reagent.impl.template","~$reagent.impl.template/get-key","~$reagent.impl.template/re-tag","~$reagent.impl.template/reag-element","~$reagent.impl.template/these-inputs-have-selection-api","~$reagent.impl.template/native-element","~$cljs.core/not","~$reagent.impl.template/NativeWrapper","~$reagent.impl.template/->NativeWrapper","~$cljs.core/IPrintWithWriter","~$reagent.impl.template/cache-get","~$cljs.core/assoc","~$reagent.impl.template/input-node-set-value","~$reagent.impl.template/hiccup-err","~$cljs.core/coll?","~$reagent.impl.template/convert-props","~$cljs.core/reduce-kv","~$cljs.core/seq?","~$reagent.impl.batching/do-after-render","~$cljs.core/name","~$reagent.impl.util/named?","~$cljs.core/subs","~$reagent.impl.component/as-element","~$reagent.impl.template/input-unmount","~$reagent.impl.template/hiccup-tag?","~$js/Error","~$reagent.impl.template/set-id-class","~$reagent.impl.template/convert-custom-prop-value","~$goog.object/get","~$reagent.impl.template/as-element"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^[","^X","^J","^T"]]],["^1G","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.dom.HtmlElement"]]],["^1G","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","~$goog.labs.userAgent.util","^Z","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4?"]]],["^1G","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4="]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1G","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X","^14"]]],["^1G","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X","^T","^J","^10","~$clojure.set","^Z"]]],["^1G","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^4F","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^4G","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1G","shadow/js.js"],["5d2e4e955ab1a108e2ebc0c9b87ba78f8be4edbc","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X","^A","^14","^16","^T","^V","^10","^W","^J","^Z"]]],["^1G","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4="]]],"~:SHADOW-TIMESTAMP",[1600470677000,1600470677000,1593530297000],["^4F","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","0c9d0acaa1ab1e24333c71607d0fa0609193e7d7","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^4G","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1G","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","~$goog.html.trustedtypes","^4B","^4C","^4D","^4E"]]],["^1G","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","~$goog.html.SafeUrl","^4D","^4E","^4?"]]],["^1G","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4Q","^4A","~$goog.html.uncheckedconversions","^4D","^4?"]]],["^1G","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X","^Z","^A","^T","^10","^W","^J"]]],["^1G","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X"]]],["^1G","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","~$goog.dom.TagName","~$goog.dom.tags","^4U","^4V","~$goog.html.SafeStyleSheet","^4Q","^4A","^4P","^4B","^4C","~$goog.labs.userAgent.browser","^Z","^4D","^4E","^4?"]]],["^1G","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^Z"]]],["^1G","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^4F","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^4G"]]],["^1G","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",[]]],["^1G","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^Z"]]],["^1G","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X","^54","~$goog.string.StringBuffer"]]],["^4F","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a25ef7d1b1992294ca65e96d70e1be7f70977b13","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^4G","^4M"]]],["^1G","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.dom.safe","^4W","^4D","^4?"]]],["^1G","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4?"]]],["^1G","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","^4S","~$goog.math"]]],["^1G","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","^4T","^4U","^4V","^50","^4Q","^4A","^4D","^4?"]]],["^4F","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^4G"]]],["^1G","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^["]]],["^1G","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","~$goog.math.Long","~$goog.math.Integer","^54","^Z","^4<","~$goog.Uri","^5:"]]],["^1G","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","^4P","^4D","^4E"]]],["^1G","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X"]]],["^1G","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","^4V","^Z","^4D","^4E","^4?"]]],["^1G","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4O"]]],["^1G","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^X"]]],["^1G","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4<","^4=","^54"]]],["^1G","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^[","^4=","^4E"]]]]],"~:clj-info",["^ ","jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1592409480000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1592409480000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1600470675000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1566593952000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1593530297000,"jar:file:/Users/Rohan%20Mehta/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1592409480000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","^K","^J"],"^L",["^M",[]],"~:shadow/js-access-properties",["^M",["onChange","createElement","Fragment"]],"^N","^O","^R",null,"^S",["^ ","^T","^T","^U","^V","^W","^W","^@","^A","^X","^X","^A","^A","^Y","^Z","^[","^[","^Z","^Z","^10","^10","^V","^V","^11","^T","^12","^W","^13","^14","^15","^10","^J","^J","^14","^14","^16","^16"],"^17",["^M",["^18"]],"~:shadow/js-access-global",["^M",["document","Error"]],"^19",["^ ","^1:","^16","^1;","^T"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",28,"^8",16,"^9",28,"^:",26,"~:tag","~$boolean","~:arglists",["^1>",["~$quote",["^1>",[["~$x"]]]]]],"^N","^2O","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1>",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"~:variadic?",false,"^7",28,"~:ret-tag","^67","^9",28,"~:max-fixed-arity",1,"^66","^67","~:fn-var",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",307,"^8",7,"^9",307,"^:",24,"^68",["^1>",["^69",["^1>",[["~$c"]]]]]],"^N","^3>","^6","reagent/impl/template.cljs","^:",24,"^6:",["^1>",[["~$c"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",307,"^6>","^3J","^9",307,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$c"]]]]]],"~$has-selection-api?",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",134,"^8",16,"^9",134,"^:",34,"^66","^67","^68",["^1>",["^69",["^1>",[["~$input-type"]]]]]],"^N","^3A","^6","reagent/impl/template.cljs","^:",34,"^6:",["^1>",[["^6C"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",134,"^6>","^67","^9",134,"^6?",1,"^66","^67","^6@",true,"^68",["^1>",["^69",["^1>",[["^6C"]]]]]],"~$str-coll",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",336,"^8",7,"^9",336,"^:",15,"^68",["^1>",["^69",["^1>",[["~$coll"]]]]]],"^N","^3B","^6","reagent/impl/template.cljs","^:",15,"^6:",["^1>",[["^6E"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",336,"^6>","^13","^9",336,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["^6E"]]]]]],"~$get-key",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",280,"^8",7,"^9",280,"^:",14,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^3D","^6","reagent/impl/template.cljs","^:",14,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",280,"^6>",["^M",["~$any","~$clj-nil"]],"^9",280,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",17,"^8",3,"^9",17,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^N","^3E","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^7",15,"^9",17,"^66","^6G","^6J","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$reag-element",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",289,"^8",7,"^9",289,"^:",19,"^68",["^1>",["^69",["^1>",[["~$tag","~$v"]]]]]],"^N","^3F","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["^6L","~$v"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",289,"^6>","~$js","^9",289,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["^6L","~$v"]]]]]],"~$as-element",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",383,"^8",7,"^9",383,"^:",17,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^44","^6","reagent/impl/template.cljs","^:",17,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",383,"^6>",["^M",[null,"^6G","^6M","^13"]],"^9",383,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$input-component?",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",232,"^8",16,"^9",232,"^:",32,"^66","^67","^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^2W","^6","reagent/impl/template.cljs","^:",32,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",232,"^6>","^67","^9",232,"^6?",1,"^66","^67","^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$HiccupTag",["^ ","~:num-fields",4,"~:protocols",["^M",[]],"^N","^2[","^6","reagent/impl/template.cljs","^:",19,"~:type",true,"^8",10,"^7",260,"~:record",false,"^9",260,"^66","~$function","~:skip-protocol-flag",null],"~$NativeWrapper",["^ ","^6Q",3,"^6R",["^M",[]],"^N","^3J","^6","reagent/impl/template.cljs","^:",23,"^6S",true,"^8",10,"^7",19,"^6T",false,"^9",19,"^66","^6U","^6V",null],"~$->NativeWrapper",["^ ","^65",null,"^5",["^ ","^6R",["^M",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",19,"^9",19,"^68",["^1>",["^69",["^1>",[["^6L","~$id","~$className"]]]]],"^6V",null,"^6J","Positional factory function for reagent.impl.template/NativeWrapper."],"^6R",["^M",[]],"^N","^3K","^6","reagent/impl/template.cljs","^:",23,"^6:",["^1>",[["^6L","^6[","^70"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^6Y","^6Z","^7",19,"^6>","^3J","^9",19,"^6?",3,"^6@",true,"^68",["^1>",["^69",["^1>",[["^6L","^6[","^70"]]]]],"^6V",null,"^6J","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",85,"^8",7,"^9",85,"^:",21,"^68",["^1>",["^69",["^1>",[["~$o","~$k","~$v"]]]]]],"^N","^30","^6","reagent/impl/template.cljs","^:",21,"^6:",["^1>",[["~$o","~$k","~$v"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",85,"^9",85,"^6?",3,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$o","~$k","~$v"]]]]]],"~$input-render-setup",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",208,"^8",7,"^9",208,"^:",25,"^68",["^1>",["^69",["^1>",[["~$this","~$jsprops"]]]]]],"^N","^2E","^6","reagent/impl/template.cljs","^:",25,"^6:",["^1>",[["^73","^74"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",208,"^6>",["^M",[null,"^6H"]],"^9",208,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["^73","^74"]]]]]],"~$input-component-set-value",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",189,"^8",7,"^9",189,"^:",32,"^68",["^1>",["^69",["^1>",[["^73"]]]]]],"^N","^2M","^6","reagent/impl/template.cljs","^:",32,"^6:",["^1>",[["^73"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",189,"^6>",["^M",[null,"^6G","^6H"]],"^9",189,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["^73"]]]]]],"~$hiccup-tag?",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",24,"^8",16,"^9",24,"^:",27,"^66","^67","^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^3[","^6","reagent/impl/template.cljs","^:",27,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",24,"^6>","^67","^9",24,"^6?",1,"^66","^67","^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$set-id-class",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",98,"^8",7,"^9",98,"^:",19,"^68",["^1>",["^69",["^1>",[["~$props","~$id-class"]]]]],"^6J","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^N","^41","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["^78","^79"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",98,"^6>",["^M",[null,"~$clj","^6G"]],"^9",98,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["^78","^79"]]]]],"^6J","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^N","^1U","^6","reagent/impl/template.cljs","^7",311,"^8",1,"^9",311,"^:",20,"^5",["^ ","^6","reagent/impl/template.cljs","^7",311,"^8",6,"^9",311,"^:",20],"^66","~$object"],"~$prop-name-cache",["^ ","^N","^1Z","^6","reagent/impl/template.cljs","^7",36,"^8",1,"^9",36,"^:",21,"^5",["^ ","^6","reagent/impl/template.cljs","^7",36,"^8",6,"^9",36,"^:",21],"^66","^7<"],"~$input-node-set-value",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",140,"^8",7,"^9",140,"^:",27,"^68",["^1>",["^69",["^1>",[["~$node","~$rendered-value","~$dom-value","~$component",["^ ","~:keys",["~$on-write"]]]]]]]],"^N","^3O","^6","reagent/impl/template.cljs","^:",27,"^6:",["^1>",[["^7?","^7@","^7A","^7B","~$p__36692"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",140,"^6>",["^M",[null,"^6G","^6H"]],"^9",140,"^6?",5,"^6@",true,"^68",["^1>",["^69",["^1>",[["^7?","^7@","^7A","^7B",["^ ","^7C",["^7D"]]]]]]]],"~$convert-props",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",114,"^8",7,"^9",114,"^:",20,"^68",["^1>",["^69",["^1>",[["^78","^79"]]]]]],"^N","^3R","^6","reagent/impl/template.cljs","^:",20,"^6:",["^1>",[["^78","^79"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",114,"^6>",["^M",[null,"^6G","^13","^6U"]],"^9",114,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["^78","^79"]]]]]],"~$hiccup-err",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",347,"^8",7,"^9",347,"^:",17,"^68",["^1>",["^69",["^1>",[["~$v","~$&","~$msg"]]]]],"~:top-fn",["^ ","^6=",true,"~:fixed-arity",1,"^6?",1,"^6:",[["^1>",["~$v","^7H"]]],"^68",["^1>",[["~$v","~$&","^7H"]]],"^6<",["^1>",[null]]]],"^N","^3P","^6","reagent/impl/template.cljs","^:",17,"^7I",["^ ","^6=",true,"^7J",1,"^6?",1,"^6:",[["^1>",["~$v","^7H"]]],"^68",["^1>",[["~$v","~$&","^7H"]]],"^6<",["^1>",[null]]],"^6:",[["^1>",["~$v","^7H"]]],"^6;",null,"^7J",1,"^6<",["^1>",[null]],"^8",1,"^6=",true,"~:methods",[["^ ","^7J",1,"^6=",true,"^66","^13"]],"^7",347,"^6>","^6G","^9",347,"^6?",1,"^6@",true,"^68",["^1>",[["~$v","~$&","^7H"]]]],"~$custom-prop-name-cache",["^ ","^N","^37","^6","reagent/impl/template.cljs","^7",74,"^8",1,"^9",74,"^:",28,"^5",["^ ","^6","reagent/impl/template.cljs","^7",74,"^8",6,"^9",74,"^:",28],"^66","^7<"],"~$parse-tag",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",262,"^8",7,"^9",262,"^:",16,"^68",["^1>",["^69",["^1>",[["~$hiccup-tag"]]]]]],"^N","^29","^6","reagent/impl/template.cljs","^:",16,"^6:",["^1>",[["^7N"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",262,"^6>","^2[","^9",262,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["^7N"]]]]]],"~$kv-conv",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",58,"^8",7,"^9",58,"^:",14,"^68",["^1>",["^69",["^1>",[["~$o","~$k","~$v"]]]]]],"^N","^2:","^6","reagent/impl/template.cljs","^:",14,"^6:",["^1>",[["~$o","~$k","~$v"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",58,"^9",58,"^6?",3,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$o","~$k","~$v"]]]]]],"~$key-from-vec",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",284,"^8",7,"^9",284,"^:",19,"^68",["^1>",["^69",["^1>",[["~$v"]]]]]],"^N","^25","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["~$v"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",284,"^6>",["^M",["^6G","^6H"]],"^9",284,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$v"]]]]]],"~$js-val?",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",53,"^8",16,"^9",53,"^:",23,"^66","^67","^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^2Q","^6","reagent/impl/template.cljs","^:",23,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",53,"^6>","^67","^9",53,"^6?",1,"^66","^67","^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$input-unmount",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",229,"^8",7,"^9",229,"^:",20,"^68",["^1>",["^69",["^1>",[["^73"]]]]]],"^N","^3Z","^6","reagent/impl/template.cljs","^:",20,"^6:",["^1>",[["^73"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",229,"^9",229,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["^73"]]]]]],"~$convert-custom-prop-value",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",89,"^8",7,"^9",89,"^:",32,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^42","^6","reagent/impl/template.cljs","^:",32,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",89,"^6>",["^M",[null,"^6G","^13","^6U"]],"^9",89,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$reagent-input-class",["^ ","^N","^2Z","^6","reagent/impl/template.cljs","^7",237,"^8",1,"^9",237,"^:",25,"^5",["^ ","^6","reagent/impl/template.cljs","^7",237,"^8",6,"^9",237,"^:",25],"^66","^6H"],"~$native-element",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",320,"^8",7,"^9",320,"^:",21,"^68",["^1>",["^69",["^1>",[["~$parsed","~$argv","~$first"]]]]]],"^N","^3H","^6","reagent/impl/template.cljs","^:",21,"^6:",["^1>",[["^7V","^7W","^7X"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",320,"^6>","^6G","^9",320,"^6?",3,"^6@",true,"^68",["^1>",["^69",["^1>",[["^7V","^7W","^7X"]]]]]],"~$reagent-input",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",251,"^8",7,"^9",251,"^:",20,"^68",["^1>",["^69",["^1>",[[]]]]]],"^N","^1S","^6","reagent/impl/template.cljs","^:",20,"^6:",["^1>",[[]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",251,"^6>","^6H","^9",251,"^6?",0,"^6@",true,"^68",["^1>",["^69",["^1>",[[]]]]]],"~$fragment-element",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",297,"^8",7,"^9",297,"^:",23,"^68",["^1>",["^69",["^1>",[["^7W"]]]]]],"^N","^2A","^6","reagent/impl/template.cljs","^:",23,"^6:",["^1>",[["^7W"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",297,"^6>","^6G","^9",297,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["^7W"]]]]]],"~$vec-to-elem",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",350,"^8",7,"^9",350,"^:",18,"^68",["^1>",["^69",["^1>",[["~$v"]]]]]],"^N","^1V","^6","reagent/impl/template.cljs","^:",18,"^6:",["^1>",[["~$v"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",350,"^6>",["^M",[null,"^6G","^6M"]],"^9",350,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$v"]]]]]],"~$cache-get",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",40,"^8",7,"^9",40,"^:",16,"^68",["^1>",["^69",["^1>",[["~$o","~$k"]]]]]],"^N","^3M","^6","reagent/impl/template.cljs","^:",16,"^6:",["^1>",[["~$o","~$k"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",40,"^6>",["^M",["^6G","^6H"]],"^9",40,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$o","~$k"]]]]]],"~$input-handle-change",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",199,"^8",7,"^9",199,"^:",26,"^68",["^1>",["^69",["^1>",[["^73","~$on-change","~$e"]]]]]],"^N","^1[","^6","reagent/impl/template.cljs","^:",26,"^6:",["^1>",[["^73","^82","~$e"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",199,"^6>","^6G","^9",199,"^6?",3,"^6@",true,"^68",["^1>",["^69",["^1>",[["^73","^82","~$e"]]]]]],"~$make-element",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",416,"^8",7,"^9",416,"^:",19,"^68",["^1>",["^69",["^1>",[["^7W","^7B","^74","~$first-child"]]]]]],"^N","^27","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["^7W","^7B","^74","^84"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",416,"^9",416,"^6?",4,"^6@",true,"^68",["^1>",["^69",["^1>",[["^7W","^7B","^74","^84"]]]]]],"~$input-spec",["^ ","^N","^2<","^6","reagent/impl/template.cljs","^7",241,"^8",1,"^9",241,"^:",16,"^5",["^ ","^6","reagent/impl/template.cljs","^7",241,"^8",6,"^9",241,"^:",16],"^66","~$cljs.core/IMap"],"~$expand-seq-dev",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",398,"^8",7,"^9",398,"^:",21,"^68",["^1>",["^69",["^1>",[["~$s","~$o"]]]]]],"^N","^2S","^6","reagent/impl/template.cljs","^:",21,"^6:",["^1>",[["~$s","~$o"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",398,"^6>","~$array","^9",398,"^6?",2,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$s","~$o"]]]]]],"~$convert-prop-value",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",62,"^8",7,"^9",62,"^:",25,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^2=","^6","reagent/impl/template.cljs","^:",25,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",62,"^6>",["^M",[null,"^6G","^13","^6U"]],"^9",62,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",44,"^8",7,"^9",44,"^:",23,"^68",["^1>",["^69",["^1>",[["~$k"]]]]]],"^N","^2T","^6","reagent/impl/template.cljs","^:",23,"^6:",["^1>",[["~$k"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",44,"^6>",["^M",[null,"^6G","^13","^6H"]],"^9",44,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",76,"^8",7,"^9",76,"^:",30,"^68",["^1>",["^69",["^1>",[["~$k"]]]]]],"^N","^2V","^6","reagent/impl/template.cljs","^:",30,"^6:",["^1>",[["~$k"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",76,"^6>",["^M",[null,"^6G","^13","^6H"]],"^9",76,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$k"]]]]]],"~$these-inputs-have-selection-api",["^ ","^N","^3G","^6","reagent/impl/template.cljs","^7",131,"^8",1,"^9",131,"^:",37,"^5",["^ ","^6","reagent/impl/template.cljs","^7",131,"^8",6,"^9",131,"^:",37],"^66","~$cljs.core/ISet"],"~$expand-seq",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",395,"^8",7,"^9",395,"^:",17,"^68",["^1>",["^69",["^1>",[["~$s"]]]]]],"^N","^1X","^6","reagent/impl/template.cljs","^:",17,"^6:",["^1>",[["~$s"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",395,"^6>","^88","^9",395,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$s"]]]]]],"~$->HiccupTag",["^ ","^65",null,"^5",["^ ","^6R",["^M",[]],"^6","reagent/impl/template.cljs","^:",19,"^8",10,"^6Y","^6Z","^7",260,"^9",260,"^68",["^1>",["^69",["^1>",[["^6L","^6[","^70","~$custom"]]]]],"^6V",null,"^6J","Positional factory function for reagent.impl.template/HiccupTag."],"^6R",["^M",[]],"^N","^2D","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["^6L","^6[","^70","^8@"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^6Y","^6Z","^7",260,"^6>","^2[","^9",260,"^6?",4,"^6@",true,"^68",["^1>",["^69",["^1>",[["^6L","^6[","^70","^8@"]]]]],"^6V",null,"^6J","Positional factory function for reagent.impl.template/HiccupTag."],"~$expand-seq-check",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",406,"^8",7,"^9",406,"^:",23,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^35","^6","reagent/impl/template.cljs","^:",23,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",406,"^6>",["^M",[null,"^6G","^6H"]],"^9",406,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$find-dom-node",["^ ","^N","^20","^6","reagent/impl/template.cljs","^7",126,"^8",1,"^9",126,"^:",23,"^5",["^ ","^6","reagent/impl/template.cljs","^7",126,"^8",10,"^9",126,"^:",23],"^66","^6H"],"~$cached-parse",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",313,"^8",7,"^9",313,"^:",19,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^38","^6","reagent/impl/template.cljs","^:",19,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",313,"^6>",["^M",["^6G","^2[","^6H"]],"^9",313,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"~$try-get-key",["^ ","^65",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",274,"^8",7,"^9",274,"^:",18,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]],"^N","^2L","^6","reagent/impl/template.cljs","^:",18,"^6:",["^1>",[["~$x"]]],"^6;",null,"^6<",["^1>",[null,null]],"^8",1,"^6=",false,"^7",274,"^9",274,"^6?",1,"^6@",true,"^68",["^1>",["^69",["^1>",[["~$x"]]]]]]],"^1<",["^ ","^J","^J","^X","^X","^W","^W","^12","^W"],"~:cljs.analyzer/constants",["^ ","^17",["^M",["^6L","~:key","~:else","~:component-did-update","~:<>","~:reagent-render","^8@","~:on-write","~:id","~:class","~:component-will-unmount","^70","~:display-name","^6["]],"~:order",["^6L","^6[","^70","^8G","^8L","^8M","^8K","^8O","^8H","^8N","^8J","^8@","^8F","^8I"]],"^1C",["^ ","^18",["^M",[]]],"^1D",["^ "],"^1E",["^[","^X","^A","^14","^16","^T","^V","^10","^W","^J","^Z"]],"^Q","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^46",[["^8S","~:static-fns"],true,["^8S","~:shadow-tweaks"],null,["^8S","~:source-map-inline"],null,["^8S","~:elide-asserts"],false,["^8S","~:optimize-constants"],null,["^8S","^1J"],null,["^8S","~:external-config"],null,["^8S","~:tooling-config"],null,["^8S","~:emit-constants"],null,["^8S","~:load-tests"],null,["^8S","~:form-size-threshold"],null,["^8S","~:data-readers"],null,["^8S","~:infer-externs"],"~:auto",["^8S","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8S","~:fn-invoke-direct"],null,["^8S","~:source-map"],"/dev/null"]]]