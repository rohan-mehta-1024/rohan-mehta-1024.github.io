{"version":3,"sources":["kee_frame/interop.cljs"],"mappings":"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","names":["this__4380__auto__","k__4381__auto__","this__4382__auto__","k38628","else__4383__auto__","G__38632","cljs.core.get","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","cljs.core.reduce","ret__4402__auto__","p__38633","vec__38634","k__4403__auto__","cljs.core.nth","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__38627","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","cljs.core/count","cljs.core/PROTOCOL_SENTINEL","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this38629","other38630","cljs.core._EQ_","this__4389__auto__","k__4390__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__38640","cljs.core/keyword-identical?","expr__38641","cljs.core.assoc","this__4392__auto__","cljs.core/seq","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","kee-frame.interop/AccountantNavigator","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__38631","extmap__4419__auto__","G__38644","cljs.core/record?","kee-frame.interop/->AccountantNavigator","kee-frame.interop/map->AccountantNavigator","_","accountant.core/dispatch-current!","url","accountant.core.navigate_BANG_","kee-frame.interop/make-navigator","opts","accountant.core/configure-navigation!","kee-frame.interop/render-root","root-component","temp__5733__auto__","app-element","js/document","reagent.dom.render","cljs.core.ex_info","kee-frame.interop/breakpoints-or-defaults","breakpoints","or__4126__auto__","kee-frame.interop/set-breakpoint-subs","breaking-point.core/register-subs","kee-frame.interop/set-breakpoints","re-frame.core/dispatch-sync","p__38653","map__38654","cljs.core.apply","cljs.core/hash-map","kee-frame.interop/set-log-level!","overwrites?","re-frame.loggers/set-loggers!","args","cljs.core/re-find","cljs.core/first","js/console.warn","kee-frame.interop/set-timeout","f","ms","js/setTimeout","kee-frame.interop/clear-timeout","t","js/clearTimeout"],"sourcesContent":["(ns ^:no-doc kee-frame.interop\n  (:require [kee-frame.api :as api]\n            [accountant.core :as accountant]\n            [reagent.dom :as reagent-dom]\n            [re-frame.core :as rf]\n            [day8.re-frame.http-fx]\n            [breaking-point.core :as bp]\n            [re-frame.loggers :as rf.log]))\n\n(defrecord AccountantNavigator []\n  api/Navigator\n  (dispatch-current! [_]\n    (accountant/dispatch-current!))\n  (navigate! [_ url]\n    (accountant/navigate! url)))\n\n(defn make-navigator\n  [opts]\n  (accountant/configure-navigation! opts)\n  (->AccountantNavigator))\n\n(defn render-root [root-component]\n  (when root-component\n    (if-let [app-element (.getElementById js/document \"app\")]\n\n      (reagent-dom/render root-component\n                      app-element)\n      (throw (ex-info \"Could not find element with id 'app' to mount app into\" {:component root-component})))))\n\n(defn breakpoints-or-defaults [breakpoints]\n  (or breakpoints\n      {:debounce-ms 166\n       :breakpoints [:mobile\n                     768\n                     :tablet\n                     992\n                     :small-monitor\n                     1200\n                     :large-monitor]}))\n\n(defn set-breakpoint-subs [breakpoints]\n  (bp/register-subs (:breakpoints (breakpoints-or-defaults breakpoints))))\n\n(defn set-breakpoints [breakpoints]\n  (rf/dispatch-sync [::bp/set-breakpoints (breakpoints-or-defaults breakpoints)]))\n\n(defn set-log-level! [{:keys [overwrites?]\n                       :or   {overwrites? false}}]\n  (when-not overwrites?\n    (rf.log/set-loggers!\n     {:warn (fn [& args]\n              (when-not (re-find #\"^re-frame: overwriting\" (first args))\n                (apply js/console.warn args)))})))\n\n(defn set-timeout [f ms]\n  (js/setTimeout f ms))\n\n(defn clear-timeout [t]\n  (js/clearTimeout t))"]}