{"version":3,"sources":["kee_frame/state.cljc"],"mappings":";AAEA,AAAKA,AAAY,AAAA,AAACC;AAElB,AAAKC,AAAO,AAAA,AAACD;AAEb,AAAKE,AAAU,AAAA,AAACF;AAEhB,AAAKG,AAAY,AAAA,AAACH;AAElB,AAAKI,AAAO,AAAA,AAACJ;AAEb,AAAKK,AAAa,AAAA,AAACL;AAEnB,AAAKM,AAAiB,AAAA,AAACN;AAEvB,AAAKO,AAAyB,AAAA,AAACP;AAG/B,AAAA,AAAMQ;AAAN,AACE,AAAA,AAACC,AAAOV;;AACR,AAAA,AAACU,AAAOH;;AACR,AAAA,AAACG,AAAOR;;AACR,AAAA,AAACQ,AAAOP","names":["kee-frame.state/controllers","cljs.core.atom","kee-frame.state/router","kee-frame.state/navigator","kee-frame.state/app-db-spec","kee-frame.state/debug?","kee-frame.state/debug-config","kee-frame.state/fsm-interceptors","kee-frame.state/breakpoints-initialized?","kee-frame.state/reset-state!","cljs.core/reset!"],"sourcesContent":["(ns ^:no-doc kee-frame.state)\n\n(def controllers (atom {}))\n\n(def router (atom nil))\n\n(def navigator (atom nil))\n\n(def app-db-spec (atom nil))\n\n(def debug? (atom false))\n\n(def debug-config (atom nil))\n\n(def fsm-interceptors (atom {}))\n\n(def breakpoints-initialized? (atom false))\n\n;; Test utility\n(defn reset-state! []\n  (reset! controllers {})\n  (reset! fsm-interceptors {})\n  (reset! router nil)\n  (reset! navigator nil))"]}