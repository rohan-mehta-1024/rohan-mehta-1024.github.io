shadow$provide.module$node_modules$lunr$lunr=function(global$jscomp$0,require,module,exports){(function(){var lunr=function(config){var builder=new lunr.Builder;builder.pipeline.add(lunr.trimmer,lunr.stopWordFilter,lunr.stemmer);builder.searchPipeline.add(lunr.stemmer);config.call(builder,builder);return builder.build()};lunr.version="2.3.9";lunr.utils={};lunr.utils.warn=function(global){return function(message){global.console&&console.warn&&console.warn(message)}}(this);lunr.utils.asString=function(obj){return void 0===
obj||null===obj?"":obj.toString()};lunr.utils.clone=function(obj){if(null===obj||void 0===obj)return obj;for(var clone=Object.create(null),keys=Object.keys(obj),i=0;i<keys.length;i++){var key=keys[i],val=obj[key];if(Array.isArray(val))clone[key]=val.slice();else if("string"===typeof val||"number"===typeof val||"boolean"===typeof val)clone[key]=val;else throw new TypeError("clone is not deep and does not support nested objects");}return clone};lunr.FieldRef=function(docRef,fieldName,stringValue){this.docRef=
docRef;this.fieldName=fieldName;this._stringValue=stringValue};lunr.FieldRef.joiner="/";lunr.FieldRef.fromString=function(s){var n=s.indexOf(lunr.FieldRef.joiner);if(-1===n)throw"malformed field ref string";var fieldRef=s.slice(0,n);n=s.slice(n+1);return new lunr.FieldRef(n,fieldRef,s)};lunr.FieldRef.prototype.toString=function(){void 0==this._stringValue&&(this._stringValue=this.fieldName+lunr.FieldRef.joiner+this.docRef);return this._stringValue};lunr.Set=function(elements){this.elements=Object.create(null);
if(elements){this.length=elements.length;for(var i=0;i<this.length;i++)this.elements[elements[i]]=!0}else this.length=0};lunr.Set.complete={intersect:function(other){return other},union:function(){return this},contains:function(){return!0}};lunr.Set.empty={intersect:function(){return this},union:function(other){return other},contains:function(){return!1}};lunr.Set.prototype.contains=function(object){return!!this.elements[object]};lunr.Set.prototype.intersect=function(other){var intersection=[];if(other===
lunr.Set.complete)return this;if(other===lunr.Set.empty)return other;if(this.length<other.length)var a=this;else a=other,other=this;a=Object.keys(a.elements);for(var i=0;i<a.length;i++){var element=a[i];element in other.elements&&intersection.push(element)}return new lunr.Set(intersection)};lunr.Set.prototype.union=function(other){return other===lunr.Set.complete?lunr.Set.complete:other===lunr.Set.empty?this:new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))};lunr.idf=function(posting,
documentCount){var documentsWithTerm=0,fieldName;for(fieldName in posting)"_index"!=fieldName&&(documentsWithTerm+=Object.keys(posting[fieldName]).length);return Math.log(1+Math.abs((documentCount-documentsWithTerm+.5)/(documentsWithTerm+.5)))};lunr.Token=function(str,metadata){this.str=str||"";this.metadata=metadata||{}};lunr.Token.prototype.toString=function(){return this.str};lunr.Token.prototype.update=function(fn){this.str=fn(this.str,this.metadata);return this};lunr.Token.prototype.clone=function(fn){fn=
fn||function(s){return s};return new lunr.Token(fn(this.str,this.metadata),this.metadata)};lunr.tokenizer=function(obj,metadata){if(null==obj||void 0==obj)return[];if(Array.isArray(obj))return obj.map(function(t){return new lunr.Token(lunr.utils.asString(t).toLowerCase(),lunr.utils.clone(metadata))});obj=obj.toString().toLowerCase();for(var len=obj.length,tokens=[],sliceEnd=0,sliceStart=0;sliceEnd<=len;sliceEnd++){var char=obj.charAt(sliceEnd),sliceLength=sliceEnd-sliceStart;if(char.match(lunr.tokenizer.separator)||
sliceEnd==len)0<sliceLength&&(char=lunr.utils.clone(metadata)||{},char.position=[sliceStart,sliceLength],char.index=tokens.length,tokens.push(new lunr.Token(obj.slice(sliceStart,sliceEnd),char))),sliceStart=sliceEnd+1}return tokens};lunr.tokenizer.separator=/[\s\-]+/;lunr.Pipeline=function(){this._stack=[]};lunr.Pipeline.registeredFunctions=Object.create(null);lunr.Pipeline.registerFunction=function(fn,label){label in this.registeredFunctions&&lunr.utils.warn("Overwriting existing registered function: "+
label);fn.label=label;lunr.Pipeline.registeredFunctions[fn.label]=fn};lunr.Pipeline.warnIfFunctionNotRegistered=function(fn){fn.label&&fn.label in this.registeredFunctions||lunr.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",fn)};lunr.Pipeline.load=function(serialised){var pipeline=new lunr.Pipeline;serialised.forEach(function(fnName){var fn=lunr.Pipeline.registeredFunctions[fnName];if(fn)pipeline.add(fn);else throw Error("Cannot load unregistered function: "+
fnName);});return pipeline};lunr.Pipeline.prototype.add=function(){Array.prototype.slice.call(arguments).forEach(function(fn){lunr.Pipeline.warnIfFunctionNotRegistered(fn);this._stack.push(fn)},this)};lunr.Pipeline.prototype.after=function(existingFn,newFn){lunr.Pipeline.warnIfFunctionNotRegistered(newFn);existingFn=this._stack.indexOf(existingFn);if(-1==existingFn)throw Error("Cannot find existingFn");this._stack.splice(existingFn+1,0,newFn)};lunr.Pipeline.prototype.before=function(existingFn,newFn){lunr.Pipeline.warnIfFunctionNotRegistered(newFn);
existingFn=this._stack.indexOf(existingFn);if(-1==existingFn)throw Error("Cannot find existingFn");this._stack.splice(existingFn,0,newFn)};lunr.Pipeline.prototype.remove=function(fn){fn=this._stack.indexOf(fn);-1!=fn&&this._stack.splice(fn,1)};lunr.Pipeline.prototype.run=function(tokens){for(var stackLength=this._stack.length,i=0;i<stackLength;i++){for(var fn=this._stack[i],memo=[],j=0;j<tokens.length;j++){var result=fn(tokens[j],j,tokens);if(null!==result&&void 0!==result&&""!==result)if(Array.isArray(result))for(var k=
0;k<result.length;k++)memo.push(result[k]);else memo.push(result)}tokens=memo}return tokens};lunr.Pipeline.prototype.runString=function(str,metadata){str=new lunr.Token(str,metadata);return this.run([str]).map(function(t){return t.toString()})};lunr.Pipeline.prototype.reset=function(){this._stack=[]};lunr.Pipeline.prototype.toJSON=function(){return this._stack.map(function(fn){lunr.Pipeline.warnIfFunctionNotRegistered(fn);return fn.label})};lunr.Vector=function(elements){this._magnitude=0;this.elements=
elements||[]};lunr.Vector.prototype.positionForIndex=function(index){if(0==this.elements.length)return 0;for(var start=0,end=this.elements.length/2,sliceLength=end-start,pivotPoint=Math.floor(sliceLength/2),pivotIndex=this.elements[2*pivotPoint];1<sliceLength;){pivotIndex<index&&(start=pivotPoint);pivotIndex>index&&(end=pivotPoint);if(pivotIndex==index)break;sliceLength=end-start;pivotPoint=start+Math.floor(sliceLength/2);pivotIndex=this.elements[2*pivotPoint]}if(pivotIndex==index||pivotIndex>index)return 2*
pivotPoint;if(pivotIndex<index)return 2*(pivotPoint+1)};lunr.Vector.prototype.insert=function(insertIdx,val){this.upsert(insertIdx,val,function(){throw"duplicate index";})};lunr.Vector.prototype.upsert=function(insertIdx,val,fn){this._magnitude=0;var position=this.positionForIndex(insertIdx);this.elements[position]==insertIdx?this.elements[position+1]=fn(this.elements[position+1],val):this.elements.splice(position,0,insertIdx,val)};lunr.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;
for(var sumOfSquares=0,elementsLength=this.elements.length,i=1;i<elementsLength;i+=2){var val=this.elements[i];sumOfSquares+=val*val}return this._magnitude=Math.sqrt(sumOfSquares)};lunr.Vector.prototype.dot=function(otherVector){var dotProduct=0,a=this.elements;otherVector=otherVector.elements;for(var aLen=a.length,bLen=otherVector.length,aVal,bVal,i=0,j=0;i<aLen&&j<bLen;)aVal=a[i],bVal=otherVector[j],aVal<bVal?i+=2:aVal>bVal?j+=2:aVal==bVal&&(dotProduct+=a[i+1]*otherVector[j+1],i+=2,j+=2);return dotProduct};
lunr.Vector.prototype.similarity=function(otherVector){return this.dot(otherVector)/this.magnitude()||0};lunr.Vector.prototype.toArray=function(){for(var output=Array(this.elements.length/2),i=1,j=0;i<this.elements.length;i+=2,j++)output[j]=this.elements[i];return output};lunr.Vector.prototype.toJSON=function(){return this.elements};lunr.stemmer=function(){var step2list={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",
ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},step3list={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},re_mgr0=/^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*/,re_mgr1=/^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*/,re_meq1=/^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$/,re_s_v=/^([^aeiou][^aeiouy]*)?[aeiouy]/,re_1a=
/^(.+?)(ss|i)es$/,re2_1a=/^(.+?)([^s])s$/,re_1b=/^(.+?)eed$/,re2_1b=/^(.+?)(ed|ing)$/,re_1b_2=/.$/,re2_1b_2=/(at|bl|iz)$/,re3_1b_2=/([^aeiouylsz])\1$/,re4_1b_2=/^[^aeiou][^aeiouy]*[aeiouy][^aeiouwxy]$/,re_1c=/^(.+?[^aeiou])y$/,re_2=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,re_3=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,re_4=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,
re2_4=/^(.+?)(s|t)(ion)$/,re_5=/^(.+?)e$/,re_5_1=/ll$/,re3_5=/^[^aeiou][^aeiouy]*[aeiouy][^aeiouwxy]$/,porterStemmer=function(w){if(3>w.length)return w;var firstch=w.substr(0,1);"y"==firstch&&(w=firstch.toUpperCase()+w.substr(1));var re=re_1a;var suffix=re2_1a;re.test(w)?w=w.replace(re,"$1$2"):suffix.test(w)&&(w=w.replace(suffix,"$1$2"));re=re_1b;suffix=re2_1b;if(re.test(w))suffix=re.exec(w),re=re_mgr0,re.test(suffix[1])&&(re=re_1b_2,w=w.replace(re,""));else if(suffix.test(w)){suffix=suffix.exec(w);
var stem=suffix[1];suffix=re_s_v;if(suffix.test(stem)){w=stem;suffix=re2_1b_2;var re3=re3_1b_2;suffix.test(w)?w+="e":re3.test(w)?(re=re_1b_2,w=w.replace(re,"")):re4_1b_2.test(w)&&(w+="e")}}re=re_1c;re.test(w)&&(suffix=re.exec(w),stem=suffix[1],w=stem+"i");re=re_2;re.test(w)&&(suffix=re.exec(w),stem=suffix[1],suffix=suffix[2],re=re_mgr0,re.test(stem)&&(w=stem+step2list[suffix]));re=re_3;re.test(w)&&(suffix=re.exec(w),stem=suffix[1],suffix=suffix[2],re=re_mgr0,re.test(stem)&&(w=stem+step3list[suffix]));
re=re_4;suffix=re2_4;re.test(w)?(suffix=re.exec(w),stem=suffix[1],re=re_mgr1,re.test(stem)&&(w=stem)):suffix.test(w)&&(suffix=suffix.exec(w),stem=suffix[1]+suffix[2],suffix=re_mgr1,suffix.test(stem)&&(w=stem));re=re_5;re.test(w)&&(suffix=re.exec(w),stem=suffix[1],re=re_mgr1,suffix=re_meq1,re3=re3_5,re.test(stem)||suffix.test(stem)&&!re3.test(stem))&&(w=stem);re=re_5_1;suffix=re_mgr1;re.test(w)&&suffix.test(w)&&(re=re_1b_2,w=w.replace(re,""));"y"==firstch&&(w=firstch.toLowerCase()+w.substr(1));return w};
return function(token){return token.update(porterStemmer)}}();lunr.Pipeline.registerFunction(lunr.stemmer,"stemmer");lunr.generateStopWordFilter=function(stopWords){var words=stopWords.reduce(function(memo,stopWord){memo[stopWord]=stopWord;return memo},{});return function(token){if(token&&words[token.toString()]!==token.toString())return token}};lunr.stopWordFilter=lunr.generateStopWordFilter("a able about across after all almost also am among an and any are as at be because been but by can cannot could dear did do does either else ever every for from get got had has have he her hers him his how however i if in into is it its just least let like likely may me might most must my neither no nor not of off often on only or other our own rather said say says she should since so some than that the their them then there these they this tis to too twas us wants was we were what when where which while who whom why will with would yet you your".split(" "));
lunr.Pipeline.registerFunction(lunr.stopWordFilter,"stopWordFilter");lunr.trimmer=function(token){return token.update(function(s){return s.replace(/^\W+/,"").replace(/\W+$/,"")})};lunr.Pipeline.registerFunction(lunr.trimmer,"trimmer");lunr.TokenSet=function(){this.final=!1;this.edges={};this.id=lunr.TokenSet._nextId;lunr.TokenSet._nextId+=1};lunr.TokenSet._nextId=1;lunr.TokenSet.fromArray=function(arr){for(var builder=new lunr.TokenSet.Builder,i=0,len=arr.length;i<len;i++)builder.insert(arr[i]);builder.finish();
return builder.root};lunr.TokenSet.fromClause=function(clause){return"editDistance"in clause?lunr.TokenSet.fromFuzzyString(clause.term,clause.editDistance):lunr.TokenSet.fromString(clause.term)};lunr.TokenSet.fromFuzzyString=function(str,editDistance){var root=new lunr.TokenSet;for(str=[{node:root,editsRemaining:editDistance,str:str}];str.length;){editDistance=str.pop();if(0<editDistance.str.length){var char=editDistance.str.charAt(0);if(char in editDistance.node.edges)var noEditNode=editDistance.node.edges[char];
else noEditNode=new lunr.TokenSet,editDistance.node.edges[char]=noEditNode;1==editDistance.str.length&&(noEditNode.final=!0);str.push({node:noEditNode,editsRemaining:editDistance.editsRemaining,str:editDistance.str.slice(1)})}if(0!=editDistance.editsRemaining&&("*"in editDistance.node.edges?char=editDistance.node.edges["*"]:(char=new lunr.TokenSet,editDistance.node.edges["*"]=char),0==editDistance.str.length&&(char.final=!0),str.push({node:char,editsRemaining:editDistance.editsRemaining-1,str:editDistance.str}),
1<editDistance.str.length&&str.push({node:editDistance.node,editsRemaining:editDistance.editsRemaining-1,str:editDistance.str.slice(1)}),1==editDistance.str.length&&(editDistance.node.final=!0),1<=editDistance.str.length&&("*"in editDistance.node.edges?char=editDistance.node.edges["*"]:(char=new lunr.TokenSet,editDistance.node.edges["*"]=char),1==editDistance.str.length&&(char.final=!0),str.push({node:char,editsRemaining:editDistance.editsRemaining-1,str:editDistance.str.slice(1)})),1<editDistance.str.length)){char=
editDistance.str.charAt(0);noEditNode=editDistance.str.charAt(1);if(noEditNode in editDistance.node.edges)var transposeNode=editDistance.node.edges[noEditNode];else transposeNode=new lunr.TokenSet,editDistance.node.edges[noEditNode]=transposeNode;1==editDistance.str.length&&(transposeNode.final=!0);str.push({node:transposeNode,editsRemaining:editDistance.editsRemaining-1,str:char+editDistance.str.slice(2)})}}return root};lunr.TokenSet.fromString=function(str){for(var node=new lunr.TokenSet,root=node,
i=0,len=str.length;i<len;i++){var char=str[i],final=i==len-1;if("*"==char)node.edges[char]=node,node.final=final;else{var next=new lunr.TokenSet;next.final=final;node=node.edges[char]=next}}return root};lunr.TokenSet.prototype.toArray=function(){for(var words=[],stack=[{prefix:"",node:this}];stack.length;){var frame=stack.pop(),edges=Object.keys(frame.node.edges),len=edges.length;frame.node.final&&(frame.prefix.charAt(0),words.push(frame.prefix));for(var i=0;i<len;i++){var edge=edges[i];stack.push({prefix:frame.prefix.concat(edge),
node:frame.node.edges[edge]})}}return words};lunr.TokenSet.prototype.toString=function(){if(this._str)return this._str;for(var str=this.final?"1":"0",labels=Object.keys(this.edges).sort(),len=labels.length,i=0;i<len;i++){var label=labels[i];str=str+label+this.edges[label].id}return str};lunr.TokenSet.prototype.intersect=function(b){for(var output=new lunr.TokenSet,stack=[{qNode:b,output:output,node:this}];stack.length;){b=stack.pop();for(var qEdges=Object.keys(b.qNode.edges),qLen=qEdges.length,nEdges=
Object.keys(b.node.edges),nLen=nEdges.length,q=0;q<qLen;q++)for(var qEdge=qEdges[q],n=0;n<nLen;n++){var nEdge=nEdges[n];if(nEdge==qEdge||"*"==qEdge){var node=b.node.edges[nEdge],qNode=b.qNode.edges[qEdge],final=node.final&&qNode.final;if(nEdge in b.output.edges){var next=b.output.edges[nEdge];next.final=next.final||final}else next=new lunr.TokenSet,next.final=final,b.output.edges[nEdge]=next;stack.push({qNode:qNode,output:next,node:node})}}}return output};lunr.TokenSet.Builder=function(){this.previousWord=
"";this.root=new lunr.TokenSet;this.uncheckedNodes=[];this.minimizedNodes={}};lunr.TokenSet.Builder.prototype.insert=function(word){var commonPrefix=0;if(word<this.previousWord)throw Error("Out of order word insertion");for(var i=0;i<word.length&&i<this.previousWord.length&&word[i]==this.previousWord[i];i++)commonPrefix++;this.minimize(commonPrefix);var node=0==this.uncheckedNodes.length?this.root:this.uncheckedNodes[this.uncheckedNodes.length-1].child;for(i=commonPrefix;i<word.length;i++){commonPrefix=
new lunr.TokenSet;var char=word[i];node.edges[char]=commonPrefix;this.uncheckedNodes.push({parent:node,char:char,child:commonPrefix});node=commonPrefix}node.final=!0;this.previousWord=word};lunr.TokenSet.Builder.prototype.finish=function(){this.minimize(0)};lunr.TokenSet.Builder.prototype.minimize=function(downTo){for(var i=this.uncheckedNodes.length-1;i>=downTo;i--){var node=this.uncheckedNodes[i],childKey=node.child.toString();childKey in this.minimizedNodes?node.parent.edges[node.char]=this.minimizedNodes[childKey]:
(node.child._str=childKey,this.minimizedNodes[childKey]=node.child);this.uncheckedNodes.pop()}};lunr.Index=function(attrs){this.invertedIndex=attrs.invertedIndex;this.fieldVectors=attrs.fieldVectors;this.tokenSet=attrs.tokenSet;this.fields=attrs.fields;this.pipeline=attrs.pipeline};lunr.Index.prototype.search=function(queryString){return this.query(function(query){(new lunr.QueryParser(queryString,query)).parse()})};lunr.Index.prototype.query=function(fn){for(var query=new lunr.Query(this.fields),
matchingFields=Object.create(null),queryVectors=Object.create(null),termFieldCache=Object.create(null),requiredMatches=Object.create(null),prohibitedMatches=Object.create(null),i=0;i<this.fields.length;i++)queryVectors[this.fields[i]]=new lunr.Vector;fn.call(query,query);for(i=0;i<query.clauses.length;i++){var clause=query.clauses[i],terms=null,clauseMatches=lunr.Set.empty;terms=clause.usePipeline?this.pipeline.runString(clause.term,{fields:clause.fields}):[clause.term];for(var m=0;m<terms.length;m++){clause.term=
terms[m];fn=lunr.TokenSet.fromClause(clause);var expandedTerms=this.tokenSet.intersect(fn).toArray();if(0===expandedTerms.length&&clause.presence===lunr.Query.presence.REQUIRED){for(var k=0;k<clause.fields.length;k++){var field=clause.fields[k];requiredMatches[field]=lunr.Set.empty}break}for(var j=0;j<expandedTerms.length;j++){var expandedTerm=expandedTerms[j],posting=this.invertedIndex[expandedTerm],termIndex=posting._index;for(k=0;k<clause.fields.length;k++){field=clause.fields[k];var fieldPosting=
posting[field],matchingDocumentRefs=Object.keys(fieldPosting),termField=expandedTerm+"/"+field;fn=new lunr.Set(matchingDocumentRefs);clause.presence==lunr.Query.presence.REQUIRED&&(clauseMatches=clauseMatches.union(fn),void 0===requiredMatches[field]&&(requiredMatches[field]=lunr.Set.complete));if(clause.presence==lunr.Query.presence.PROHIBITED)void 0===prohibitedMatches[field]&&(prohibitedMatches[field]=lunr.Set.empty),prohibitedMatches[field]=prohibitedMatches[field].union(fn);else if(queryVectors[field].upsert(termIndex,
clause.boost,function(a,b){return a+b}),!termFieldCache[termField]){for(var l=0;l<matchingDocumentRefs.length;l++){var matchingDocumentRef=matchingDocumentRefs[l];fn=new lunr.FieldRef(matchingDocumentRef,field);matchingDocumentRef=fieldPosting[matchingDocumentRef];var fieldMatch;void 0===(fieldMatch=matchingFields[fn])?matchingFields[fn]=new lunr.MatchData(expandedTerm,field,matchingDocumentRef):fieldMatch.add(expandedTerm,field,matchingDocumentRef)}termFieldCache[termField]=!0}}}}if(clause.presence===
lunr.Query.presence.REQUIRED)for(k=0;k<clause.fields.length;k++)field=clause.fields[k],requiredMatches[field]=requiredMatches[field].intersect(clauseMatches)}termFieldCache=lunr.Set.complete;fieldMatch=lunr.Set.empty;for(i=0;i<this.fields.length;i++)field=this.fields[i],requiredMatches[field]&&(termFieldCache=termFieldCache.intersect(requiredMatches[field])),prohibitedMatches[field]&&(fieldMatch=fieldMatch.union(prohibitedMatches[field]));requiredMatches=Object.keys(matchingFields);prohibitedMatches=
[];field=Object.create(null);if(query.isNegated())for(requiredMatches=Object.keys(this.fieldVectors),i=0;i<requiredMatches.length;i++)fn=requiredMatches[i],query=lunr.FieldRef.fromString(fn),matchingFields[fn]=new lunr.MatchData;for(i=0;i<requiredMatches.length;i++)query=lunr.FieldRef.fromString(requiredMatches[i]),fn=query.docRef,termFieldCache.contains(fn)&&!fieldMatch.contains(fn)&&(clause=queryVectors[query.fieldName].similarity(this.fieldVectors[query]),void 0!==(terms=field[fn])?(terms.score+=
clause,terms.matchData.combine(matchingFields[query])):(query={ref:fn,score:clause,matchData:matchingFields[query]},field[fn]=query,prohibitedMatches.push(query)));return prohibitedMatches.sort(function(a,b){return b.score-a.score})};lunr.Index.prototype.toJSON=function(){var invertedIndex=Object.keys(this.invertedIndex).sort().map(function(term){return[term,this.invertedIndex[term]]},this),fieldVectors=Object.keys(this.fieldVectors).map(function(ref){return[ref,this.fieldVectors[ref].toJSON()]},
this);return{version:lunr.version,fields:this.fields,fieldVectors:fieldVectors,invertedIndex:invertedIndex,pipeline:this.pipeline.toJSON()}};lunr.Index.load=function(serializedIndex){var attrs={},fieldVectors={},serializedVectors=serializedIndex.fieldVectors,invertedIndex=Object.create(null),serializedInvertedIndex=serializedIndex.invertedIndex,tokenSetBuilder=new lunr.TokenSet.Builder,pipeline=lunr.Pipeline.load(serializedIndex.pipeline);serializedIndex.version!=lunr.version&&lunr.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+
lunr.version+"' does not match serialized index '"+serializedIndex.version+"'");for(var i=0;i<serializedVectors.length;i++){var tuple=serializedVectors[i];fieldVectors[tuple[0]]=new lunr.Vector(tuple[1])}for(i=0;i<serializedInvertedIndex.length;i++)tuple=serializedInvertedIndex[i],serializedVectors=tuple[0],tuple=tuple[1],tokenSetBuilder.insert(serializedVectors),invertedIndex[serializedVectors]=tuple;tokenSetBuilder.finish();attrs.fields=serializedIndex.fields;attrs.fieldVectors=fieldVectors;attrs.invertedIndex=
invertedIndex;attrs.tokenSet=tokenSetBuilder.root;attrs.pipeline=pipeline;return new lunr.Index(attrs)};lunr.Builder=function(){this._ref="id";this._fields=Object.create(null);this._documents=Object.create(null);this.invertedIndex=Object.create(null);this.fieldTermFrequencies={};this.fieldLengths={};this.tokenizer=lunr.tokenizer;this.pipeline=new lunr.Pipeline;this.searchPipeline=new lunr.Pipeline;this.documentCount=0;this._b=.75;this._k1=1.2;this.termIndex=0;this.metadataWhitelist=[]};lunr.Builder.prototype.ref=
function(ref){this._ref=ref};lunr.Builder.prototype.field=function(fieldName,attributes){if(/\//.test(fieldName))throw new RangeError("Field '"+fieldName+"' contains illegal character '/'");this._fields[fieldName]=attributes||{}};lunr.Builder.prototype.b=function(number){this._b=0>number?0:1<number?1:number};lunr.Builder.prototype.k1=function(number){this._k1=number};lunr.Builder.prototype.add=function(doc,attributes){var docRef=doc[this._ref],fields=Object.keys(this._fields);this._documents[docRef]=
attributes||{};this.documentCount+=1;for(attributes=0;attributes<fields.length;attributes++){var fieldName=fields[attributes],extractor=this._fields[fieldName].extractor;extractor=extractor?extractor(doc):doc[fieldName];extractor=this.tokenizer(extractor,{fields:[fieldName]});extractor=this.pipeline.run(extractor);var fieldRef=new lunr.FieldRef(docRef,fieldName),fieldTerms=Object.create(null);this.fieldTermFrequencies[fieldRef]=fieldTerms;this.fieldLengths[fieldRef]=0;this.fieldLengths[fieldRef]+=
extractor.length;for(fieldRef=0;fieldRef<extractor.length;fieldRef++){var term=extractor[fieldRef];void 0==fieldTerms[term]&&(fieldTerms[term]=0);fieldTerms[term]+=1;if(void 0==this.invertedIndex[term]){var posting=Object.create(null);posting._index=this.termIndex;this.termIndex+=1;for(var k=0;k<fields.length;k++)posting[fields[k]]=Object.create(null);this.invertedIndex[term]=posting}void 0==this.invertedIndex[term][fieldName][docRef]&&(this.invertedIndex[term][fieldName][docRef]=Object.create(null));
for(posting=0;posting<this.metadataWhitelist.length;posting++){k=this.metadataWhitelist[posting];var metadata=term.metadata[k];void 0==this.invertedIndex[term][fieldName][docRef][k]&&(this.invertedIndex[term][fieldName][docRef][k]=[]);this.invertedIndex[term][fieldName][docRef][k].push(metadata)}}}};lunr.Builder.prototype.calculateAverageFieldLengths=function(){for(var fieldRefs=Object.keys(this.fieldLengths),numberOfFields=fieldRefs.length,accumulator={},documentsWithField={},i=0;i<numberOfFields;i++){var fieldRef=
lunr.FieldRef.fromString(fieldRefs[i]),field=fieldRef.fieldName;documentsWithField[field]||(documentsWithField[field]=0);documentsWithField[field]+=1;accumulator[field]||(accumulator[field]=0);accumulator[field]+=this.fieldLengths[fieldRef]}fieldRefs=Object.keys(this._fields);for(i=0;i<fieldRefs.length;i++)numberOfFields=fieldRefs[i],accumulator[numberOfFields]/=documentsWithField[numberOfFields];this.averageFieldLength=accumulator};lunr.Builder.prototype.createFieldVectors=function(){for(var fieldVectors=
{},fieldRefs=Object.keys(this.fieldTermFrequencies),fieldRefsLength=fieldRefs.length,termIdfCache=Object.create(null),i=0;i<fieldRefsLength;i++){for(var fieldRef=lunr.FieldRef.fromString(fieldRefs[i]),fieldName=fieldRef.fieldName,fieldLength=this.fieldLengths[fieldRef],fieldVector=new lunr.Vector,termFrequencies=this.fieldTermFrequencies[fieldRef],terms=Object.keys(termFrequencies),termsLength=terms.length,fieldBoost=this._fields[fieldName].boost||1,docBoost=this._documents[fieldRef.docRef].boost||
1,j=0;j<termsLength;j++){var term=terms[j],tf=termFrequencies[term],termIndex=this.invertedIndex[term]._index;if(void 0===termIdfCache[term]){var idf=lunr.idf(this.invertedIndex[term],this.documentCount);termIdfCache[term]=idf}else idf=termIdfCache[term];term=idf*(this._k1+1)*tf/(this._k1*(1-this._b+fieldLength/this.averageFieldLength[fieldName]*this._b)+tf);term*=fieldBoost;term*=docBoost;fieldVector.insert(termIndex,Math.round(1E3*term)/1E3)}fieldVectors[fieldRef]=fieldVector}this.fieldVectors=
fieldVectors};lunr.Builder.prototype.createTokenSet=function(){this.tokenSet=lunr.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())};lunr.Builder.prototype.build=function(){this.calculateAverageFieldLengths();this.createFieldVectors();this.createTokenSet();return new lunr.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})};lunr.Builder.prototype.use=function(fn){var args=Array.prototype.slice.call(arguments,
1);args.unshift(this);fn.apply(this,args)};lunr.MatchData=function(term,field,metadata){for(var clonedMetadata=Object.create(null),metadataKeys=Object.keys(metadata||{}),i=0;i<metadataKeys.length;i++){var key=metadataKeys[i];clonedMetadata[key]=metadata[key].slice()}this.metadata=Object.create(null);void 0!==term&&(this.metadata[term]=Object.create(null),this.metadata[term][field]=clonedMetadata)};lunr.MatchData.prototype.combine=function(otherMatchData){for(var terms=Object.keys(otherMatchData.metadata),
i=0;i<terms.length;i++){var term=terms[i],fields=Object.keys(otherMatchData.metadata[term]);void 0==this.metadata[term]&&(this.metadata[term]=Object.create(null));for(var j=0;j<fields.length;j++){var field=fields[j],keys=Object.keys(otherMatchData.metadata[term][field]);void 0==this.metadata[term][field]&&(this.metadata[term][field]=Object.create(null));for(var k=0;k<keys.length;k++){var key=keys[k];this.metadata[term][field][key]=void 0==this.metadata[term][field][key]?otherMatchData.metadata[term][field][key]:
this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])}}}};lunr.MatchData.prototype.add=function(term,field,metadata){if(term in this.metadata)if(field in this.metadata[term])for(var metadataKeys=Object.keys(metadata),i=0;i<metadataKeys.length;i++){var key=metadataKeys[i];this.metadata[term][field][key]=key in this.metadata[term][field]?this.metadata[term][field][key].concat(metadata[key]):metadata[key]}else this.metadata[term][field]=metadata;else this.metadata[term]=Object.create(null),
this.metadata[term][field]=metadata};lunr.Query=function(allFields){this.clauses=[];this.allFields=allFields};lunr.Query.wildcard=new String("*");lunr.Query.wildcard.NONE=0;lunr.Query.wildcard.LEADING=1;lunr.Query.wildcard.TRAILING=2;lunr.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3};lunr.Query.prototype.clause=function(clause){"fields"in clause||(clause.fields=this.allFields);"boost"in clause||(clause.boost=1);"usePipeline"in clause||(clause.usePipeline=!0);"wildcard"in clause||(clause.wildcard=
lunr.Query.wildcard.NONE);clause.wildcard&lunr.Query.wildcard.LEADING&&clause.term.charAt(0)!=lunr.Query.wildcard&&(clause.term="*"+clause.term);clause.wildcard&lunr.Query.wildcard.TRAILING&&clause.term.slice(-1)!=lunr.Query.wildcard&&(clause.term=""+clause.term+"*");"presence"in clause||(clause.presence=lunr.Query.presence.OPTIONAL);this.clauses.push(clause);return this};lunr.Query.prototype.isNegated=function(){for(var i=0;i<this.clauses.length;i++)if(this.clauses[i].presence!=lunr.Query.presence.PROHIBITED)return!1;
return!0};lunr.Query.prototype.term=function(term,options){if(Array.isArray(term))return term.forEach(function(t){this.term(t,lunr.utils.clone(options))},this),this;var clause=options||{};clause.term=term.toString();this.clause(clause);return this};lunr.QueryParseError=function(message,start,end){this.name="QueryParseError";this.message=message;this.start=start;this.end=end};lunr.QueryParseError.prototype=Error();lunr.QueryLexer=function(str){this.lexemes=[];this.str=str;this.length=str.length;this.start=
this.pos=0;this.escapeCharPositions=[]};lunr.QueryLexer.prototype.run=function(){for(var state=lunr.QueryLexer.lexText;state;)state=state(this)};lunr.QueryLexer.prototype.sliceString=function(){for(var subSlices=[],sliceStart=this.start,sliceEnd,i=0;i<this.escapeCharPositions.length;i++)sliceEnd=this.escapeCharPositions[i],subSlices.push(this.str.slice(sliceStart,sliceEnd)),sliceStart=sliceEnd+1;subSlices.push(this.str.slice(sliceStart,this.pos));this.escapeCharPositions.length=0;return subSlices.join("")};
lunr.QueryLexer.prototype.emit=function(type){this.lexemes.push({type:type,str:this.sliceString(),start:this.start,end:this.pos});this.start=this.pos};lunr.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1);this.pos+=1};lunr.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return lunr.QueryLexer.EOS;var char=this.str.charAt(this.pos);this.pos+=1;return char};lunr.QueryLexer.prototype.width=function(){return this.pos-this.start};lunr.QueryLexer.prototype.ignore=
function(){this.start==this.pos&&(this.pos+=1);this.start=this.pos};lunr.QueryLexer.prototype.backup=function(){--this.pos};lunr.QueryLexer.prototype.acceptDigitRun=function(){do{var char=this.next();var charCode=char.charCodeAt(0)}while(47<charCode&&58>charCode);char!=lunr.QueryLexer.EOS&&this.backup()};lunr.QueryLexer.prototype.more=function(){return this.pos<this.length};lunr.QueryLexer.EOS="EOS";lunr.QueryLexer.FIELD="FIELD";lunr.QueryLexer.TERM="TERM";lunr.QueryLexer.EDIT_DISTANCE="EDIT_DISTANCE";
lunr.QueryLexer.BOOST="BOOST";lunr.QueryLexer.PRESENCE="PRESENCE";lunr.QueryLexer.lexField=function(lexer){lexer.backup();lexer.emit(lunr.QueryLexer.FIELD);lexer.ignore();return lunr.QueryLexer.lexText};lunr.QueryLexer.lexTerm=function(lexer){1<lexer.width()&&(lexer.backup(),lexer.emit(lunr.QueryLexer.TERM));lexer.ignore();if(lexer.more())return lunr.QueryLexer.lexText};lunr.QueryLexer.lexEditDistance=function(lexer){lexer.ignore();lexer.acceptDigitRun();lexer.emit(lunr.QueryLexer.EDIT_DISTANCE);
return lunr.QueryLexer.lexText};lunr.QueryLexer.lexBoost=function(lexer){lexer.ignore();lexer.acceptDigitRun();lexer.emit(lunr.QueryLexer.BOOST);return lunr.QueryLexer.lexText};lunr.QueryLexer.lexEOS=function(lexer){0<lexer.width()&&lexer.emit(lunr.QueryLexer.TERM)};lunr.QueryLexer.termSeparator=lunr.tokenizer.separator;lunr.QueryLexer.lexText=function(lexer){for(;;){var char=lexer.next();if(char==lunr.QueryLexer.EOS)return lunr.QueryLexer.lexEOS;if(92==char.charCodeAt(0))lexer.escapeCharacter();
else{if(":"==char)return lunr.QueryLexer.lexField;if("~"==char)return lexer.backup(),0<lexer.width()&&lexer.emit(lunr.QueryLexer.TERM),lunr.QueryLexer.lexEditDistance;if("^"==char)return lexer.backup(),0<lexer.width()&&lexer.emit(lunr.QueryLexer.TERM),lunr.QueryLexer.lexBoost;if("+"==char&&1===lexer.width()||"-"==char&&1===lexer.width())return lexer.emit(lunr.QueryLexer.PRESENCE),lunr.QueryLexer.lexText;if(char.match(lunr.QueryLexer.termSeparator))return lunr.QueryLexer.lexTerm}}};lunr.QueryParser=
function(str,query){this.lexer=new lunr.QueryLexer(str);this.query=query;this.currentClause={};this.lexemeIdx=0};lunr.QueryParser.prototype.parse=function(){this.lexer.run();this.lexemes=this.lexer.lexemes;for(var state=lunr.QueryParser.parseClause;state;)state=state(this);return this.query};lunr.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]};lunr.QueryParser.prototype.consumeLexeme=function(){var lexeme=this.peekLexeme();this.lexemeIdx+=1;return lexeme};lunr.QueryParser.prototype.nextClause=
function(){this.query.clause(this.currentClause);this.currentClause={}};lunr.QueryParser.parseClause=function(parser){parser=parser.peekLexeme();if(void 0!=parser)switch(parser.type){case lunr.QueryLexer.PRESENCE:return lunr.QueryParser.parsePresence;case lunr.QueryLexer.FIELD:return lunr.QueryParser.parseField;case lunr.QueryLexer.TERM:return lunr.QueryParser.parseTerm;default:var errorMessage="expected either a field or a term, found "+parser.type;1<=parser.str.length&&(errorMessage+=" with value '"+
parser.str+"'");throw new lunr.QueryParseError(errorMessage,parser.start,parser.end);}};lunr.QueryParser.parsePresence=function(parser){var lexeme=parser.consumeLexeme();if(void 0!=lexeme){switch(lexeme.str){case "-":parser.currentClause.presence=lunr.Query.presence.PROHIBITED;break;case "+":parser.currentClause.presence=lunr.Query.presence.REQUIRED;break;default:throw parser="unrecognised presence operator'"+lexeme.str+"'",new lunr.QueryParseError(parser,lexeme.start,lexeme.end);}var nextLexeme=
parser.peekLexeme();if(void 0==nextLexeme)throw new lunr.QueryParseError("expecting term or field, found nothing",lexeme.start,lexeme.end);switch(nextLexeme.type){case lunr.QueryLexer.FIELD:return lunr.QueryParser.parseField;case lunr.QueryLexer.TERM:return lunr.QueryParser.parseTerm;default:throw parser="expecting term or field, found '"+nextLexeme.type+"'",new lunr.QueryParseError(parser,nextLexeme.start,nextLexeme.end);}}};lunr.QueryParser.parseField=function(parser){var lexeme=parser.consumeLexeme();
if(void 0!=lexeme){if(-1==parser.query.allFields.indexOf(lexeme.str))throw parser=parser.query.allFields.map(function(f){return"'"+f+"'"}).join(", "),parser="unrecognised field '"+lexeme.str+"', possible fields: "+parser,new lunr.QueryParseError(parser,lexeme.start,lexeme.end);parser.currentClause.fields=[lexeme.str];var nextLexeme=parser.peekLexeme();if(void 0==nextLexeme)throw new lunr.QueryParseError("expecting term, found nothing",lexeme.start,lexeme.end);switch(nextLexeme.type){case lunr.QueryLexer.TERM:return lunr.QueryParser.parseTerm;
default:throw parser="expecting term, found '"+nextLexeme.type+"'",new lunr.QueryParseError(parser,nextLexeme.start,nextLexeme.end);}}};lunr.QueryParser.parseTerm=function(parser){var lexeme=parser.consumeLexeme();if(void 0!=lexeme)if(parser.currentClause.term=lexeme.str.toLowerCase(),-1!=lexeme.str.indexOf("*")&&(parser.currentClause.usePipeline=!1),lexeme=parser.peekLexeme(),void 0==lexeme)parser.nextClause();else switch(lexeme.type){case lunr.QueryLexer.TERM:return parser.nextClause(),lunr.QueryParser.parseTerm;
case lunr.QueryLexer.FIELD:return parser.nextClause(),lunr.QueryParser.parseField;case lunr.QueryLexer.EDIT_DISTANCE:return lunr.QueryParser.parseEditDistance;case lunr.QueryLexer.BOOST:return lunr.QueryParser.parseBoost;case lunr.QueryLexer.PRESENCE:return parser.nextClause(),lunr.QueryParser.parsePresence;default:throw new lunr.QueryParseError("Unexpected lexeme type '"+lexeme.type+"'",lexeme.start,lexeme.end);}};lunr.QueryParser.parseEditDistance=function(parser){var lexeme=parser.consumeLexeme();
if(void 0!=lexeme){var editDistance=parseInt(lexeme.str,10);if(isNaN(editDistance))throw new lunr.QueryParseError("edit distance must be numeric",lexeme.start,lexeme.end);parser.currentClause.editDistance=editDistance;lexeme=parser.peekLexeme();if(void 0==lexeme)parser.nextClause();else switch(lexeme.type){case lunr.QueryLexer.TERM:return parser.nextClause(),lunr.QueryParser.parseTerm;case lunr.QueryLexer.FIELD:return parser.nextClause(),lunr.QueryParser.parseField;case lunr.QueryLexer.EDIT_DISTANCE:return lunr.QueryParser.parseEditDistance;
case lunr.QueryLexer.BOOST:return lunr.QueryParser.parseBoost;case lunr.QueryLexer.PRESENCE:return parser.nextClause(),lunr.QueryParser.parsePresence;default:throw parser="Unexpected lexeme type '"+lexeme.type+"'",new lunr.QueryParseError(parser,lexeme.start,lexeme.end);}}};lunr.QueryParser.parseBoost=function(parser){var lexeme=parser.consumeLexeme();if(void 0!=lexeme){var boost=parseInt(lexeme.str,10);if(isNaN(boost))throw new lunr.QueryParseError("boost must be numeric",lexeme.start,lexeme.end);
parser.currentClause.boost=boost;lexeme=parser.peekLexeme();if(void 0==lexeme)parser.nextClause();else switch(lexeme.type){case lunr.QueryLexer.TERM:return parser.nextClause(),lunr.QueryParser.parseTerm;case lunr.QueryLexer.FIELD:return parser.nextClause(),lunr.QueryParser.parseField;case lunr.QueryLexer.EDIT_DISTANCE:return lunr.QueryParser.parseEditDistance;case lunr.QueryLexer.BOOST:return lunr.QueryParser.parseBoost;case lunr.QueryLexer.PRESENCE:return parser.nextClause(),lunr.QueryParser.parsePresence;
default:throw parser="Unexpected lexeme type '"+lexeme.type+"'",new lunr.QueryParseError(parser,lexeme.start,lexeme.end);}}};(function(root,factory){"function"===typeof define&&define.amd?define(factory):"object"===typeof exports?module.exports=factory():root.lunr=factory()})(this,function(){return lunr})})()}
//# sourceMappingURL=module$node_modules$lunr$lunr.js.map
