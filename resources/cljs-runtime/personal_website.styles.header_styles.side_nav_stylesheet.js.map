{"version":3,"sources":["personal_website/styles/header_styles/side_nav_stylesheet.cljs"],"mappings":"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","names":["garden.selectors/selector","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-elements","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-arrow","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-container-2","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-subpage-container","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-subpage-elements","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-background","cljs.core/deref","clicked?","re_frame.core.subscribe","width","garden.units/px","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-container-1","show?","delay","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-container-2-styles","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-elements-styles","garden.selectors/&","garden.selectors/hover","garden.selectors/after","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-arrow-styles","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-subpage-container-styles","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-subpage-elements-styles","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-arrow-selector-skeleton","id","transform","exist?","garden.selectors/nth-child","G__45146","garden.selectors._GT_","G__45147","personal-website.styles.header-styles.side-nav-stylesheet/reset-db","handles","p1__45148#","cljs.core.map","cljs.core/PersistentVector","seq__45149","cljs.core/seq","chunk__45152","count__45153","i__45154","vec__45163","cljs.core.nth","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__45166","cljs.core/first","cljs.core/next","prefix","handle","val","cljs.core.get","re-frame.core/dispatch","personal-website.styles.header-styles.side-nav-stylesheet/side-nav-selector","clicked-list","clicked-ham?","reset?","iter__4529__auto__","s__45170","cljs.core/LazySeq","c__4527__auto__","size__4528__auto__","b__45172","cljs.core/chunk-buffer","i__45171","vec__45173","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__45169","vec__45176","cljs.core/cons","cljs.core/rest","k","v","cljs.core.into","personal-website.styles.header-styles.side-nav-stylesheet/side-nav"],"sourcesContent":["(ns personal-website.styles.header-styles.side-nav-stylesheet\n  (:require-macros [garden.def :refer [defkeyframes]])\n  (:require [re-frame.core :as re-frame]\n            [garden.selectors :as s]\n            [garden.units :refer [px vw]]\n            [personal-website.db :as db]))\n\n\n(s/defclass side-nav-elements)\n(s/defclass side-nav-arrow)\n(s/defclass side-nav-container-2)\n(s/defclass side-nav-subpage-container)\n(s/defclass side-nav-subpage-elements)\n\n(defn side-nav-background []\n  (let [clicked? @(re-frame/subscribe [:homepage/hamburger-menu])\n        width (if clicked? \"35%\" \"0%\")]\n   [:#side-nav-background\n    {:background \"white\" ;\"#fffffb\"\n     :height \"110%\"\n     :margin-top (px -100)\n     :width width\n     :position \"fixed\"\n     :right (px 0)\n     :transition \"width 0.75s ease-in-out\"\n     }]))\n\n(defn side-nav-container-1 []\n  (let [clicked? @(re-frame/subscribe [:homepage/hamburger-menu])\n        show? (if clicked? \"100%\" \"0%\")\n        delay (if clicked?  \"0.35s\" \"0.25s\")]\n  [:#side-nav-container-1 {:margin-top (px 150)\n                           :padding (px 0)\n                           :opacity show?\n                           :transition \"0.25s\"\n                           :transition-delay delay}]))\n\n(defn side-nav-container-2-styles []\n  [:.side-nav-container-2\n   {:padding-left (px 0)\n    :text-align \"center\"}])\n\n(defn side-nav-elements-styles []\n  [:.side-nav-elements\n   {:font-size (px 15)\n    :font-family \"WorkSans\"\n    :text-transform \"uppercase\"\n    :color \"#333\"\n    :margin-top (px 40)\n    :text-align \"center\"}\n   [(s/& s/hover) {:color \"#000\"\n                   :cursor \"pointer\"}]\n   [(s/& s/after) {:content \"''\"\n                   :width \"50%\"\n                   :margin-top (px 20)\n                   :height (px 1)\n                   :background-color \"black\"\n                   :display \"block\"\n                   :margin \"auto\"}]])\n\n\n(defn side-nav-arrow-styles []\n    [:.side-nav-arrow\n     {:display \"inline-block\"\n      :position \"relative\"\n      :margin \"0px 0px 2px 10px\"\n      :border \"solid black\"\n      :border-width \"0 2px 2px 0\"\n      :padding (px 3)\n      :text-align \"center\"}])\n\n(defn side-nav-subpage-container-styles []\n  [:.side-nav-subpage-container\n   {:padding-left (px 0)\n    :text-align \"center\"\n    :margin-top (px 25)\n    :display \"block\"}])\n\n\n(defn side-nav-subpage-elements-styles []\n  [:.side-nav-subpage-elements\n   {:font-size (px 12.5)\n    :margin-top (px 10)\n    :display \"none\"\n    :cursor \"pointer\"\n    :color \"#333\"}\n   [(s/& s/hover) {:color \"#000\"}]])\n\n(defn side-nav-arrow-selector-skeleton [id clicked?]\n  (let [transform (if clicked? \"rotate(45deg)\" \"rotate(-45deg)\")\n        exist? (if clicked? \"block\" \"none\")\n        show? (if clicked? \"100%\" \"0%\")]\n    [[(-> (s/nth-child id)\n         side-nav-container-2\n         (s/> side-nav-elements)\n         (s/> side-nav-arrow)) {:transform transform\n                                :transition \"transform 0.5s\"}]\n     [(-> (s/nth-child id)\n          side-nav-container-2\n          (s/> side-nav-subpage-container)\n          (s/> side-nav-subpage-elements)) (if clicked?\n                                             {:display \"block\"}\n                                             {:display \"none\"})]]))\n\n(defn reset-db []\n  (let [handles (map #(vector :homepage/side-nav-arrow %) [:2 :3 :4 :5])]\n    (doseq [[prefix id :as handle] handles\n            :let [val (get @(re-frame/subscribe [prefix]) id)]\n            :when val]\n      (re-frame/dispatch handle))))\n\n(defn side-nav-selector []\n  (let [clicked-list @(re-frame/subscribe [:homepage/side-nav-arrow])\n        clicked-ham? @(re-frame/subscribe [:homepage/hamburger-menu])\n        reset? (if clicked-ham? nil (reset-db))]\n    (->> (for [[k v] clicked-list]\n          (side-nav-arrow-selector-skeleton k v))\n        (into []))))\n\n\n(defn side-nav []\n  [(side-nav-background)\n   (side-nav-container-1)\n   (side-nav-container-2-styles)\n   (side-nav-elements-styles)\n   (side-nav-arrow-styles)\n   (side-nav-subpage-container-styles)\n   (side-nav-subpage-elements-styles)\n   (side-nav-selector)])\n"]}