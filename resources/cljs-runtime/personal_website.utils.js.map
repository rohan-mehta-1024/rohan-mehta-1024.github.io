{"version":3,"sources":["personal_website/utils.cljs"],"mappings":";AAEA,AAAA,AAAMA,AAAMC,AAAKC;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEaA,AACYD;;AAGzB,AAAA,AAAME;AAAN,AACC,AAAMC,AAAI,AAAA,AAAiBC;AACrBC,AAAO;AAAA,AAAO,AAAiBF;;AADrC,AAEE,AAAA,AAACG,AAAcD;;AAElB,AAAA,AAAME,AAAcC;AAApB,AACQ,AAAA,AAACC,AAAqBD,AACtB,AAACE,AAAIC,AACL,AAAA,AAACC;;AAGT,AAAA,AAAMC,AAAgBL;AAAtB,AACO,AAAA,AAACC,AAAqBD,AACtB,AAACE,AAAII,AACL,AAAA,AAACF","names":["personal-website.utils/link","text","link","personal-website.utils/scroll-to-top","obj","js/document","scroll","js/setTimeout","personal-website.utils/format-title","title","clojure.string.split","cljs.core.map","clojure.string/lower-case","clojure.string.join","personal-website.utils/unformat-title","clojure.string/capitalize"],"sourcesContent":["(ns personal-website.utils)\n\n(defn link [text link]\n  [:a {:class \"post-links\"\n       :href link\n       :target \"_blank\"} text])\n\n\n(defn scroll-to-top []\n (let [obj (.getElementById js/document \"top\")\n       scroll (fn [] (.scrollIntoView obj))]\n   (js/setTimeout scroll 5)))\n\n(defn format-title [title]\n   (->> (clojure.string/split title \" \")\n        (map clojure.string/lower-case)\n        (clojure.string/join \"-\")))\n\n\n(defn unformat-title [title]\n  (->> (clojure.string/split title \"-\")\n       (map clojure.string/capitalize)\n       (clojure.string/join \" \")))\n"]}