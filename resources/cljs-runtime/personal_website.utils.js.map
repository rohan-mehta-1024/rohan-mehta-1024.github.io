{"version":3,"sources":["personal_website/utils.cljs"],"mappings":";AAEA,AAAA,AAAMA,AAAMC,AAAKC;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEaA,AACYD;;AAEzB,AAAA,AAAA,AAAA,AAAKE;AAGL,AAAA,AAAMC;AAAN,AACC,AAAMC,AAAI,AAAA,AAAiBC;AACrBC,AAAO;AAAA,AAAO,AAAiBF;;AADrC,AAEE,AAAA,AAACG,AAAcD;;AAElB,AAAA,AAAME,AAAcC;AAApB,AACQ,AAAA,AAACC,AAAqBD,AACtB,AAACE,AAAIC,AACL,AAAA,AAACC;;AAET,AAAA,AAAMC,AAAgBL;AAAtB,AAGO,AAACE,AAAI,AAAKK,AAGV,AAAA,AAACH;AAHI,AACE,AAAMI,AAAE,AAACf,AAAAA,AAAAA,AAAcc,AAAAA;AAAvB,AACE,AAAIC;AAAEA;;AAAED;;AAJjB,AAAA,AAACN,AAAqBD,AACtB,AAACE,AAAII;;AAMZ,AAAA,AAAMG,AAAgBC;AAAtB,AACE,AAAMf,AAAI,AAAiBC,AAAYc;AAAvC,AACE,AAAiBf;;AAErB,AAAA,AAAMgB,AAAeC,AAAIC,AAAYH;AAArC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEaG,AACM;AAAA,AAAO,AAACJ,AAAeC;AAH1C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMsCE;;AAEtC,AAAA,AAAME,AAAMvB;AAAZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgDA","names":["personal-website.utils/link","text","link","personal-website.utils/special-words","personal-website.utils/scroll-to-top","obj","js/document","scroll","js/setTimeout","personal-website.utils/format-title","title","clojure.string.split","cljs.core.map","clojure.string/lower-case","clojure.string.join","personal-website.utils/unformat-title","clojure.string/capitalize","x","y","personal-website.utils/scroll-to-this","el-id","personal-website.utils/make-footnote","num","footnote-id","personal-website.utils/bold"],"sourcesContent":["(ns personal-website.utils)\n\n(defn link [text link]\n  [:a {:class \"post-links\"\n       :href link\n       :target \"_blank\"} text])\n\n(def special-words\n  {\"Mnist\" \"MNIST\"})\n\n(defn scroll-to-top []\n (let [obj (.getElementById js/document \"top\")\n       scroll (fn [] (.scrollIntoView obj))]\n   (js/setTimeout scroll 5)))\n\n(defn format-title [title]\n   (->> (clojure.string/split title \" \")\n        (map clojure.string/lower-case)\n        (clojure.string/join \"_\")))\n\n(defn unformat-title [title]\n  (->> (clojure.string/split title \"_\")\n       (map clojure.string/capitalize)\n       (map (fn [x]\n              (let [y (special-words x)]\n                (if y y x))) )\n       (clojure.string/join \" \")))\n\n(defn scroll-to-this [el-id]\n  (let [obj (.getElementById js/document el-id)]\n    (.scrollIntoView obj)))\n\n(defn make-footnote [num footnote-id el-id]\n  [:sup {:class \"post-links\"\n         :id footnote-id\n         :on-click (fn [] (scroll-to-this el-id))\n         :style {:padding-top \"100px\"\n                 :font-size \"15px\"\n                 :line-height \"0px\"}} num])\n\n(defn bold [text]\n  [:span {:style {:font-family \"WorkSansBold\"}} text])\n"]}