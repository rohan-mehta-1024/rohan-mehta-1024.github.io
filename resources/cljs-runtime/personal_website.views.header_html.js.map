{"version":3,"sources":["personal_website/views/header_html.cljs"],"mappings":";AAOA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AA+BL,AAAA,AAAMC,AAAYC;AAAlB,AACE,AAAMC,AAAS,AAAAC,AAAC,AAAA,AAAA,AAACJ,AAAAA,AAAAA;AAAF,AAAA,AAAAI,AAAAA,AAAA,AAAAA,AAAA;;AACTC,AAAU,AAAA,AAAAC,AAACC;AAAD,AAAO,AAAAD,AAACE,AAAEN;AAAeC;AADzC,AAEE,AAAMD,AAAYO;AAAAA,AACZ,AAACC,AAA0BD;AADfA,AAEZ,AAAA,AAACE,AAAqBF;AAFVA,AAGZ,AAAA,AAACG,AAAwBH;AAHbA,AAIZ,AAAA,AAAWA;AAJjB,AAKM,AAAIJ;AACF,AAAA,AAAKI;;AACL,AAAA,AAAKA;;;AAEjB,AAAA,AAAMI;AAAN,AACE,AAAA,AAAAC,AAAK,AAAA,AAAA,AAACC;AACJ,AAAI,AAAA,AAAA,AAACC;;AACD,AAAA,AAAA,AAAA,AAACA;;AAFP;;;AAKF,AAAA,AAAMC,AAAkBC,AAAGC,AAAMC,AAAMlB;AAAvC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGgB,AAAqBC,AACX,AAAClB,AAAWC,AACXkB,AACG,AAACC,AAAKC,AAAoBT,AACxCX;;AAEH,AAAA,AAAMqB,AAAUC;AAAhB,AACO,AAAAC,AAAA,AAAAC,AAOA,AAAA,AAAA,AAAA,AAACkB,AACD,AAAA,AAACA,AACD,AAAA,AAACI;AATD,AAAA,AAAArB,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AAq4E4C,AAAAwC,AAAA7C;AAr4E5CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMlC;AAAN,AAAA,AACY4C,AAAa,AAAA,AAACtC,AAAEN;AAChBiB,AAAM,AAAA,AAAA,AAAI2B;AACV5B,AAAG,AAAA,AAAA,AAAI4B;AACP1B,AAAM,AAAA,AAAA,AAAI0B;AACVC,AAAK,AAAA,AAAID,AAAgB,AAAC7C,AAAWC;AALjD,AAAA,AAAA,AAAAoC,AAAAJ,AAME,AAACjB,AAAiBC,AAAGC,AAAMC,AAAMlB;;AANnC,AAAA,AAAAkC,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAhB;;AAAA,AAAAa,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAjB,AAAMxB;AAAN,AAAA,AACY4C,AAAa,AAAA,AAACtC,AAAEN;AAChBiB,AAAM,AAAA,AAAA,AAAI2B;AACV5B,AAAG,AAAA,AAAA,AAAI4B;AACP1B,AAAM,AAAA,AAAA,AAAI0B;AACVC,AAAK,AAAA,AAAID,AAAgB,AAAC7C,AAAWC;AALjD,AAAA,AAAA0C,AAAA,AAAAH,AAAA,AAAAI,AAAAnB,AAME,AAACT,AAAiBC,AAAGC,AAAMC,AAAMlB;;;AANnC;;;;AAAA,AAAA;;AAAA,AAAA,AAAAuB,AAAkBD;;;AAWzB,AAAA,AAAMyB,AAAkBC,AAAKC;AAA7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEsB;AAAA,AAAO,AAAA,AAAA,AAAA,AAAA,AAACnC,AAAkDmC;AAFhF,AAAA,AAAA,AAAA,AAAA,AAAA,AAIyB;AAAA,AAAO,AAAA,AAAA,AAAA,AAAA,AAACnC,AAAiDmC;AAC7ED,AACH,AAAM,AAAA,AAAKC,AAAO,AAAA,AAAA,AAACC,AAAOpD,AAAcuB;;AAE1C,AAAA,AAAM8B;AAAN,AACE,AAAA,AAAAvC,AAAK,AAAA,AAAA,AAACC;AACD,AAAA,AAAA,AAAA,AAACC;;AADN;;AAEK,AAAA,AAAA,AAACA;;AACF,AAACM;;AAEP,AAAA,AAAMgC;AAAN,AACE,AAAM,AAAA7B,AAAA,AAAA8B,AAC6B9C;AAD7B,AAAA,AAAAkB,AAAA,AAAA;AAAA,AAAA,AAAA4B,AAAAA;;AAAA,AAAA,AAAA3B,AAAA,AAAAC,AAAA0B;AAAA,AAAA,AAAA3B;AAAA,AAAA,AAAA2B,AAAA3B;AAAA,AAAA,AAAA,AAAAE,AAAAyB;AAAA,AAAAxB,AA22E2C,AAAAwC,AAAAhB;AA32E3CvB,AAAA,AAAAC,AAAAF;AAAAyB,AAAA,AAAArB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAyB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAzB;AAAA,AAAA0B,AAAA,AAAArB,AAAAN,AAAA0B;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAOR;AAAP,AAAAS,AAAAD,AAAA,AAAA,AAAYP;AAAZ,AAAA,AAAA,AAAAb,AAAAkB,AACC,AAACP,AAAiBC,AAAKC;;AADxB,AAAA,AAAAM,AAAA;;;;AAAA;;;;;AAAA,AAAAlB,AAAA,AAAAC,AAAAgB,AAAA,AAAAI,AAAA,AAAAlB,AAAAa;;AAAA,AAAAhB,AAAA,AAAAC,AAAAgB,AAAA;;;AAAA,AAAAK,AAAA,AAAAlB,AAAAY;AAAA,AAAAI,AAAAE,AAAA,AAAA,AAAOX;AAAP,AAAAS,AAAAE,AAAA,AAAA,AAAYV;AAAZ,AAAA,AAAAP,AAAA,AAAAgB,AAAA,AAAAf,AAAAU,AACC,AAACN,AAAiBC,AAAKC;;;AADxB;;;;AAAA,AAAA;;AAAA,AAAA,AAAA1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAC6BhB,AAC9B,AAAA,AAAA,AAAA,AAACmC,AAAiCnC;AADJA,AAE9B,AAAA,AAACmC,AAASnC;AAFoBA,AAG9B,AAAA,AAACuC,AAAQvC;AAJd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKWA,AAEmB4C;;AAEhC,AAAA,AAAMS;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEqB;AAAA,AAAO,AAAA,AAAA,AAAC9C;AAF7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAOA,AAAA,AAAM+C,AAAkBC,AAAUC;AAAlC,AACI,AAAAC,AAAA,AAAArC,AAAA,AAAA,AAAA,AAAA,AAAA;AAAAsC,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQI;AAAR,AAAA,AACe,AAAAC,AAAK,AAACT,AAAAA,AAAAA,AAAQQ,AAAAA;AAAd,AAAA,AAAAC;AAAmB,AAACC,AAAKF,AAAIT;;AAA7BU;;;AADf,AAAA,AAEE,AAAA,AAAA,AAAC1D,AAA4CyD;;AAF/C;AAAA,AAAAP;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAH;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;;AAAA,AAAAzC,AAAA,AAAAC,AAAAqC;AAAA,AAAA,AAAAtC;AAAA,AAAA,AAAAsC,AAAAtC;AAAA,AAAA,AAAA,AAAAE,AAAAoC;AAAA,AAAAI,AAAA,AAAAC,AAAAL;AAAA,AAAA,AAAA,AAAAxB,AAAAwB;AAAAI;AAAA,AAAArC,AAAAqC;AAAA;;;;;;;AAAA,AAAA,AAAA3B,AAAAuB,AAAQO;AAAR,AAAA,AACe,AAAAC,AAAK,AAACT,AAAAA,AAAAA,AAAQQ,AAAAA;AAAd,AAAA,AAAAC;AAAmB,AAACC,AAAKF,AAAIT;;AAA7BU;;;AADf,AAAA,AAEE,AAAA,AAAA,AAAC1D,AAA4CyD;;AAF/C;AAAA,AAAA,AAAAD,AAAAN;AAAA;AAAA;AAAA;;;;;;;AAAA,AAAA,AAAAM,AAAAN;AAAA;AAAA;AAAA;;;;;;;;;AAAA;;;;;AAGF,AAAA,AAAA,AAAClD,AAA4CgD;;AAE/C,AAAA,AAAMY,AAAyBpD;AAA/B,AACE,AAAMqD,AAAM;AAAA,AAAO,AAAA,AAAA,AAAC7D;;AACd6D,AAAM;AAAA,AAAO,AAACvD;;AAAqB,AAAA,AAACwD,AAAcD;;AADxD,AAEK,AAAApD,AAAA,AAAAsD,AAMA,AAAA,AAAA,AAAA,AAACnC,AACD,AAAA,AAACA,AACD,AAAA,AAACI;AARD,AAAA,AAAArB,AAAA,AAAA;AAAA,AAAA,AAAAoD,AAAAA;;AAAA,AAAA,AAAAnD,AAAA,AAAAC,AAAAkD;AAAA,AAAA,AAAAnD;AAAA,AAAA,AAAAmD,AAAAnD;AAAA,AAAA,AAAA,AAAAE,AAAAiD;AAAA,AAAAhD,AAk1E4C,AAAAwC,AAAAQ;AAl1E5C/C,AAAA,AAAAC,AAAAF;AAAAiD,AAAA,AAAA7C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAiD,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAjD;AAAA,AAAA,AAAAK,AAAAN,AAAAkD,AAAM/E;AAAN,AAAA,AACY,AAAA,AAACyE,AAAKzE;AADlB,AAAA,AAAAoC,AAAA0C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGa,AAAC/E,AAAWC,AACR2E,AACd3E;;AALH,AAAA,AAAA+E,AAAA;;;;AAAA,AAAA,AAAAA,AAAA;;;;;AAAA;;;;;AAAA,AAAA1C,AAAA,AAAAC,AAAAwC,AAAA,AAAAE,AAAA,AAAAxC,AAAAqC;;AAAA,AAAAxC,AAAA,AAAAC,AAAAwC,AAAA;;;AAAA,AAAA,AAAArC,AAAAoC,AAAM7E;AAAN,AAAA,AACY,AAAA,AAACyE,AAAKzE;AADlB,AAAA0C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAsC,AAAA,AAAArC,AAAAkC,AAGa,AAAC9E,AAAWC,AACR2E,AACd3E;;AALH,AAAA,AAAA2C,AAAAkC;;;;;;AAAA;;;;AAAA,AAAA;;AAAA,AAAA,AAAAtD,AAAkBD;;;AAUzB,AAAA,AAAM2D,AAAmBjC,AAAKC;AAA9B,AACE,AAAMiC,AAAU,AAAA,AAAIjC,AAAOkC;AAA3B,AAAAvE,AACMwE,AAAU,AAAA,AAAA,AAACvE;AADjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGmB;AAAA,AAAO,AAACgD,AAAiBqB,AAAUE;;AAAU,AAACzE;AAHjE,AAAA,AAAA,AAAA,AAAA,AAGiFqC,AAE/E,AAAM,AAAA,AAAK,AAAA,AAAKC,AAAQ,AAAA,AAAA,AAACC,AAAOpD,AAAc4E;;AAElD,AAAA,AAAMW;AAAN,AACI,AAAM,AAAA9D,AAAA,AAAA+D,AAIkB/E;AAJlB,AAAA,AAAAkB,AAAA,AAAA;AAAA,AAAA,AAAA6D,AAAAA;;AAAA,AAAA,AAAA5D,AAAA,AAAAC,AAAA2D;AAAA,AAAA,AAAA5D;AAAA,AAAA,AAAA4D,AAAA5D;AAAA,AAAA,AAAA,AAAAE,AAAA0D;AAAA,AAAAzD,AA+zEyC,AAAAwC,AAAAiB;AA/zEzCxD,AAAA,AAAAC,AAAAF;AAAA0D,AAAA,AAAAtD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA0D,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA1D;AAAA,AAAA2D,AAAA,AAAAtD,AAAAN,AAAA2D;AAAA,AAAA/B,AAAAgC,AAAA,AAAA,AAAOzC;AAAP,AAAAS,AAAAgC,AAAA,AAAA,AAAYxC;AAAZ,AAAA,AAAA,AAAAb,AAAAmD,AACM,AAACN,AAAkBjC,AAAKC,AACxB,AAAA,AAAA,AAAA,AAACP,AACD,AAAA,AAACA,AACD,AAAA,AAACI;;AAJP,AAAA,AAAA0C,AAAA;;;;AAAA;;;;;AAAA,AAAAnD,AAAA,AAAAC,AAAAiD,AAAA,AAAAG,AAAA,AAAAlD,AAAA8C;;AAAA,AAAAjD,AAAA,AAAAC,AAAAiD,AAAA;;;AAAA,AAAAI,AAAA,AAAAlD,AAAA6C;AAAA,AAAA7B,AAAAkC,AAAA,AAAA,AAAO3C;AAAP,AAAAS,AAAAkC,AAAA,AAAA,AAAY1C;AAAZ,AAAA,AAAAP,AAAA,AAAAgD,AAAA,AAAA/C,AAAA2C,AACM,AAACL,AAAkBjC,AAAKC,AACxB,AAAA,AAAA,AAAA,AAACP,AACD,AAAA,AAACA,AACD,AAAA,AAACI;;;AAJP;;;;AAAA,AAAA;;AAAA,AAAA,AAAAvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAIkBhB,AACnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACmC,AAEsB,AAACvB,AAAK;AAAA,AAAO,AAAA,AAAA,AAACL;AAA+CqC,AAAa5C;AAH9EA,AAInB,AAAA,AAAA,AAAA,AAACmC,AAAkCnC;AAJhBA,AAKnB,AAAA,AAACmC,AAASnC;AALSA,AAMnB,AAAA,AAACuC,AAAQvC;AAVd,AAAA,AAAA,AAAA,AAAA,AAAA,AAWuCA;;AAE3C,AAAA,AAAMqF;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAImBjF,AAChB,AAACyC,AACD,AAACiC,AACD,AAACzB","names":["personal-website.views.header-html/subpage-data","personal-website.views.header-html/format-url","sub-subpage","first-el","fexpr__31539","in-first?","p1__31538#","cljs.core/some","cljs.core._EQ_","$","clojure.string/lower-case","clojure.string.split","clojure.string.join","personal-website.views.header-html/close-search","cljs.core/deref","re_frame.core.subscribe","re-frame.core/dispatch","personal-website.views.header-html/tooltips-element","el","show?","class","cljs.core.comp","personal-website.utils/scroll-to-top","personal-website.views.header-html/tooltips","sub-subpages","iter__4529__auto__","s__31541","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__31543","cljs.core/chunk-buffer","i__31542","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31540","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","placeholder?","link","cljs.core.into","personal-website.views.header-html/subpage-skeleton","text","id","cljs.core.get_in","personal-website.views.header-html/search-fn","personal-website.views.header-html/subpages","s__31547","b__31549","i__31548","vec__31550","cljs.core.nth","iter__31546","vec__31553","personal-website.views.header-html/hamburger-button","personal-website.views.header-html/close-all-others","given-idx","mapping","seq__31556","chunk__31558","count__31559","i__31560","c__4556__auto__","cljs.core/chunk-first","cljs.core/next","key","and__4115__auto__","cljs.core.not_EQ_","personal-website.views.header-html/side-nav-arrow-subpages","close","js/setTimeout","s__31563","b__31565","i__31564","iter__31562","personal-website.views.header-html/side-nav-skeleton","keyworded","cljs.core.keyword","pressed?","personal-website.views.header-html/side-nav","s__31567","b__31569","i__31568","vec__31570","iter__31566","vec__31573","personal-website.views.header-html/header"],"sourcesContent":["(ns personal-website.views.header-html\n  (:require [re-frame.core :as re-frame]\n            [personal-website.db :as db]\n            [personal-website.subs :as subs]\n            [personal-website.utils :as utils]))\n\n\n(def subpage-data\n  [[\"About\"\n    [\"Who I Am\"\n     \"Accomplishments\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Projects\"\n    [\"Entrepreneurial\"\n     \"Synthetic Biology\"\n     \"Computer Science\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Writings\"\n    [\"Poetry\"\n     \"Short Stories\"\n     \"Academic Papers\"\n     \"Personal Essays\"\n     \"Blog Posts\"\n     \"placeholder\"]]\n   [\"Readings\"\n    [\"Fiction\"\n     \"Non-Fiction\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]])\n\n\n(defn format-url [sub-subpage]\n  (let [first-el ((subpage-data 0) 1)\n        in-first? (some #(= sub-subpage %) first-el)]\n    (as-> sub-subpage $\n          (clojure.string/lower-case $)\n          (clojure.string/split $ \" \")\n          (clojure.string/join \"-\" $)\n          (str \"/#/\" $)\n          (if in-first?\n            (str $ \"\")\n            (str $ \"/all\")))))\n\n(defn close-search []\n  (if @(re-frame/subscribe [:homepage/search])\n    (do (re-frame/dispatch [:homepage/search])\n        (re-frame/dispatch [:homepage/search-term \"\"]))\n     nil))\n\n(defn tooltips-element [el show? class sub-subpage]\n  [el {:style {:opacity show?}\n       :href (format-url sub-subpage)\n       :class class\n       :on-click (comp utils/scroll-to-top close-search)}\n   sub-subpage])\n\n(defn tooltips [sub-subpages]\n  (->> (for [sub-subpage sub-subpages\n             :let [placeholder? (= sub-subpage \"placeholder\")\n                   show? (if placeholder? \"0%\" \"100%\")\n                   el (if placeholder? :div :a)\n                   class (if placeholder? \"\" \"subpage-tooltip-elements\")\n                   link (if placeholder? \"\" (format-url sub-subpage))]]\n         (tooltips-element el show? class sub-subpage))\n       (cons {:class \"subpage-tooltips\"})\n       (cons :ul)\n       (into [])))\n\n(defn subpage-skeleton [text id]\n  [:li {:class \"subpage-container-2\"\n        :onMouseLeave (fn [] (re-frame/dispatch [:homepage/subpage-hover [false id]]))}\n    [:div {:class \"subpage-elements\"\n           :onMouseEnter (fn [] (re-frame/dispatch [:homepage/subpage-hover [true id]]))}\n     text]\n  (->> [(dec id) 1] (get-in subpage-data) tooltips)])\n\n(defn search-fn []\n  (if @(re-frame/subscribe [:homepage/search])\n       (re-frame/dispatch [:homepage/search-term \"\"]) nil)\n       (re-frame/dispatch [:homepage/search])\n      (utils/scroll-to-top))\n\n(defn subpages []\n  (as-> (for [[text id] [[\"About\" 1] [\"Projects\" 2] [\"Writings\" 3] [\"Readings\" 4]]]\n         (subpage-skeleton text id)) $\n       (cons {:id \"subpage-container-1\"} $)\n       (cons :ul $)\n       (into [] $)\n       [:nav $ [:img {:src \"/resources/search.svg\"\n                      :id \"search-img-1\"\n                      :on-click search-fn}]]))\n\n(defn hamburger-button []\n    [:div {:class \"ham-menu\"\n           :on-click (fn [] (re-frame/dispatch [:homepage/hamburger-menu]))}\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]])\n\n(defn close-all-others [given-idx mapping]\n    (doseq [key [:2 :3 :4 :5]\n             :when (and (mapping key) (not= key given-idx))]\n      (re-frame/dispatch [:homepage/side-nav-arrow key]))\n  (re-frame/dispatch [:homepage/side-nav-arrow given-idx]))\n\n(defn side-nav-arrow-subpages [sub-subpages]\n  (let [close (fn [] (re-frame/dispatch [:homepage/hamburger-menu]))\n        close (fn [] (utils/scroll-to-top) (js/setTimeout close 50))]\n  (->> (for [sub-subpage sub-subpages\n             :when (not= sub-subpage \"placeholder\")]\n         [:a {:class \"side-nav-subpage-elements\"\n              :href (format-url sub-subpage)\n              :on-click close}\n          sub-subpage])\n       (cons {:class \"side-nav-subpage-container\"})\n       (cons :ul)\n       (into []))))\n\n(defn side-nav-skeleton [text id]\n  (let [keyworded (-> id str keyword)\n        pressed? @(re-frame/subscribe [:homepage/side-nav-arrow])]\n    [[:li {:class \"side-nav-elements\"\n           :on-click (fn [] (close-all-others keyworded pressed?) (close-search))} text\n     [:div {:class \"side-nav-arrow\"}]]\n    (->> [(dec (dec id)) 1] (get-in subpage-data) side-nav-arrow-subpages)]))\n\n(defn side-nav []\n    (as-> (for [[text id] [[\"About\" 2] [\"Projects\" 3] [\"Writings\" 4] [\"Readings\" 5]]]\n           (->> (side-nav-skeleton text id)\n                (cons {:class \"side-nav-container-2\"})\n                (cons :ul)\n                (into []))) $\n         (cons [:img {:src \"/resources/search.svg\"\n                      :id \"search-img-2\"\n                      :on-click (comp (fn [] (re-frame/dispatch [:homepage/hamburger-menu])) search-fn)}] $)\n         (cons {:id \"side-nav-container-1\"} $)\n         (cons :ul $)\n         (into [] $)\n         [:div {:id \"side-nav-background\"} $]))\n\n(defn header []\n  [:header {:id \"page-header\"}\n   [:h1 {:id \"my-name\"}\n    [:a {:href \"/\"\n         :on-click close-search} \"Rohan Mehta\"]]\n   (subpages)\n   (side-nav)\n   (hamburger-button)])\n"]}