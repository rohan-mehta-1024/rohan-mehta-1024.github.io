{"version":3,"sources":["personal_website/views/header_html.cljs"],"mappings":"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","names":["personal-website.views.header-html/subpage-data","personal-website.views.header-html/format-url","sub-subpage","first-el","fexpr__36002","in-first?","p1__35997#","cljs.core/some","cljs.core._EQ_","$","clojure.string/lower-case","clojure.string.split","clojure.string.join","personal-website.views.header-html/tooltips","sub-subpages","iter__4529__auto__","s__36012","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__36014","cljs.core/chunk-buffer","i__36013","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__36011","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","placeholder?","show?","cljs.core.into","personal-website.views.header-html/subpage-skeleton","text","id","re-frame.core/dispatch","cljs.core.get_in","personal-website.views.header-html/subpages","s__36020","b__36022","i__36021","vec__36024","cljs.core.nth","iter__36019","vec__36028","cljs.core/deref","re_frame.core.subscribe","personal-website.views.header-html/hamburger-button","personal-website.views.header-html/close-all-others","given-idx","mapping","seq__36049","chunk__36051","count__36052","i__36053","c__4556__auto__","cljs.core/chunk-first","cljs.core/next","key","and__4115__auto__","cljs.core.not_EQ_","personal-website.views.header-html/side-nav-arrow-subpages","s__36069","b__36071","i__36070","iter__36068","personal-website.views.header-html/side-nav-skeleton","keyworded","cljs.core.keyword","pressed?","personal-website.views.header-html/side-nav","s__36073","b__36075","i__36074","vec__36076","iter__36072","vec__36079","personal-website.views.header-html/header"],"sourcesContent":["(ns personal-website.views.header-html\n  (:require [re-frame.core :as re-frame]\n            [personal-website.db :as db]\n            [personal-website.subs :as subs]))\n\n(def subpage-data\n  [[\"About\"\n    [\"Who I Am\"\n     \"Accomplishments\"\n     \"Current Endeavors\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Projects\"\n    [\"Engineering\"\n     \"Synthetic Biology\"\n     \"Computer Science\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Writings\"\n    [\"Poetry\"\n     \"Short Stories\"\n     \"Academic Papers\"\n     \"Personal Essays\"\n     \"Blog Posts\"]]\n   [\"Readings\"\n    [\"Books & Novels\"\n     \"Articles & Essays\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]])\n\n(defn format-url [sub-subpage]\n  (let [first-el ((subpage-data 0) 1)\n        in-first? (some #(= sub-subpage %) first-el)\n        ]\n    (as-> sub-subpage $\n          (clojure.string/lower-case $)\n          (clojure.string/split $ \" \")\n          (clojure.string/join \"-\" $)\n          (str \"/\" $)\n          (if in-first?\n            (str $ \"\")\n            (str $ \"/all\")))))\n\n(defn tooltips [sub-subpages]\n  (->> (for [sub-subpage sub-subpages\n             :let [placeholder? (= sub-subpage \"placeholder\")\n                   show? (if placeholder? \"0%\" \"100%\")]]\n         [:a {:style {:opacity show?}\n              :href (format-url sub-subpage)\n              :class \"subpage-tooltip-elements\"}\n              sub-subpage])\n       (cons {:class \"subpage-tooltips\"})\n       (cons :ul)\n       (into [])))\n\n(defn subpage-skeleton [text id]\n  [:li {:class \"subpage-container-2\"\n        :onMouseLeave (fn [] (re-frame/dispatch [:homepage/subpage-hover [false id]]))}\n    [:div {:class \"subpage-elements\"\n           :onMouseEnter (fn [] (re-frame/dispatch [:homepage/subpage-hover [true id]]))}\n     text]\n  (->> [(dec id) 1]\n       (get-in subpage-data)\n       tooltips)])\n\n(defn subpages []\n  (as-> (for [[text id] [[\"About\" 1] [\"Projects\" 2] [\"Writings\" 3] [\"Readings\" 4]]]\n         (subpage-skeleton text id)) $\n       (cons {:id \"subpage-container-1\"} $)\n       (cons :ul $)\n       (into [] $)\n       [:nav $ [:img {:src \"/search.svg\"\n                      :id \"search-img-1\"\n                      :on-click (fn [] (if @(re-frame/subscribe [:homepage/search])\n                                         (re-frame/dispatch [:homepage/search-term \"\"]) nil)\n                                         (re-frame/dispatch [:homepage/search]))}]]))\n\n(defn hamburger-button []\n    [:div {:class \"ham-menu\"\n           :on-click (fn [] (re-frame/dispatch [:homepage/hamburger-menu]))}\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]])\n\n\n(defn close-all-others [given-idx mapping]\n    (doseq [key [:2 :3 :4 :5]\n             :when (and (mapping key) (not= key given-idx))]\n      (re-frame/dispatch [:homepage/side-nav-arrow key]))\n  (re-frame/dispatch [:homepage/side-nav-arrow given-idx]))\n\n\n(defn side-nav-arrow-subpages [sub-subpages]\n  (->> (for [sub-subpage sub-subpages\n             :when (not= sub-subpage \"placeholder\")]\n         [:a {:class \"side-nav-subpage-elements\"\n              :href (format-url sub-subpage)\n              :on-click (fn [] (re-frame/dispatch [:homepage/hamburger-menu])\n                          )\n              } sub-subpage])\n       (cons {:class \"side-nav-subpage-container\"})\n       (cons :ul)\n       (into [])))\n\n\n\n(defn side-nav-skeleton [text id]\n  (let [keyworded (-> id str keyword)\n        pressed? @(re-frame/subscribe [:homepage/side-nav-arrow])]\n    [[:li {:class \"side-nav-elements\"} text\n     [:div {:class \"side-nav-arrow\"\n            :on-click (fn [] (close-all-others keyworded pressed?))}]]\n    (->> [(dec id) 1]\n         (get-in subpage-data)\n         side-nav-arrow-subpages)]))\n\n(defn side-nav []\n    (as-> (for [[text id] [[\"About\" 2] [\"Projects\" 3] [\"Writings\" 4] [\"Readings\" 5]]]\n           (->> (side-nav-skeleton text id)\n                (cons {:class \"side-nav-container-2\"})\n                (cons :ul)\n                (into []))) $\n         (cons [:img {:src \"/search.svg\" :id \"search-img-2\"}] $\n               );:class \"side-nav-elements\"\n        ;              :style {:text-align \"center\"\n        ;                      :width \"35px\"}}] $)\n         (cons {:id \"side-nav-container-1\"} $)\n         (cons :ul $)\n         (into [] $)\n         [:div {:id \"side-nav-background\"} $]\n         ))\n\n(defn header []\n  [:header {:id \"page-header\"}\n   [:h1 {:id \"my-name\"}\n    [:a {:href \"/\"\n         :on-click (fn [] (if @(re-frame/subscribe [:homepage/search])\n                                (do\n                                  (re-frame/dispatch [:homepage/search])\n                                  (re-frame/dispatch [:homepage/search-term \"\"]))\n                                nil))} \"Rohan Mehta\"]]\n   (subpages)\n   (side-nav)\n   (hamburger-button)\n   ])\n"]}