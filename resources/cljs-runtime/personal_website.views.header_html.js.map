{"version":3,"sources":["personal_website/views/header_html.cljs"],"mappings":"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","names":["personal-website.views.header-html/subpage-data","personal-website.views.header-html/s","obj","js/document","scroll","js/setTimeout","personal-website.views.header-html/format-url","sub-subpage","first-el","fexpr__35871","in-first?","p1__35870#","cljs.core/some","cljs.core._EQ_","$","clojure.string/lower-case","clojure.string.split","clojure.string.join","personal-website.views.header-html/tooltips","sub-subpages","iter__4529__auto__","s__35873","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__35875","cljs.core/chunk-buffer","i__35874","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__35872","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","placeholder?","show?","el","class","link","personal-website.utils/scroll-to-top","cljs.core.into","personal-website.views.header-html/subpage-skeleton","text","id","re-frame.core/dispatch","cljs.core.get_in","personal-website.views.header-html/subpages","s__35877","b__35879","i__35878","vec__35880","cljs.core.nth","iter__35876","vec__35883","cljs.core/deref","re_frame.core.subscribe","personal-website.views.header-html/hamburger-button","personal-website.views.header-html/close-all-others","given-idx","mapping","seq__35886","chunk__35888","count__35889","i__35890","c__4556__auto__","cljs.core/chunk-first","cljs.core/next","key","and__4115__auto__","cljs.core.not_EQ_","personal-website.views.header-html/side-nav-arrow-subpages","close","cljs.core.print","x","s__35893","b__35895","i__35894","iter__35892","personal-website.views.header-html/side-nav-skeleton","keyworded","cljs.core.keyword","pressed?","personal-website.views.header-html/side-nav","s__35897","b__35899","i__35898","vec__35900","iter__35896","vec__35903","personal-website.views.header-html/header"],"sourcesContent":["(ns personal-website.views.header-html\n  (:require [re-frame.core :as re-frame]\n            [personal-website.db :as db]\n            [personal-website.subs :as subs]\n            [personal-website.utils :as utils]\n            ))\n\n\n\n\n(def subpage-data\n  [[\"About\"\n    [\"Who I Am\"\n     \"Accomplishments\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Projects\"\n    [\"Engineering\"\n     \"Synthetic Biology\"\n     \"Computer Science\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]\n   [\"Writings\"\n    [\"Poetry\"\n     \"Short Stories\"\n     \"Academic Papers\"\n     \"Personal Essays\"\n     \"Blog Posts\"\n     \"placeholder\"]]\n   [\"Readings\"\n    [\"Books & Novels\"\n     \"Articles & Essays\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"\n     \"placeholder\"]]])\n\n\n     (defn s []\n      (let [obj (.getElementById js/document \"top\")\n            scroll (fn [] (.scrollIntoView obj))]\n        (js/setTimeout scroll 5)))\n\n\n(defn format-url [sub-subpage]\n  (let [first-el ((subpage-data 0) 1)\n        in-first? (some #(= sub-subpage %) first-el)]\n    (as-> sub-subpage $\n          (clojure.string/lower-case $)\n          (clojure.string/split $ \" \")\n          (clojure.string/join \"-\" $)\n          (str \"/#/\" $)\n          (if in-first?\n            (str $ \"\")\n            (str $ \"/all\")))))\n\n\n(defn tooltips [sub-subpages]\n  (->> (for [sub-subpage sub-subpages\n             :let [placeholder? (= sub-subpage \"placeholder\")\n                   show? (if placeholder? \"0%\" \"100%\")\n                   el (if placeholder? :div :a)\n                   class (if placeholder? \"\" \"subpage-tooltip-elements\")\n                   link (if placeholder? \"\" (format-url sub-subpage))]]\n         [el {:style {:opacity show?}\n              :href (format-url sub-subpage)\n              :class class\n              :on-click utils/scroll-to-top}\n              sub-subpage])\n       (cons {:class \"subpage-tooltips\"})\n       (cons :ul)\n       (into [])))\n\n(defn subpage-skeleton [text id]\n  [:li {:class \"subpage-container-2\"\n        :onMouseLeave (fn [] (re-frame/dispatch [:homepage/subpage-hover [false id]]))}\n    [:div {:class \"subpage-elements\"\n           :onMouseEnter (fn [] (re-frame/dispatch [:homepage/subpage-hover [true id]]))}\n     text]\n  (->> [(dec id) 1]\n       (get-in subpage-data)\n       tooltips)])\n\n(defn subpages []\n  (as-> (for [[text id] [[\"About\" 1] [\"Projects\" 2] [\"Writings\" 3] [\"Readings\" 4]]]\n         (subpage-skeleton text id)) $\n       (cons {:id \"subpage-container-1\"} $)\n       (cons :ul $)\n       (into [] $)\n       [:nav $ [:img {:src \"/resources/search.svg\"\n                      :id \"search-img-1\"\n                      :on-click (fn [] (if @(re-frame/subscribe [:homepage/search])\n                                         (re-frame/dispatch [:homepage/search-term \"\"]) nil)\n                                         (re-frame/dispatch [:homepage/search]))}]]))\n\n(defn hamburger-button []\n    [:div {:class \"ham-menu\"\n           :on-click (fn [] (re-frame/dispatch [:homepage/hamburger-menu]))}\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]\n     [:div {:class \"lines\"}]])\n\n\n(defn close-all-others [given-idx mapping]\n    (doseq [key [:2 :3 :4 :5]\n             :when (and (mapping key) (not= key given-idx))]\n      (re-frame/dispatch [:homepage/side-nav-arrow key]))\n  (re-frame/dispatch [:homepage/side-nav-arrow given-idx]))\n\n\n(defn side-nav-arrow-subpages [sub-subpages]\n  (let [close (fn [] (re-frame/dispatch [:homepage/hamburger-menu]) (print \"hoot\"))\n        x (fn [] (js/setTimeout close 50))]\n  (->> (for [sub-subpage sub-subpages\n             :when (not= sub-subpage \"placeholder\")]\n         [:a {:class \"side-nav-subpage-elements\"\n              :href (format-url sub-subpage)\n              :on-click x\n              } sub-subpage])\n       (cons {:class \"side-nav-subpage-container\"})\n       (cons :ul)\n       (into []))))\n\n\n\n(defn side-nav-skeleton [text id]\n  (let [keyworded (-> id str keyword)\n        pressed? @(re-frame/subscribe [:homepage/side-nav-arrow])]\n    [[:li {:class \"side-nav-elements\"\n           :on-click (fn [] (close-all-others keyworded pressed?))} text\n     [:div {:class \"side-nav-arrow\"\n            }]]\n    (->> [(dec (dec id)) 1]\n         (get-in subpage-data)\n         side-nav-arrow-subpages)]))\n\n(defn side-nav []\n    (as-> (for [[text id] [[\"About\" 2] [\"Projects\" 3] [\"Writings\" 4] [\"Readings\" 5]]]\n           (->> (side-nav-skeleton text id)\n                (cons {:class \"side-nav-container-2\"})\n                (cons :ul)\n                (into []))) $\n         (cons [:img {:src \"/resources/search.svg\"\n                      :id \"search-img-2\"\n                      :on-click (fn [] (if @(re-frame/subscribe [:homepage/search])\n                                         (re-frame/dispatch [:homepage/search-term \"\"]) nil)\n                                         (re-frame/dispatch [:homepage/hamburger-menu])\n                                         (re-frame/dispatch [:homepage/search])\n                                         )}] $)\n         (cons {:id \"side-nav-container-1\"} $)\n         (cons :ul $)\n         (into [] $)\n         [:div {:id \"side-nav-background\"} $]))\n\n(defn header []\n  [:header {:id \"page-header\"}\n   [:h1 {:id \"my-name\"}\n    [:a {:href \"/\"\n         :on-click (fn [] (if @(re-frame/subscribe [:homepage/search])\n                                (do\n                                  (re-frame/dispatch [:homepage/search])\n                                  (re-frame/dispatch [:homepage/search-term \"\"]))\n                                nil))} \"Rohan Mehta\"]]\n   (subpages)\n   (side-nav)\n   (hamburger-button)\n   ])\n"]}