{"version":3,"sources":["personal_website/views/homepage_views/homepage_html.cljs"],"mappings":";AAQA,AAAA,AAAMA;AAAN,AACE,AAAA,AAAAC,AAAMC,AAAY,AAAA,AAAA,AAACC;AACbC,AAAI,AAAA,AAAA,AAAIF;AADd,AAOM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACG,AAAK,AAACC,AACP,AAACD,AAAK,AAACE,AACP,AAACF,AAAK,AAACG,AACP,AAACH,AAAK,AAACI","names":["personal-website.views.homepage-views.homepage-html/homepage-html","cljs.core/deref","searching?","re_frame.core.subscribe","pos","cljs.core.conj","personal-website.views.header-html/header","personal-website.views.search-html/search-html","personal-website.views.homepage-views.page-content-html/page-content","personal-website.views.footer-html/footer"],"sourcesContent":["(ns personal-website.views.homepage-views.homepage-html\n  (:require [re-frame.core :as re-frame]\n            [personal-website.views.header-html :refer [header]]\n            [personal-website.views.homepage-views.page-content-html :refer [page-content]]\n            [personal-website.views.footer-html :refer [footer]]\n            [personal-website.views.search-html :refer [search-html]]))\n\n\n(defn homepage-html []\n  (let [searching? @(re-frame/subscribe [:homepage/search])\n        pos (if searching? \"absolute\" \"relative\")]\n    (-> [:div {:style {:id \"super-container\"\n                       :position \"relative\"\n                       :min-height \"100%\"\n                       :width \"100%\"}}]\n\n        (conj (header))\n        (conj (search-html))\n        (conj (page-content))\n        (conj (footer)))))\n"]}